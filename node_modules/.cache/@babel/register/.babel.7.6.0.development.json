{
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _server = _interopRequireDefault(require(\"./server\"));\n\nrequire(\"@babel/polyfill\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction main() {\n  return _main.apply(this, arguments);\n}\n\nfunction _main() {\n  _main = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _server[\"default\"].listen(9999);\n\n          case 2:\n            console.log('Escuchando en puerto 9999');\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _main.apply(this, arguments);\n}\n\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1haW4iLCJhcHAiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUNBOztBQUNBOzs7Ozs7OztTQUVlQSxJOzs7Ozs7OzBCQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNVQyxtQkFBSUMsTUFBSixDQUFXLElBQVgsQ0FEVjs7QUFBQTtBQUVJQyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyQkFBWjs7QUFGSjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O0FBS0FKLElBQUkiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxEaWVnb1xcRG9jdW1lbnRzXFxHaXRIdWJcXFNlcnZcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBJbmljaW8gZGUgbGEgQXBsaWNhY2lvbiAgKi9cclxuaW1wb3J0IGFwcCBmcm9tICcuL3NlcnZlcidcclxuaW1wb3J0ICdAYmFiZWwvcG9seWZpbGwnXHJcblxyXG5hc3luYyBmdW5jdGlvbiBtYWluKCl7XHJcbiAgICBhd2FpdCBhcHAubGlzdGVuKDk5OTkpO1xyXG4gICAgY29uc29sZS5sb2coJ0VzY3VjaGFuZG8gZW4gcHVlcnRvIDk5OTknKVxyXG59XHJcblxyXG5tYWluKCkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "main",
        "app",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AACA;;AACA;;;;;;;;SAEeA,I;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUC,mBAAIC,MAAJ,CAAW,IAAX,CADV;;AAAA;AAEIC,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKAJ,IAAI",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src",
      "sourcesContent": [
        "/** Inicio de la Aplicacion  */\r\nimport app from './server'\r\nimport '@babel/polyfill'\r\n\r\nasync function main(){\r\n    await app.listen(9999);\r\n    console.log('Escuchando en puerto 9999')\r\n}\r\n\r\nmain()"
      ]
    },
    "sourceType": "script",
    "mtime": 1570552896893
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _usuarios = _interopRequireDefault(require(\"./rutas/usuarios\"));\n\nvar _productos = _interopRequireDefault(require(\"./rutas/productos\"));\n\nvar _pedidos = _interopRequireDefault(require(\"./rutas/pedidos\"));\n\nvar _comercios = _interopRequireDefault(require(\"./rutas/comercios\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/** Configuracion del servidor */\n//import bodyParser from 'body-parser';\n\n/** Inicializacion */\nvar app = (0, _express[\"default\"])();\n/** Middlewares */\n//app.use(express.bodyParser())\n\napp.use((0, _morgan[\"default\"])('dev'));\napp.use((0, _express.json)()); //.get('/', getAll );\n\n/** Rutas */\n\napp.use('/api/user', _usuarios[\"default\"]);\napp.use('/api/producto', _productos[\"default\"]);\napp.use('/api/pedido', _pedidos[\"default\"]);\napp.use('/api/comercio', _comercios[\"default\"]); //app.use('/api/mensajes',rutasMensajes)\n\n/** Exporto */\n\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJydXRhc1VzdWFyaW8iLCJydXRhc1Byb2R1Y3RvcyIsInJ1dGFzUGVkaWRvcyIsInJ1dGFzQ29tZXJjaW9zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBS0E7O0FBR0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBWkE7QUFRQTs7QUFPQTtBQUNBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUlBO0FBQ0E7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFTLHdCQUFPLEtBQVAsQ0FBVDtBQUNBRCxHQUFHLENBQUNDLEdBQUosQ0FBUyxvQkFBVCxFLENBS0E7O0FBR0E7O0FBQ0FELEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFdBQVIsRUFBb0JDLG9CQUFwQjtBQUNBRixHQUFHLENBQUNDLEdBQUosQ0FBUSxlQUFSLEVBQXdCRSxxQkFBeEI7QUFDQUgsR0FBRyxDQUFDQyxHQUFKLENBQVEsYUFBUixFQUFzQkcsbUJBQXRCO0FBQ0FKLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGVBQVIsRUFBd0JJLHFCQUF4QixFLENBQ0E7O0FBSUE7O2VBQ2VMLEciLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxEaWVnb1xcRG9jdW1lbnRzXFxHaXRIdWJcXFNlcnZcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBDb25maWd1cmFjaW9uIGRlbCBzZXJ2aWRvciAqL1xyXG5pbXBvcnQgZXhwcmVzcyAsIHsganNvbiB9IGZyb20gJ2V4cHJlc3MnXHJcbi8vaW1wb3J0IGh0dHAgZnJvbSAnaHR0cCdcclxuLy9pbXBvcnQgc29ja2V0ICAgIGZyb20gJ3NvY2tldC5pbydcclxuXHJcblxyXG5pbXBvcnQgbW9yZ2FuIGZyb20gJ21vcmdhbidcclxuXHJcbi8vaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xyXG5pbXBvcnQgcnV0YXNVc3VhcmlvIGZyb20gJy4vcnV0YXMvdXN1YXJpb3MnXHJcbmltcG9ydCBydXRhc1Byb2R1Y3RvcyBmcm9tICcuL3J1dGFzL3Byb2R1Y3RvcydcclxuaW1wb3J0IHJ1dGFzUGVkaWRvcyBmcm9tICcuL3J1dGFzL3BlZGlkb3MnXHJcbmltcG9ydCBydXRhc0NvbWVyY2lvcyBmcm9tICcuL3J1dGFzL2NvbWVyY2lvcydcclxuXHJcblxyXG4vKiogSW5pY2lhbGl6YWNpb24gKi9cclxuY29uc3QgYXBwID0gZXhwcmVzcygpXHJcblxyXG5cclxuXHJcbi8qKiBNaWRkbGV3YXJlcyAqL1xyXG4vL2FwcC51c2UoZXhwcmVzcy5ib2R5UGFyc2VyKCkpXHJcbmFwcC51c2UoIG1vcmdhbignZGV2JykgKVxyXG5hcHAudXNlKCBqc29uKCkgKVxyXG5cclxuXHJcblxyXG5cclxuLy8uZ2V0KCcvJywgZ2V0QWxsICk7XHJcblxyXG5cclxuLyoqIFJ1dGFzICovXHJcbmFwcC51c2UoJy9hcGkvdXNlcicscnV0YXNVc3VhcmlvKVxyXG5hcHAudXNlKCcvYXBpL3Byb2R1Y3RvJyxydXRhc1Byb2R1Y3RvcylcclxuYXBwLnVzZSgnL2FwaS9wZWRpZG8nLHJ1dGFzUGVkaWRvcylcclxuYXBwLnVzZSgnL2FwaS9jb21lcmNpbycscnV0YXNDb21lcmNpb3MpXHJcbi8vYXBwLnVzZSgnL2FwaS9tZW5zYWplcycscnV0YXNNZW5zYWplcylcclxuXHJcblxyXG5cclxuLyoqIEV4cG9ydG8gKi9cclxuZXhwb3J0IGRlZmF1bHQgYXBwIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "rutasUsuario",
        "rutasProductos",
        "rutasPedidos",
        "rutasComercios"
      ],
      "mappings": ";;;;;;;AACA;;AAKA;;AAGA;;AACA;;AACA;;AACA;;;;;;;;AAZA;AAQA;;AAOA;AACA,IAAMA,GAAG,GAAG,0BAAZ;AAIA;AACA;;AACAA,GAAG,CAACC,GAAJ,CAAS,wBAAO,KAAP,CAAT;AACAD,GAAG,CAACC,GAAJ,CAAS,oBAAT,E,CAKA;;AAGA;;AACAD,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAoBC,oBAApB;AACAF,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAwBE,qBAAxB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAsBG,mBAAtB;AACAJ,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAwBI,qBAAxB,E,CACA;;AAIA;;eACeL,G",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src",
      "sourcesContent": [
        "/** Configuracion del servidor */\r\nimport express , { json } from 'express'\r\n//import http from 'http'\r\n//import socket    from 'socket.io'\r\n\r\n\r\nimport morgan from 'morgan'\r\n\r\n//import bodyParser from 'body-parser';\r\nimport rutasUsuario from './rutas/usuarios'\r\nimport rutasProductos from './rutas/productos'\r\nimport rutasPedidos from './rutas/pedidos'\r\nimport rutasComercios from './rutas/comercios'\r\n\r\n\r\n/** Inicializacion */\r\nconst app = express()\r\n\r\n\r\n\r\n/** Middlewares */\r\n//app.use(express.bodyParser())\r\napp.use( morgan('dev') )\r\napp.use( json() )\r\n\r\n\r\n\r\n\r\n//.get('/', getAll );\r\n\r\n\r\n/** Rutas */\r\napp.use('/api/user',rutasUsuario)\r\napp.use('/api/producto',rutasProductos)\r\napp.use('/api/pedido',rutasPedidos)\r\napp.use('/api/comercio',rutasComercios)\r\n//app.use('/api/mensajes',rutasMensajes)\r\n\r\n\r\n\r\n/** Exporto */\r\nexport default app"
      ]
    },
    "sourceType": "script",
    "mtime": 1570336455340
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\rutas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\rutas\\\\usuarios.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\usuarios.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\usuarios.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\usuarios.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
        "sourceFileName": "usuarios.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _userController = require(\"../controllers/userController\");\n\n/** Rutas de test */\nvar router = (0, _express.Router)();\n/** Controladores */\n\n/** Rutas */\n\n/** Obtener todos los usuarios */\nrouter.get('/', _userController.getAll);\n/** Obtener usuario por id */\n\nrouter.get('/:id', _userController.getOne);\n/** registrar usuarios */\n\nrouter.post('/register', _userController.register);\n/** login usuarios */\n\nrouter.post('/login', _userController.login);\n/** consultar perfil */\n\nrouter.get('/consulta', _userController.ensureToken, _userController.consultaPerfil);\n/** consultar usuarios deliverys de pedidos por userid */\n\nrouter.get('/getDeliverysPorUsuario/:iduser', _userController.ensureToken, _userController.chequeoToken, _userController.getDeliverysPorUsuario);\n/** consultar usuarios deliverys de pedidos por deliveryid */\n\nrouter.get('/getUsuariosPorDelivery/:iddelivery', _userController.ensureToken, _userController.chequeoToken, _userController.getUsuariosPorDelivery);\n/** Exporto */\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzdWFyaW9zLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImdldCIsImdldEFsbCIsImdldE9uZSIsInBvc3QiLCJyZWdpc3RlciIsImxvZ2luIiwiZW5zdXJlVG9rZW4iLCJjb25zdWx0YVBlcmZpbCIsImNoZXF1ZW9Ub2tlbiIsImdldERlbGl2ZXJ5c1BvclVzdWFyaW8iLCJnZXRVc3Vhcmlvc1BvckRlbGl2ZXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBR0E7O0FBTUE7O0FBUkc7QUFJSCxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFSTs7QUFjQTs7QUFFSjtBQUNBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxzQkFBaEI7QUFFQTs7QUFDQUYsTUFBTSxDQUFDQyxHQUFQLENBQVcsTUFBWCxFQUFtQkUsc0JBQW5CO0FBRUE7O0FBQ0FILE1BQU0sQ0FBQ0ksSUFBUCxDQUFZLFdBQVosRUFBeUJDLHdCQUF6QjtBQUVBOztBQUNBTCxNQUFNLENBQUNJLElBQVAsQ0FBWSxRQUFaLEVBQXNCRSxxQkFBdEI7QUFFQTs7QUFDQU4sTUFBTSxDQUFDQyxHQUFQLENBQVcsV0FBWCxFQUF1Qk0sMkJBQXZCLEVBQW1DQyw4QkFBbkM7QUFHQTs7QUFDQVIsTUFBTSxDQUFDQyxHQUFQLENBQVcsaUNBQVgsRUFBNkNNLDJCQUE3QyxFQUF5REUsNEJBQXpELEVBQXVFQyxzQ0FBdkU7QUFFQTs7QUFDQVYsTUFBTSxDQUFDQyxHQUFQLENBQVcscUNBQVgsRUFBaURNLDJCQUFqRCxFQUE2REUsNEJBQTdELEVBQTJFRSxzQ0FBM0U7QUFJQTs7ZUFFZVgsTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXERpZWdvXFxEb2N1bWVudHNcXEdpdEh1YlxcU2Vydlxcc3JjXFxydXRhcyIsInNvdXJjZXNDb250ZW50IjpbIiAgIFxyXG4gICAvKiogUnV0YXMgZGUgdGVzdCAqL1xyXG5cclxuaW1wb3J0IHtSb3V0ZXJ9IGZyb20gJ2V4cHJlc3MnXHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKVxyXG5cclxuICAgIC8qKiBDb250cm9sYWRvcmVzICovXHJcblxyXG5pbXBvcnQgeyAgXHJcbiAgICBnZXRBbGwsXHJcbiAgICByZWdpc3RlcixcclxuICAgIGxvZ2luLFxyXG4gICAgY29uc3VsdGFQZXJmaWwsXHJcbiAgICBlbnN1cmVUb2tlbixcclxuICAgIGdldE9uZSxcclxuICAgIGNoZXF1ZW9Ub2tlbixcclxuICAgIGdldERlbGl2ZXJ5c1BvclVzdWFyaW8sXHJcbiAgICBnZXRVc3Vhcmlvc1BvckRlbGl2ZXJ5XHJcbiAgICB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXJDb250cm9sbGVyJztcclxuXHJcbiAgICAvKiogUnV0YXMgKi9cclxuXHJcbi8qKiBPYnRlbmVyIHRvZG9zIGxvcyB1c3VhcmlvcyAqL1xyXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0QWxsICk7XHJcblxyXG4vKiogT2J0ZW5lciB1c3VhcmlvIHBvciBpZCAqL1xyXG5yb3V0ZXIuZ2V0KCcvOmlkJywgZ2V0T25lICk7XHJcblxyXG4vKiogcmVnaXN0cmFyIHVzdWFyaW9zICovXHJcbnJvdXRlci5wb3N0KCcvcmVnaXN0ZXInLCByZWdpc3RlciApO1xyXG5cclxuLyoqIGxvZ2luIHVzdWFyaW9zICovXHJcbnJvdXRlci5wb3N0KCcvbG9naW4nLCBsb2dpbiApO1xyXG5cclxuLyoqIGNvbnN1bHRhciBwZXJmaWwgKi9cclxucm91dGVyLmdldCgnL2NvbnN1bHRhJyxlbnN1cmVUb2tlbixjb25zdWx0YVBlcmZpbCk7XHJcblxyXG5cclxuLyoqIGNvbnN1bHRhciB1c3VhcmlvcyBkZWxpdmVyeXMgZGUgcGVkaWRvcyBwb3IgdXNlcmlkICovXHJcbnJvdXRlci5nZXQoJy9nZXREZWxpdmVyeXNQb3JVc3VhcmlvLzppZHVzZXInLGVuc3VyZVRva2VuLGNoZXF1ZW9Ub2tlbiwgZ2V0RGVsaXZlcnlzUG9yVXN1YXJpbyk7XHJcblxyXG4vKiogY29uc3VsdGFyIHVzdWFyaW9zIGRlbGl2ZXJ5cyBkZSBwZWRpZG9zIHBvciBkZWxpdmVyeWlkICovXHJcbnJvdXRlci5nZXQoJy9nZXRVc3Vhcmlvc1BvckRlbGl2ZXJ5LzppZGRlbGl2ZXJ5JyxlbnN1cmVUb2tlbixjaGVxdWVvVG9rZW4sIGdldFVzdWFyaW9zUG9yRGVsaXZlcnkpO1xyXG5cclxuXHJcblxyXG4vKiogRXhwb3J0byAqL1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "usuarios.js"
      ],
      "names": [
        "router",
        "get",
        "getAll",
        "getOne",
        "post",
        "register",
        "login",
        "ensureToken",
        "consultaPerfil",
        "chequeoToken",
        "getDeliverysPorUsuario",
        "getUsuariosPorDelivery"
      ],
      "mappings": ";;;;;;;AAGA;;AAMA;;AARG;AAIH,IAAMA,MAAM,GAAG,sBAAf;AAEI;;AAcA;;AAEJ;AACAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,sBAAhB;AAEA;;AACAF,MAAM,CAACC,GAAP,CAAW,MAAX,EAAmBE,sBAAnB;AAEA;;AACAH,MAAM,CAACI,IAAP,CAAY,WAAZ,EAAyBC,wBAAzB;AAEA;;AACAL,MAAM,CAACI,IAAP,CAAY,QAAZ,EAAsBE,qBAAtB;AAEA;;AACAN,MAAM,CAACC,GAAP,CAAW,WAAX,EAAuBM,2BAAvB,EAAmCC,8BAAnC;AAGA;;AACAR,MAAM,CAACC,GAAP,CAAW,iCAAX,EAA6CM,2BAA7C,EAAyDE,4BAAzD,EAAuEC,sCAAvE;AAEA;;AACAV,MAAM,CAACC,GAAP,CAAW,qCAAX,EAAiDM,2BAAjD,EAA6DE,4BAA7D,EAA2EE,sCAA3E;AAIA;;eAEeX,M",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
      "sourcesContent": [
        "   \r\n   /** Rutas de test */\r\n\r\nimport {Router} from 'express'\r\n\r\nconst router = Router()\r\n\r\n    /** Controladores */\r\n\r\nimport {  \r\n    getAll,\r\n    register,\r\n    login,\r\n    consultaPerfil,\r\n    ensureToken,\r\n    getOne,\r\n    chequeoToken,\r\n    getDeliverysPorUsuario,\r\n    getUsuariosPorDelivery\r\n    } from '../controllers/userController';\r\n\r\n    /** Rutas */\r\n\r\n/** Obtener todos los usuarios */\r\nrouter.get('/', getAll );\r\n\r\n/** Obtener usuario por id */\r\nrouter.get('/:id', getOne );\r\n\r\n/** registrar usuarios */\r\nrouter.post('/register', register );\r\n\r\n/** login usuarios */\r\nrouter.post('/login', login );\r\n\r\n/** consultar perfil */\r\nrouter.get('/consulta',ensureToken,consultaPerfil);\r\n\r\n\r\n/** consultar usuarios deliverys de pedidos por userid */\r\nrouter.get('/getDeliverysPorUsuario/:iduser',ensureToken,chequeoToken, getDeliverysPorUsuario);\r\n\r\n/** consultar usuarios deliverys de pedidos por deliveryid */\r\nrouter.get('/getUsuariosPorDelivery/:iddelivery',ensureToken,chequeoToken, getUsuariosPorDelivery);\r\n\r\n\r\n\r\n/** Exporto */\r\n\r\nexport default router"
      ]
    },
    "sourceType": "script",
    "mtime": 1569795607034
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\controllers\\\\userController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\userController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\userController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\userController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
        "sourceFileName": "userController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAll = getAll;\nexports.register = register;\nexports.login = login;\nexports.consultaPerfil = consultaPerfil;\nexports.chequeoToken = chequeoToken;\nexports.ensureToken = ensureToken;\nexports.getOne = getOne;\nexports.getDeliverysPorUsuario = getDeliverysPorUsuario;\nexports.getUsuariosPorDelivery = getUsuariosPorDelivery;\n\nvar _User = _interopRequireDefault(require(\"../models/User\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/** Obtener todos los Usuarios */\nfunction getAll(_x, _x2) {\n  return _getAll.apply(this, arguments);\n}\n/** Crear nuevo Usuario */\n\n\nfunction _getAll() {\n  _getAll = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var tests;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _User[\"default\"].findAll();\n\n          case 3:\n            tests = _context.sent;\n\n            if (tests) {\n              res.json({\n                message: 'Todos los usuarios registrados son:',\n                data: tests\n              }); //res.json(['John', 'Betty', 'Hal']);\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'Something goes wrong on getAll patch',\n              data: {\n                error: _context.t0\n              }\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _getAll.apply(this, arguments);\n}\n\nfunction register(_x3, _x4) {\n  return _register.apply(this, arguments);\n}\n/** Login Usuarios */\n\n\nfunction _register() {\n  _register = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, nombre, mail, pass, nuevoUsuario;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body = req.body, nombre = _req$body.nombre, mail = _req$body.mail, pass = _req$body.pass;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _User[\"default\"].create({\n              nombre: nombre,\n              mail: mail,\n              pass: pass\n            }, {\n              fields: ['nombre', 'mail', 'pass']\n            });\n\n          case 4:\n            nuevoUsuario = _context2.sent;\n\n            if (!nuevoUsuario) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.json({\n              message: 'Usuario creado.',\n              data: nuevoUsuario\n            }));\n\n          case 7:\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            res.status(500).json({\n              message: 'Ocurrio un Error al crear usuario',\n              data: {\n                nombre: nombre,\n                mail: mail,\n                pass: pass\n              },\n              error: _context2.t0\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 9]]);\n  }));\n  return _register.apply(this, arguments);\n}\n\nfunction login(_x5, _x6) {\n  return _login.apply(this, arguments);\n}\n/** Rutas protegidas */\n\n\nfunction _login() {\n  _login = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, mail, pass, userFound, token;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body2 = req.body, mail = _req$body2.mail, pass = _req$body2.pass;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _User[\"default\"].findOne({\n              where: {\n                mail: mail,\n                pass: pass\n              },\n              attributes: ['id', 'nombre', 'mail', 'pass']\n            });\n\n          case 4:\n            userFound = _context3.sent;\n\n            if (userFound) {\n              token = _jsonwebtoken[\"default\"].sign({\n                userFound: userFound\n              }, 'key');\n              res.json({\n                message: 'Login Success.',\n                data: userFound,\n                token: token\n              });\n            } else {\n              res.json({\n                message: 'No se encuentra registrado el usuario.'\n              });\n            }\n\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.status(500).json({\n              message: 'Something goes wrong222',\n              data: _context3.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 8]]);\n  }));\n  return _login.apply(this, arguments);\n}\n\nfunction consultaPerfil(_x7, _x8) {\n  return _consultaPerfil.apply(this, arguments);\n}\n\nfunction _consultaPerfil() {\n  _consultaPerfil = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _jsonwebtoken[\"default\"].verify(req.token, 'key', function (err, data) {\n              if (err) {\n                res.json({\n                  message: 'Acceso Denegado.'\n                });\n              } else {\n                res.json({\n                  message: 'Acceso a consulta de Perfil',\n                  data: data //Son los datos del que se esta logeando\n\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _consultaPerfil.apply(this, arguments);\n}\n\nfunction chequeoToken(_x9, _x10, _x11) {\n  return _chequeoToken.apply(this, arguments);\n}\n/** Verificacion token */\n\n\nfunction _chequeoToken() {\n  _chequeoToken = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res, next) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _jsonwebtoken[\"default\"].verify(req.token, 'key', function (err, data) {\n              if (err) {\n                res.json({\n                  message: 'Acceso Denegado.'\n                });\n              } else {\n                next();\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _chequeoToken.apply(this, arguments);\n}\n\nfunction ensureToken(_x12, _x13, _x14) {\n  return _ensureToken.apply(this, arguments);\n}\n/** Obtener usuario por id */\n\n\nfunction _ensureToken() {\n  _ensureToken = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(req, res, next) {\n    var bearerHeader, bearer, bearerToken;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            bearerHeader = req.headers['authorization'];\n\n            if (typeof bearerHeader !== 'undefined') {\n              bearer = bearerHeader.split(\" \");\n              bearerToken = bearer[1];\n              req.token = bearerToken;\n              next();\n            } else {\n              res.json({\n                message: 'Token null error'\n              });\n            }\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _ensureToken.apply(this, arguments);\n}\n\nfunction getOne(_x15, _x16, _x17) {\n  return _getOne.apply(this, arguments);\n}\n/*todos los usuarios delivery para chatear de un usuario en pedido*/\n\n\nfunction _getOne() {\n  _getOne = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(req, res, next) {\n    var id, userFound;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            id = req.params.id;\n            _context7.prev = 1;\n            _context7.next = 4;\n            return _User[\"default\"].findOne({\n              where: {\n                id: id\n              },\n              attributes: ['id', 'nombre', 'mail', 'pass']\n            });\n\n          case 4:\n            userFound = _context7.sent;\n\n            if (userFound) {\n              res.json(userFound);\n            } else {\n              res.json({\n                message: 'No se encuentra registrado el usuario.'\n              });\n            }\n\n            _context7.next = 11;\n            break;\n\n          case 8:\n            _context7.prev = 8;\n            _context7.t0 = _context7[\"catch\"](1);\n            res.status(500).json({\n              message: 'Something goes wrong ',\n              data: {\n                error: _context7.t0\n              }\n            });\n\n          case 11:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 8]]);\n  }));\n  return _getOne.apply(this, arguments);\n}\n\nfunction getDeliverysPorUsuario(_x18, _x19) {\n  return _getDeliverysPorUsuario.apply(this, arguments);\n}\n/*todos los usuarios para chatear de un pedido de un delivery*/\n\n\nfunction _getDeliverysPorUsuario() {\n  _getDeliverysPorUsuario = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(req, res) {\n    var iduser, sqlquery, usuarios;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            iduser = req.params.iduser;\n            _context8.prev = 1;\n            sqlquery = 'select Distinct(users.*) from users, pedidos where pedidos.ped_deliveryid=users.id and pedidos.ped_userid='.concat(iduser).concat(' ORDER BY users.nombre '); //res.json(sqlquery);\n\n            _context8.next = 5;\n            return _database.sequelize.query(sqlquery, {\n              type: _database.sequelize.QueryTypes.SELECT\n            });\n\n          case 5:\n            usuarios = _context8.sent;\n\n            if (usuarios) {\n              res.json({\n                message: 'todos los usuarios delivery para chatear',\n                usuarios: usuarios\n              });\n            } else {\n              res.status(500).json({\n                message: 'No se encontro registros.'\n              });\n            }\n\n            _context8.next = 12;\n            break;\n\n          case 9:\n            _context8.prev = 9;\n            _context8.t0 = _context8[\"catch\"](1);\n            res.status(500).json({\n              message: 'hubo un error',\n              data: {\n                error: _context8.t0\n              }\n            });\n\n          case 12:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[1, 9]]);\n  }));\n  return _getDeliverysPorUsuario.apply(this, arguments);\n}\n\nfunction getUsuariosPorDelivery(_x20, _x21) {\n  return _getUsuariosPorDelivery.apply(this, arguments);\n}\n\nfunction _getUsuariosPorDelivery() {\n  _getUsuariosPorDelivery = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee9(req, res) {\n    var iddelivery, sqlquery, usuarios;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            iddelivery = req.params.iddelivery;\n            _context9.prev = 1;\n            sqlquery = 'select Distinct(users.*) from users, pedidos where pedidos.ped_userid=users.id and pedidos.ped_deliveryid='.concat(iddelivery).concat(' ORDER BY users.nombre ');\n            _context9.next = 5;\n            return _database.sequelize.query(sqlquery, {\n              type: _database.sequelize.QueryTypes.SELECT\n            });\n\n          case 5:\n            usuarios = _context9.sent;\n\n            if (usuarios) {\n              res.json({\n                message: 'todos los usuarios para chatear',\n                usuarios: usuarios\n              });\n            } else {\n              res.status(500).json({\n                message: 'No se encontro registros.'\n              });\n            }\n\n            _context9.next = 12;\n            break;\n\n          case 9:\n            _context9.prev = 9;\n            _context9.t0 = _context9[\"catch\"](1);\n            res.status(500).json({\n              message: 'hubo un error',\n              data: {\n                error: _context9.t0\n              }\n            });\n\n          case 12:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[1, 9]]);\n  }));\n  return _getUsuariosPorDelivery.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "userController.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Test",
        "findAll",
        "tests",
        "json",
        "message",
        "data",
        "status",
        "error",
        "register",
        "body",
        "nombre",
        "mail",
        "pass",
        "create",
        "fields",
        "nuevoUsuario",
        "login",
        "findOne",
        "where",
        "attributes",
        "userFound",
        "token",
        "jwt",
        "sign",
        "consultaPerfil",
        "verify",
        "err",
        "chequeoToken",
        "next",
        "ensureToken",
        "bearerHeader",
        "headers",
        "bearer",
        "split",
        "bearerToken",
        "getOne",
        "id",
        "params",
        "getDeliverysPorUsuario",
        "iduser",
        "sqlquery",
        "concat",
        "sequelize",
        "query",
        "type",
        "QueryTypes",
        "SELECT",
        "usuarios",
        "getUsuariosPorDelivery",
        "iddelivery"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAGA;SACsBA,M;;;AA2BtB;;;;;;0BA3BO,iBAAsBC,GAAtB,EAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIqBC,iBAAKC,OAAL,EAJrB;;AAAA;AAIOC,YAAAA,KAJP;;AAMC,gBAAGA,KAAH,EAAS;AAENH,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAEJC,gBAAAA,OAAO,EAAC,qCAFJ;AAGJC,gBAAAA,IAAI,EAACH;AAHD,eAAT,EAFM,CASL;AACH;;AAhBF;AAAA;;AAAA;AAAA;AAAA;AAoBGH,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,sCADS;AAEjBC,cAAAA,IAAI,EAAC;AAACE,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA4BeC,Q;;;AAwCtB;;;;;;0BAxCO,kBAAwBV,GAAxB,EAA4BC,GAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAE0BD,GAAG,CAACW,IAF9B,EAEKC,MAFL,aAEKA,MAFL,EAEYC,IAFZ,aAEYA,IAFZ,EAEiBC,IAFjB,aAEiBA,IAFjB;AAAA;AAAA;AAAA,mBAM0BZ,iBAAKa,MAAL,CAAY;AAEjCH,cAAAA,MAAM,EAAEA,MAFyB;AAGjCC,cAAAA,IAAI,EAACA,IAH4B;AAIjCC,cAAAA,IAAI,EAACA;AAJ4B,aAAZ,EAOrB;AACIE,cAAAA,MAAM,EAAC,CAEH,QAFG,EAGH,MAHG,EAIH,MAJG;AADX,aAPqB,CAN1B;;AAAA;AAMKC,YAAAA,YANL;;AAAA,iBAuBIA,YAvBJ;AAAA;AAAA;AAAA;;AAAA,8CAyBYhB,GAAG,CAACI,IAAJ,CAAS;AACZC,cAAAA,OAAO,EAAE,iBADG;AAEZC,cAAAA,IAAI,EAAEU;AAFM,aAAT,CAzBZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgCChB,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,mCADS;AAEjBC,cAAAA,IAAI,EAAC;AAACK,gBAAAA,MAAM,EAANA,MAAD;AAAQC,gBAAAA,IAAI,EAAJA,IAAR;AAAaC,gBAAAA,IAAI,EAAJA;AAAb,eAFY;AAGjBL,cAAAA,KAAK;AAHY,aAArB;;AAhCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAyCeS,K;;;AAqCtB;;;;;;0BArCO,kBAAqBlB,GAArB,EAAyBC,GAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBD,GAAG,CAACW,IAFvB,EAEKE,IAFL,cAEKA,IAFL,EAEUC,IAFV,cAEUA,IAFV;AAAA;AAAA;AAAA,mBAMyBZ,iBAAKiB,OAAL,CAAa;AACjCC,cAAAA,KAAK,EAAE;AACHP,gBAAAA,IAAI,EAACA,IADF;AAEHC,gBAAAA,IAAI,EAACA;AAFF,eAD0B;AAKjCO,cAAAA,UAAU,EAAE,CAAC,IAAD,EAAM,QAAN,EAAe,MAAf,EAAsB,MAAtB;AALqB,aAAb,CANzB;;AAAA;AAMOC,YAAAA,SANP;;AAcC,gBAAGA,SAAH,EAAa;AAEJC,cAAAA,KAFI,GAEIC,yBAAIC,IAAJ,CAAS;AAACH,gBAAAA,SAAS,EAATA;AAAD,eAAT,EAAsB,KAAtB,CAFJ;AAITrB,cAAAA,GAAG,CAACI,IAAJ,CAAS;AACLC,gBAAAA,OAAO,EAAC,gBADH;AAELC,gBAAAA,IAAI,EAACe,SAFA;AAGLC,gBAAAA,KAAK,EAAGA;AAHH,eAAT;AAMH,aAVD,MAUK;AACDtB,cAAAA,GAAG,CAACI,IAAJ,CAAS;AACLC,gBAAAA,OAAO,EAAC;AADH,eAAT;AAGH;;AA5BF;AAAA;;AAAA;AAAA;AAAA;AA+BCL,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,yBADS;AAEjBC,cAAAA,IAAI;AAFa,aAArB;;AA/BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAsCemB,c;;;;;;;0BAAf,kBAA8B1B,GAA9B,EAAkCC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAEHuB,qCAAIG,MAAJ,CAAW3B,GAAG,CAACuB,KAAf,EAAsB,KAAtB,EAA8B,UAACK,GAAD,EAAKrB,IAAL,EAAY;AACtC,kBAAGqB,GAAH,EAAO;AACH3B,gBAAAA,GAAG,CAACI,IAAJ,CAAS;AACLC,kBAAAA,OAAO,EAAC;AADH,iBAAT;AAGH,eAJD,MAIK;AACOL,gBAAAA,GAAG,CAACI,IAAJ,CAAS;AACbC,kBAAAA,OAAO,EAAC,6BADK;AAEbC,kBAAAA,IAAI,EAACA,IAFQ,CAEH;;AAFG,iBAAT;AAIX;AACJ,aAXD;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAgBesB,Y;;;AActB;;;;;;0BAdO,kBAA4B7B,GAA5B,EAAgCC,GAAhC,EAAoC6B,IAApC;AAAA;AAAA;AAAA;AAAA;AAEHN,qCAAIG,MAAJ,CAAW3B,GAAG,CAACuB,KAAf,EAAsB,KAAtB,EAA8B,UAACK,GAAD,EAAKrB,IAAL,EAAY;AACtC,kBAAGqB,GAAH,EAAO;AACH3B,gBAAAA,GAAG,CAACI,IAAJ,CAAS;AACLC,kBAAAA,OAAO,EAAC;AADH,iBAAT;AAGH,eAJD,MAIK;AACDwB,gBAAAA,IAAI;AACP;AACJ,aARD;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAeeC,W;;;AAkBtB;;;;;;0BAlBO,kBAA2B/B,GAA3B,EAA+BC,GAA/B,EAAmC6B,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEGE,YAAAA,YAFH,GAEkBhC,GAAG,CAACiC,OAAJ,CAAY,eAAZ,CAFlB;;AAIH,gBAAI,OAAOD,YAAP,KAAwB,WAA5B,EAAyC;AAE/BE,cAAAA,MAF+B,GAEtBF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAFsB;AAG/BC,cAAAA,WAH+B,GAGjBF,MAAM,CAAC,CAAD,CAHW;AAIrClC,cAAAA,GAAG,CAACuB,KAAJ,GAAYa,WAAZ;AACAN,cAAAA,IAAI;AAEP,aAPD,MAOM;AACF7B,cAAAA,GAAG,CAACI,IAAJ,CAAS;AACLC,gBAAAA,OAAO,EAAC;AADH,eAAT;AAGH;;AAfE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAmBe+B,M;;;AAgCtB;;;;;;0BAhCO,kBAAsBrC,GAAtB,EAA0BC,GAA1B,EAA8B6B,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAGIQ,YAAAA,EAHJ,GAGWtC,GAAG,CAACuC,MAHf,CAGID,EAHJ;AAAA;AAAA;AAAA,mBAOyBpC,iBAAKiB,OAAL,CAAa;AACjCC,cAAAA,KAAK,EAAE;AACHkB,gBAAAA,EAAE,EAACA;AADA,eAD0B;AAIjCjB,cAAAA,UAAU,EAAE,CAAC,IAAD,EAAM,QAAN,EAAe,MAAf,EAAsB,MAAtB;AAJqB,aAAb,CAPzB;;AAAA;AAOOC,YAAAA,SAPP;;AAcC,gBAAGA,SAAH,EAAa;AAETrB,cAAAA,GAAG,CAACI,IAAJ,CAASiB,SAAT;AAEH,aAJD,MAIK;AACDrB,cAAAA,GAAG,CAACI,IAAJ,CAAS;AACLC,gBAAAA,OAAO,EAAC;AADH,eAAT;AAGH;;AAtBF;AAAA;;AAAA;AAAA;AAAA;AAyBCL,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,uBADS;AAEjBC,cAAAA,IAAI,EAAC;AAACE,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AAzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAiCe+B,sB;;;AAkCtB;;;;;;0BAlCO,kBAAsCxC,GAAtC,EAA0CC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFwC,YAAAA,MAFE,GAEQzC,GAAG,CAACuC,MAFZ,CAEFE,MAFE;AAAA;AAKHC,YAAAA,QALG,GAKO,6GAA6GC,MAA7G,CAAoHF,MAApH,EAA4HE,MAA5H,CAAmI,yBAAnI,CALP,EAMP;;AANO;AAAA,mBAOgBC,oBAAUC,KAAV,CAAgBH,QAAhB,EAA0B;AAAEI,cAAAA,IAAI,EAAEF,oBAAUG,UAAV,CAAqBC;AAA7B,aAA1B,CAPhB;;AAAA;AAOFC,YAAAA,QAPE;;AASP,gBAAGA,QAAH,EAAY;AAEDhD,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAEJC,gBAAAA,OAAO,EAAC,0CAFJ;AAGJ2C,gBAAAA,QAAQ,EAARA;AAHI,eAAT;AAMF,aART,MASY;AACAhD,cAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AAtBF;AAAA;;AAAA;AAAA;AAAA;AA0BGL,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,eADS;AAEjBC,cAAAA,IAAI,EAAC;AAACE,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AA1BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAmCeyC,sB;;;;;;;0BAAf,kBAAsClD,GAAtC,EAA0CC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFkD,YAAAA,UAFE,GAEYnD,GAAG,CAACuC,MAFhB,CAEFY,UAFE;AAAA;AAKHT,YAAAA,QALG,GAKO,6GAA6GC,MAA7G,CAAoHQ,UAApH,EAAgIR,MAAhI,CAAuI,yBAAvI,CALP;AAAA;AAAA,mBAOgBC,oBAAUC,KAAV,CAAgBH,QAAhB,EAA0B;AAAEI,cAAAA,IAAI,EAAEF,oBAAUG,UAAV,CAAqBC;AAA7B,aAA1B,CAPhB;;AAAA;AAOFC,YAAAA,QAPE;;AASP,gBAAGA,QAAH,EAAY;AAEDhD,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAEJC,gBAAAA,OAAO,EAAC,iCAFJ;AAGJ2C,gBAAAA,QAAQ,EAARA;AAHI,eAAT;AAMF,aART,MASY;AACAhD,cAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AAtBF;AAAA;;AAAA;AAAA;AAAA;AA0BGL,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,eADS;AAEjBC,cAAAA,IAAI,EAAC;AAACE,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AA1BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
      "sourcesContent": [
        "import Test from '../models/User'\r\nimport jwt from 'jsonwebtoken'\r\nimport {sequelize} from '../database/database';\r\n\r\n\r\n/** Obtener todos los Usuarios */\r\nexport async function getAll(req,res){\r\n\r\n    try {\r\n\r\n        const tests = await Test.findAll();\r\n        \r\n        if(tests){\r\n\r\n           res.json({\r\n\r\n                message:'Todos los usuarios registrados son:',\r\n                data:tests\r\n\r\n            });\r\n\r\n            //res.json(['John', 'Betty', 'Hal']);\r\n        }\r\n       \r\n  \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'Something goes wrong on getAll patch',\r\n              data:{error}\r\n          });\r\n      } \r\n}\r\n\r\n/** Crear nuevo Usuario */\r\nexport async function register(req,res){\r\n\r\n    const { nombre,mail,pass } = req.body;\r\n\r\n    try {\r\n\r\n        let nuevoUsuario = await Test.create({\r\n\r\n            nombre: nombre,\r\n            mail:mail,\r\n            pass:pass\r\n\r\n            },\r\n            {\r\n                fields:[\r\n                    \r\n                    'nombre',\r\n                    'mail',\r\n                    'pass',\r\n\r\n                ]\r\n            });\r\n            \r\n        if(nuevoUsuario){\r\n\r\n           return  res.json({\r\n                message: 'Usuario creado.',\r\n                data: nuevoUsuario\r\n            });\r\n        }\r\n        \r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message:'Ocurrio un Error al crear usuario',\r\n            data:{nombre,mail,pass},\r\n            error:error\r\n        });\r\n    } \r\n}\r\n\r\n/** Login Usuarios */\r\nexport async function login(req,res){\r\n\r\n    const { mail,pass } = req.body;\r\n    \r\n    try {\r\n\r\n        const userFound = await Test.findOne({\r\n            where: {\r\n                mail:mail,\r\n                pass:pass\r\n            },\r\n            attributes: ['id','nombre','mail','pass']\r\n        });\r\n    \r\n        if(userFound){\r\n    \r\n           const token = jwt.sign({userFound}, 'key' );\r\n    \r\n            res.json({\r\n                message:'Login Success.',\r\n                data:userFound,\r\n                token : token\r\n            })\r\n\r\n        }else{\r\n            res.json({\r\n                message:'No se encuentra registrado el usuario.'      \r\n            })\r\n        }\r\n     \r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message:'Something goes wrong222',\r\n            data:error\r\n        });\r\n    }}\r\n\r\n/** Rutas protegidas */\r\nexport async function consultaPerfil(req,res){\r\n\r\n    jwt.verify(req.token, 'key' , (err,data)=>{\r\n        if(err){\r\n            res.json({\r\n                message:'Acceso Denegado.'\r\n            });\r\n        }else{\r\n                    res.json({\r\n                message:'Acceso a consulta de Perfil',\r\n                data:data //Son los datos del que se esta logeando\r\n                     });\r\n        }\r\n    });\r\n}\r\n\r\nexport async function chequeoToken(req,res,next){\r\n\r\n    jwt.verify(req.token, 'key' , (err,data)=>{\r\n        if(err){\r\n            res.json({\r\n                message:'Acceso Denegado.'\r\n            });\r\n        }else{\r\n            next();\r\n        }\r\n    });\r\n}\r\n\r\n\r\n/** Verificacion token */\r\nexport async function ensureToken(req,res,next){\r\n    \r\n    const bearerHeader = req.headers['authorization'];\r\n    \r\n    if( typeof bearerHeader !== 'undefined' ){\r\n\r\n        const bearer = bearerHeader.split(\" \");\r\n        const bearerToken = bearer[1];\r\n        req.token = bearerToken;\r\n        next();\r\n\r\n    }else {\r\n        res.json({\r\n            message:'Token null error'\r\n        });\r\n    }\r\n}\r\n\r\n/** Obtener usuario por id */\r\nexport async function getOne(req,res,next)\r\n{\r\n    \r\n    const {id } = req.params;\r\n        \r\n    try {\r\n\r\n        const userFound = await Test.findOne({\r\n            where: {\r\n                id:id\r\n            },\r\n            attributes: ['id','nombre','mail','pass']\r\n        });\r\n\r\n        if(userFound){\r\n    \r\n            res.json(userFound);\r\n\r\n        }else{\r\n            res.json({\r\n                message:'No se encuentra registrado el usuario.'      \r\n            })\r\n        }\r\n        \r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message:'Something goes wrong ',\r\n            data:{error}\r\n        });\r\n    }\r\n}\r\n\r\n/*todos los usuarios delivery para chatear de un usuario en pedido*/\r\nexport async function getDeliverysPorUsuario(req,res)\r\n{\r\nvar {iduser} = req.params;\r\ntry{\r\n\r\nvar sqlquery= 'select Distinct(users.*) from users, pedidos where pedidos.ped_deliveryid=users.id and pedidos.ped_userid='.concat(iduser).concat(' ORDER BY users.nombre ');\r\n//res.json(sqlquery);\r\nvar  usuarios =  await sequelize.query(sqlquery ,{ type: sequelize.QueryTypes.SELECT});\r\n\r\nif(usuarios){\r\n\r\n           res.json({\r\n\r\n                message:'todos los usuarios delivery para chatear',\r\n                usuarios\r\n\r\n            });\r\n        }\r\n        else{\r\n            res.status(500).json({\r\n                message:'No se encontro registros.'      \r\n            })\r\n        }\r\n       \r\n  \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'hubo un error',\r\n              data:{error}\r\n          });\r\n      } \r\n \r\n    }\r\n\r\n/*todos los usuarios para chatear de un pedido de un delivery*/\r\nexport async function getUsuariosPorDelivery(req,res)\r\n{\r\nvar {iddelivery} = req.params;\r\ntry{\r\n\r\nvar sqlquery= 'select Distinct(users.*) from users, pedidos where pedidos.ped_userid=users.id and pedidos.ped_deliveryid='.concat(iddelivery).concat(' ORDER BY users.nombre ');\r\n\r\nvar  usuarios =  await sequelize.query(sqlquery ,{ type: sequelize.QueryTypes.SELECT});\r\n\r\nif(usuarios){\r\n\r\n           res.json({\r\n\r\n                message:'todos los usuarios para chatear',\r\n                usuarios\r\n\r\n            });\r\n        }\r\n        else{\r\n            res.status(500).json({\r\n                message:'No se encontro registros.'      \r\n            })\r\n        }\r\n       \r\n  \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'hubo un error',\r\n              data:{error}\r\n          });\r\n      } \r\n }\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570710834827
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\\\\User.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\User.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\User.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
        "sourceFileName": "User.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/** Defino modelo de los datos */\nvar Test = _database.sequelize.define('users', {\n  id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  pass: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  mail: {\n    type: _sequelize[\"default\"].TEXT\n  }\n});\n\nvar _default = Test;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsiVGVzdCIsInNlcXVlbGl6ZSIsImRlZmluZSIsImlkIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJwcmltYXJ5S2V5Iiwibm9tYnJlIiwiVEVYVCIsInBhc3MiLCJtYWlsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQTtBQUNBLElBQU1BLElBQUksR0FBR0Msb0JBQVVDLE1BQVYsQ0FBaUIsT0FBakIsRUFBeUI7QUFFbENDLEVBQUFBLEVBQUUsRUFBQztBQUNDQyxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQURqQjtBQUVDQyxJQUFBQSxVQUFVLEVBQUU7QUFGYixHQUYrQjtBQU1sQ0MsRUFBQUEsTUFBTSxFQUFDO0FBQ0hKLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRGIsR0FOMkI7QUFTbENDLEVBQUFBLElBQUksRUFBQztBQUNETixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURmLEdBVDZCO0FBWWxDRSxFQUFBQSxJQUFJLEVBQUM7QUFDRFAsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFEZjtBQVo2QixDQUF6QixDQUFiOztlQWtCZVQsSSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXERpZWdvXFxEb2N1bWVudHNcXEdpdEh1YlxcU2Vydlxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XHJcbmltcG9ydCB7c2VxdWVsaXplfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZSc7XHJcblxyXG4vKiogRGVmaW5vIG1vZGVsbyBkZSBsb3MgZGF0b3MgKi9cclxuY29uc3QgVGVzdCA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3VzZXJzJyx7XHJcblxyXG4gICAgaWQ6e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWVcclxuICAgIH0sXHJcbiAgICBub21icmU6e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgcGFzczp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBtYWlsOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfVxyXG5cclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUZXN0OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "Test",
        "sequelize",
        "define",
        "id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "nombre",
        "TEXT",
        "pass",
        "mail"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;AACA,IAAMA,IAAI,GAAGC,oBAAUC,MAAV,CAAiB,OAAjB,EAAyB;AAElCC,EAAAA,EAAE,EAAC;AACCC,IAAAA,IAAI,EAAEC,sBAAUC,OADjB;AAECC,IAAAA,UAAU,EAAE;AAFb,GAF+B;AAMlCC,EAAAA,MAAM,EAAC;AACHJ,IAAAA,IAAI,EAAEC,sBAAUI;AADb,GAN2B;AASlCC,EAAAA,IAAI,EAAC;AACDN,IAAAA,IAAI,EAAEC,sBAAUI;AADf,GAT6B;AAYlCE,EAAAA,IAAI,EAAC;AACDP,IAAAA,IAAI,EAAEC,sBAAUI;AADf;AAZ6B,CAAzB,CAAb;;eAkBeT,I",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../database/database';\r\n\r\n/** Defino modelo de los datos */\r\nconst Test = sequelize.define('users',{\r\n\r\n    id:{\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n    nombre:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    pass:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    mail:{\r\n        type: Sequelize.TEXT\r\n    }\r\n\r\n});\r\n\r\nexport default Test;"
      ]
    },
    "sourceType": "script",
    "mtime": 1569373949922
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\database\\\\database.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\database\\database.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\database\\database.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\database\\database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\database",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sequelize = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*const Sequelize = require('sequelize');\r\n\r\n// Option 2: Passing a connection URI\r\nexport const sequelize = new Sequelize(\r\n    \r\n    'postgres://idxehuofzgahva:6764ce04510121abfd240c5966331f997a38eebf9f963a77fa749f7a7e6825d4@ec2-54-83-9-36.compute-1.amazonaws.com:5432/d8sjqqcpb870to',\r\n     {\r\n        dialect: 'postgres',\r\n        dialectOptions: {\r\n            ssl: true\r\n        },\r\n        define: {\r\n            timestamps: false\r\n        },\r\n        pool: {\r\n            max:5,\r\n            min:0,\r\n            require:30000,\r\n            idle:10000\r\n        }\r\n     }\r\n     \r\n);\r\n\r\nsequelize\r\n  .authenticate()\r\n  .then(() => {\r\n    console.log('Connection has been established successfully.');\r\n  })\r\n  .catch(err => {\r\n    console.error('Unable to connect to the database:', err);\r\n  });*/\nvar sequelize = new _sequelize[\"default\"]('postgres', 'postgres', 'diego7779', {\n  host: 'localhost',\n  dialect: 'postgres',\n  define: {\n    timestamps: false\n  },\n  pool: {\n    max: 5,\n    min: 0,\n    require: 30000,\n    idle: 10000\n  },\n  logging: false\n});\nexports.sequelize = sequelize;\nsequelize.authenticate()[\"catch\"](function (err) {\n  console.error('no se pudo realizar la conexion a la base de datos:', err);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImhvc3QiLCJkaWFsZWN0IiwiZGVmaW5lIiwidGltZXN0YW1wcyIsInBvb2wiLCJtYXgiLCJtaW4iLCJyZXF1aXJlIiwiaWRsZSIsImxvZ2dpbmciLCJhdXRoZW50aWNhdGUiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFpQ0U7Ozs7QUFqQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUNTLElBQU1BLFNBQVMsR0FBRyxJQUFJQyxxQkFBSixDQUNqQixVQURpQixFQUVqQixVQUZpQixFQUdqQixXQUhpQixFQUlqQjtBQUNJQyxFQUFBQSxJQUFJLEVBQUUsV0FEVjtBQUVJQyxFQUFBQSxPQUFPLEVBQUUsVUFGYjtBQUdJQyxFQUFBQSxNQUFNLEVBQUU7QUFDSkMsSUFBQUEsVUFBVSxFQUFFO0FBRFIsR0FIWjtBQU1JQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsR0FBRyxFQUFDLENBREY7QUFFRkMsSUFBQUEsR0FBRyxFQUFDLENBRkY7QUFHRkMsSUFBQUEsT0FBTyxFQUFDLEtBSE47QUFJRkMsSUFBQUEsSUFBSSxFQUFDO0FBSkgsR0FOVjtBQVlJQyxFQUFBQSxPQUFPLEVBQUM7QUFaWixDQUppQixDQUFsQjs7QUFtQlBYLFNBQVMsQ0FDUlksWUFERCxZQUVPLFVBQUFDLEdBQUcsRUFBSTtBQUNaQyxFQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBYyxxREFBZCxFQUFxRUYsR0FBckU7QUFDRCxDQUpEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGllZ29cXERvY3VtZW50c1xcR2l0SHViXFxTZXJ2XFxzcmNcXGRhdGFiYXNlIiwic291cmNlc0NvbnRlbnQiOlsiLypjb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcclxuXHJcbi8vIE9wdGlvbiAyOiBQYXNzaW5nIGEgY29ubmVjdGlvbiBVUklcclxuZXhwb3J0IGNvbnN0IHNlcXVlbGl6ZSA9IG5ldyBTZXF1ZWxpemUoXHJcbiAgICBcclxuICAgICdwb3N0Z3JlczovL2lkeGVodW9memdhaHZhOjY3NjRjZTA0NTEwMTIxYWJmZDI0MGM1OTY2MzMxZjk5N2EzOGVlYmY5Zjk2M2E3N2ZhNzQ5ZjdhN2U2ODI1ZDRAZWMyLTU0LTgzLTktMzYuY29tcHV0ZS0xLmFtYXpvbmF3cy5jb206NTQzMi9kOHNqcXFjcGI4NzB0bycsXHJcbiAgICAge1xyXG4gICAgICAgIGRpYWxlY3Q6ICdwb3N0Z3JlcycsXHJcbiAgICAgICAgZGlhbGVjdE9wdGlvbnM6IHtcclxuICAgICAgICAgICAgc3NsOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZWZpbmU6IHtcclxuICAgICAgICAgICAgdGltZXN0YW1wczogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIHBvb2w6IHtcclxuICAgICAgICAgICAgbWF4OjUsXHJcbiAgICAgICAgICAgIG1pbjowLFxyXG4gICAgICAgICAgICByZXF1aXJlOjMwMDAwLFxyXG4gICAgICAgICAgICBpZGxlOjEwMDAwXHJcbiAgICAgICAgfVxyXG4gICAgIH1cclxuICAgICBcclxuKTtcclxuXHJcbnNlcXVlbGl6ZVxyXG4gIC5hdXRoZW50aWNhdGUoKVxyXG4gIC50aGVuKCgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdDb25uZWN0aW9uIGhhcyBiZWVuIGVzdGFibGlzaGVkIHN1Y2Nlc3NmdWxseS4nKTtcclxuICB9KVxyXG4gIC5jYXRjaChlcnIgPT4ge1xyXG4gICAgY29uc29sZS5lcnJvcignVW5hYmxlIHRvIGNvbm5lY3QgdG8gdGhlIGRhdGFiYXNlOicsIGVycik7XHJcbiAgfSk7Ki9cclxuXHJcbiAgaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xyXG5cclxuICBleHBvcnQgY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShcclxuICAgICAgICAgICdwb3N0Z3JlcycsXHJcbiAgICAgICAgICAncG9zdGdyZXMnLFxyXG4gICAgICAgICAgJ2RpZWdvNzc3OScsXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgaG9zdDogJ2xvY2FsaG9zdCcsXHJcbiAgICAgICAgICAgICAgZGlhbGVjdDogJ3Bvc3RncmVzJyxcclxuICAgICAgICAgICAgICBkZWZpbmU6IHtcclxuICAgICAgICAgICAgICAgICAgdGltZXN0YW1wczogZmFsc2VcclxuICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgIHBvb2w6IHtcclxuICAgICAgICAgICAgICAgICAgbWF4OjUsXHJcbiAgICAgICAgICAgICAgICAgIG1pbjowLFxyXG4gICAgICAgICAgICAgICAgICByZXF1aXJlOjMwMDAwLFxyXG4gICAgICAgICAgICAgICAgICBpZGxlOjEwMDAwXHJcbiAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICBsb2dnaW5nOmZhbHNlXHJcbiAgICAgICAgICB9XHJcbiAgKTtcclxuICBzZXF1ZWxpemVcclxuICAuYXV0aGVudGljYXRlKClcclxuICAuY2F0Y2goZXJyID0+IHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ25vIHNlIHB1ZG8gcmVhbGl6YXIgbGEgY29uZXhpb24gYSBsYSBiYXNlIGRlIGRhdG9zOicsIGVycik7XHJcbiAgfSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "define",
        "timestamps",
        "pool",
        "max",
        "min",
        "require",
        "idle",
        "logging",
        "authenticate",
        "err",
        "console",
        "error"
      ],
      "mappings": ";;;;;;;AAiCE;;;;AAjCF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCS,IAAMA,SAAS,GAAG,IAAIC,qBAAJ,CACjB,UADiB,EAEjB,UAFiB,EAGjB,WAHiB,EAIjB;AACIC,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,OAAO,EAAE,UAFb;AAGIC,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAE;AADR,GAHZ;AAMIC,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAC,CADF;AAEFC,IAAAA,GAAG,EAAC,CAFF;AAGFC,IAAAA,OAAO,EAAC,KAHN;AAIFC,IAAAA,IAAI,EAAC;AAJH,GANV;AAYIC,EAAAA,OAAO,EAAC;AAZZ,CAJiB,CAAlB;;AAmBPX,SAAS,CACRY,YADD,YAEO,UAAAC,GAAG,EAAI;AACZC,EAAAA,OAAO,CAACC,KAAR,CAAc,qDAAd,EAAqEF,GAArE;AACD,CAJD",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\database",
      "sourcesContent": [
        "/*const Sequelize = require('sequelize');\r\n\r\n// Option 2: Passing a connection URI\r\nexport const sequelize = new Sequelize(\r\n    \r\n    'postgres://idxehuofzgahva:6764ce04510121abfd240c5966331f997a38eebf9f963a77fa749f7a7e6825d4@ec2-54-83-9-36.compute-1.amazonaws.com:5432/d8sjqqcpb870to',\r\n     {\r\n        dialect: 'postgres',\r\n        dialectOptions: {\r\n            ssl: true\r\n        },\r\n        define: {\r\n            timestamps: false\r\n        },\r\n        pool: {\r\n            max:5,\r\n            min:0,\r\n            require:30000,\r\n            idle:10000\r\n        }\r\n     }\r\n     \r\n);\r\n\r\nsequelize\r\n  .authenticate()\r\n  .then(() => {\r\n    console.log('Connection has been established successfully.');\r\n  })\r\n  .catch(err => {\r\n    console.error('Unable to connect to the database:', err);\r\n  });*/\r\n\r\n  import Sequelize from 'sequelize';\r\n\r\n  export const sequelize = new Sequelize(\r\n          'postgres',\r\n          'postgres',\r\n          'diego7779',\r\n          {\r\n              host: 'localhost',\r\n              dialect: 'postgres',\r\n              define: {\r\n                  timestamps: false\r\n              },\r\n              pool: {\r\n                  max:5,\r\n                  min:0,\r\n                  require:30000,\r\n                  idle:10000\r\n              },\r\n              logging:false\r\n          }\r\n  );\r\n  sequelize\r\n  .authenticate()\r\n  .catch(err => {\r\n    console.error('no se pudo realizar la conexion a la base de datos:', err);\r\n  });"
      ]
    },
    "sourceType": "script",
    "mtime": 1569377293086
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\rutas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\rutas\\\\productos.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\productos.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\productos.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\productos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
        "sourceFileName": "productos.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _productoController = require(\"../controllers/productoController\");\n\nvar _userController = require(\"../controllers/userController\");\n\n/** Rutas de test */\nvar router = (0, _express.Router)();\n/** Controladores */\n\n/** Rutas */\n\n/** Obtener todos los productos */\nrouter.get('/all', _userController.ensureToken, _userController.chequeoToken, _productoController.getAll);\n/* Obtengo los productos de un idcomercio*/\n\nrouter.get('/productosPorComercio/:idcomercio', _userController.ensureToken, _userController.chequeoToken, _productoController.getProductosPorComercio);\n/* Obtengo los productos de un idpedido*/\n\nrouter.get('/productosPorPedido/:idpedido', _userController.ensureToken, _userController.chequeoToken, _productoController.getProductosPorPedido);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3Rvcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJlbnN1cmVUb2tlbiIsImNoZXF1ZW9Ub2tlbiIsImdldEFsbCIsImdldFByb2R1Y3Rvc1BvckNvbWVyY2lvIiwiZ2V0UHJvZHVjdG9zUG9yUGVkaWRvIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUc7O0FBTUE7O0FBT0E7O0FBZkE7QUFJQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFSTs7QUFjUDs7QUFDRztBQUNBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxNQUFYLEVBQW1CQywyQkFBbkIsRUFBK0JDLDRCQUEvQixFQUE0Q0MsMEJBQTVDO0FBRUE7O0FBQ0FKLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLG1DQUFYLEVBQStDQywyQkFBL0MsRUFBMkRDLDRCQUEzRCxFQUF5RUUsMkNBQXpFO0FBRUE7O0FBQ0FMLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLCtCQUFYLEVBQTJDQywyQkFBM0MsRUFBdURDLDRCQUF2RCxFQUFxRUcseUNBQXJFO2VBR2VOLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxEaWVnb1xcRG9jdW1lbnRzXFxHaXRIdWJcXFNlcnZcXHNyY1xccnV0YXMiLCJzb3VyY2VzQ29udGVudCI6WyIgICAvKiogUnV0YXMgZGUgdGVzdCAqL1xyXG5cclxuICAgaW1wb3J0IHtSb3V0ZXJ9IGZyb20gJ2V4cHJlc3MnXHJcblxyXG4gICBjb25zdCByb3V0ZXIgPSBSb3V0ZXIoKVxyXG4gICBcclxuICAgICAgIC8qKiBDb250cm9sYWRvcmVzICovXHJcbiAgIFxyXG4gICBpbXBvcnQgeyAgXHJcbiAgICAgICBnZXRBbGwsXHJcbiAgICAgICBnZXRQcm9kdWN0b3NQb3JDb21lcmNpbyxcclxuICAgICAgIGdldFByb2R1Y3Rvc1BvclBlZGlkb1xyXG4gICAgICAgfSBmcm9tICcuLi9jb250cm9sbGVycy9wcm9kdWN0b0NvbnRyb2xsZXInO1xyXG4gICBcclxuICAgXHJcbiAgIGltcG9ydCB7IFxyXG5cdCAgICBlbnN1cmVUb2tlbixjaGVxdWVvVG9rZW5cclxuXHQgICB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXJDb250cm9sbGVyJztcclxuXHJcblxyXG4vKiogUnV0YXMgKi9cclxuICAgLyoqIE9idGVuZXIgdG9kb3MgbG9zIHByb2R1Y3RvcyAqL1xyXG4gICByb3V0ZXIuZ2V0KCcvYWxsJywgZW5zdXJlVG9rZW4sY2hlcXVlb1Rva2VuLGdldEFsbCApO1xyXG4gICBcclxuICAgLyogT2J0ZW5nbyBsb3MgcHJvZHVjdG9zIGRlIHVuIGlkY29tZXJjaW8qL1xyXG4gICByb3V0ZXIuZ2V0KCcvcHJvZHVjdG9zUG9yQ29tZXJjaW8vOmlkY29tZXJjaW8nLGVuc3VyZVRva2VuLGNoZXF1ZW9Ub2tlbiwgZ2V0UHJvZHVjdG9zUG9yQ29tZXJjaW8pO1xyXG4gICBcclxuICAgLyogT2J0ZW5nbyBsb3MgcHJvZHVjdG9zIGRlIHVuIGlkcGVkaWRvKi9cclxuICAgcm91dGVyLmdldCgnL3Byb2R1Y3Rvc1BvclBlZGlkby86aWRwZWRpZG8nLGVuc3VyZVRva2VuLGNoZXF1ZW9Ub2tlbiwgZ2V0UHJvZHVjdG9zUG9yUGVkaWRvKTtcclxuICAgXHJcblxyXG4gICBleHBvcnQgZGVmYXVsdCByb3V0ZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "productos.js"
      ],
      "names": [
        "router",
        "get",
        "ensureToken",
        "chequeoToken",
        "getAll",
        "getProductosPorComercio",
        "getProductosPorPedido"
      ],
      "mappings": ";;;;;;;AAEG;;AAMA;;AAOA;;AAfA;AAIA,IAAMA,MAAM,GAAG,sBAAf;AAEI;;AAcP;;AACG;AACAA,MAAM,CAACC,GAAP,CAAW,MAAX,EAAmBC,2BAAnB,EAA+BC,4BAA/B,EAA4CC,0BAA5C;AAEA;;AACAJ,MAAM,CAACC,GAAP,CAAW,mCAAX,EAA+CC,2BAA/C,EAA2DC,4BAA3D,EAAyEE,2CAAzE;AAEA;;AACAL,MAAM,CAACC,GAAP,CAAW,+BAAX,EAA2CC,2BAA3C,EAAuDC,4BAAvD,EAAqEG,yCAArE;eAGeN,M",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
      "sourcesContent": [
        "   /** Rutas de test */\r\n\r\n   import {Router} from 'express'\r\n\r\n   const router = Router()\r\n   \r\n       /** Controladores */\r\n   \r\n   import {  \r\n       getAll,\r\n       getProductosPorComercio,\r\n       getProductosPorPedido\r\n       } from '../controllers/productoController';\r\n   \r\n   \r\n   import { \r\n\t    ensureToken,chequeoToken\r\n\t   } from '../controllers/userController';\r\n\r\n\r\n/** Rutas */\r\n   /** Obtener todos los productos */\r\n   router.get('/all', ensureToken,chequeoToken,getAll );\r\n   \r\n   /* Obtengo los productos de un idcomercio*/\r\n   router.get('/productosPorComercio/:idcomercio',ensureToken,chequeoToken, getProductosPorComercio);\r\n   \r\n   /* Obtengo los productos de un idpedido*/\r\n   router.get('/productosPorPedido/:idpedido',ensureToken,chequeoToken, getProductosPorPedido);\r\n   \r\n\r\n   export default router"
      ]
    },
    "sourceType": "script",
    "mtime": 1569463180028
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\controllers\\\\productoController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\productoController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\productoController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\productoController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
        "sourceFileName": "productoController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProductosPorComercio = getProductosPorComercio;\nexports.getAll = getAll;\nexports.getProductosPorPedido = getProductosPorPedido;\n\nvar _Producto = _interopRequireDefault(require(\"../models/Producto\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/*todos los productos de un comercio*/\nfunction getProductosPorComercio(_x, _x2) {\n  return _getProductosPorComercio.apply(this, arguments);\n}\n/** Obtener todos los productos */\n\n\nfunction _getProductosPorComercio() {\n  _getProductosPorComercio = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var idcomercio, productos;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            idcomercio = req.params.idcomercio;\n            _context.prev = 1;\n            _context.next = 4;\n            return _Producto[\"default\"].findAll({\n              where: {\n                prod_idcomercio: idcomercio\n              }\n            });\n\n          case 4:\n            productos = _context.sent;\n\n            if (productos) {\n              res.json({\n                message: 'todos los productos registrados del comercio',\n                productos: productos\n              });\n            } else {\n              res.status(500).json({\n                message: 'No se encontro registros de productos.'\n              });\n            }\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            res.status(500).json({\n              message: 'algo salio mal obteniendo los productos',\n              data: {\n                error: _context.t0\n              }\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n  return _getProductosPorComercio.apply(this, arguments);\n}\n\nfunction getAll(_x3, _x4) {\n  return _getAll.apply(this, arguments);\n}\n/*todos los productos de un pedido*/\n\n\nfunction _getAll() {\n  _getAll = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var productos;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _Producto[\"default\"].findAll();\n\n          case 3:\n            productos = _context2.sent;\n\n            if (productos) {\n              res.json({\n                message: 'todos los productos registrados',\n                productos: productos\n              });\n            } else {\n              res.status(500).json({\n                message: 'No se encontro registros de productos.'\n              });\n            }\n\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(500).json({\n              message: 'no se encontro ningun producto',\n              data: {\n                error: _context2.t0\n              }\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n  return _getAll.apply(this, arguments);\n}\n\nfunction getProductosPorPedido(_x5, _x6) {\n  return _getProductosPorPedido.apply(this, arguments);\n}\n\nfunction _getProductosPorPedido() {\n  _getProductosPorPedido = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var idpedido, sqlquery, productos;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            idpedido = req.params.idpedido;\n            _context3.prev = 1;\n            sqlquery = 'select productos.*  from items, productos where productos.prod_id=items.item_productoid and items.item_pedidoid='.concat(idpedido);\n            _context3.next = 5;\n            return _database.sequelize.query(sqlquery, {\n              type: _database.sequelize.QueryTypes.SELECT\n            });\n\n          case 5:\n            productos = _context3.sent;\n\n            if (productos) {\n              res.json({\n                message: 'todos los productos para el pedido',\n                productos: productos\n              });\n            } else {\n              res.status(500).json({\n                message: 'No se encontro registros de productos.'\n              });\n            }\n\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.status(500).json({\n              message: 'surgio un error',\n              data: {\n                error: _context3.t0\n              }\n            });\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 9]]);\n  }));\n  return _getProductosPorPedido.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3RvQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRQcm9kdWN0b3NQb3JDb21lcmNpbyIsInJlcSIsInJlcyIsImlkY29tZXJjaW8iLCJwYXJhbXMiLCJQcm9kdWN0byIsImZpbmRBbGwiLCJ3aGVyZSIsInByb2RfaWRjb21lcmNpbyIsInByb2R1Y3RvcyIsImpzb24iLCJtZXNzYWdlIiwic3RhdHVzIiwiZGF0YSIsImVycm9yIiwiZ2V0QWxsIiwiZ2V0UHJvZHVjdG9zUG9yUGVkaWRvIiwiaWRwZWRpZG8iLCJzcWxxdWVyeSIsImNvbmNhdCIsInNlcXVlbGl6ZSIsInF1ZXJ5IiwidHlwZSIsIlF1ZXJ5VHlwZXMiLCJTRUxFQ1QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7OztBQUVBO1NBQ3NCQSx1Qjs7O0FBb0N0Qjs7Ozs7OzBCQXBDTyxpQkFBdUNDLEdBQXZDLEVBQTJDQyxHQUEzQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFRUMsWUFBQUEsVUFGRixHQUVnQkYsR0FBRyxDQUFDRyxNQUZwQixDQUVFRCxVQUZGO0FBQUE7QUFBQTtBQUFBLG1CQUt1QkUscUJBQVNDLE9BQVQsQ0FBaUI7QUFDbkNDLGNBQUFBLEtBQUssRUFBRTtBQUNFQyxnQkFBQUEsZUFBZSxFQUFDTDtBQURsQjtBQUQ0QixhQUFqQixDQUx2Qjs7QUFBQTtBQUtLTSxZQUFBQSxTQUxMOztBQVdDLGdCQUFHQSxTQUFILEVBQWE7QUFFVlAsY0FBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVM7QUFFSkMsZ0JBQUFBLE9BQU8sRUFBQyw4Q0FGSjtBQUdKRixnQkFBQUEsU0FBUyxFQUFUQTtBQUhJLGVBQVQ7QUFPRixhQVRELE1BVUk7QUFDQVAsY0FBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVcsR0FBWCxFQUFnQkYsSUFBaEIsQ0FBcUI7QUFDakJDLGdCQUFBQSxPQUFPLEVBQUM7QUFEUyxlQUFyQjtBQUdIOztBQXpCRjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQTZCR1QsWUFBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVcsR0FBWCxFQUFnQkYsSUFBaEIsQ0FBcUI7QUFDakJDLGNBQUFBLE9BQU8sRUFBQyx5Q0FEUztBQUVqQkUsY0FBQUEsSUFBSSxFQUFDO0FBQUNDLGdCQUFBQSxLQUFLO0FBQU47QUFGWSxhQUFyQjs7QUE3Qkg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRzs7OztTQXFDZUMsTTs7O0FBK0J0Qjs7Ozs7OzBCQS9CTyxrQkFBc0JkLEdBQXRCLEVBQTBCQyxHQUExQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBSXVCRyxxQkFBU0MsT0FBVCxFQUp2Qjs7QUFBQTtBQUlLRyxZQUFBQSxTQUpMOztBQU1DLGdCQUFJQSxTQUFKLEVBQWM7QUFFWFAsY0FBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVM7QUFFSkMsZ0JBQUFBLE9BQU8sRUFBQyxpQ0FGSjtBQUdKRixnQkFBQUEsU0FBUyxFQUFUQTtBQUhJLGVBQVQ7QUFNRixhQVJELE1BU0k7QUFDQVAsY0FBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVcsR0FBWCxFQUFnQkYsSUFBaEIsQ0FBcUI7QUFDakJDLGdCQUFBQSxPQUFPLEVBQUM7QUFEUyxlQUFyQjtBQUdIOztBQW5CRjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXVCR1QsWUFBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVcsR0FBWCxFQUFnQkYsSUFBaEIsQ0FBcUI7QUFDakJDLGNBQUFBLE9BQU8sRUFBQyxnQ0FEUztBQUVqQkUsY0FBQUEsSUFBSSxFQUFDO0FBQUNDLGdCQUFBQSxLQUFLO0FBQU47QUFGWSxhQUFyQjs7QUF2Qkg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRzs7OztTQWdDZUUscUI7Ozs7Ozs7MEJBQWYsa0JBQXFDZixHQUFyQyxFQUF5Q0MsR0FBekM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUZlLFlBQUFBLFFBRkUsR0FFVWhCLEdBQUcsQ0FBQ0csTUFGZCxDQUVGYSxRQUZFO0FBQUE7QUFJSEMsWUFBQUEsUUFKRyxHQUlPLG1IQUFtSEMsTUFBbkgsQ0FBMEhGLFFBQTFILENBSlA7QUFBQTtBQUFBLG1CQU1pQkcsb0JBQVVDLEtBQVYsQ0FBZ0JILFFBQWhCLEVBQTBCO0FBQUVJLGNBQUFBLElBQUksRUFBRUYsb0JBQVVHLFVBQVYsQ0FBcUJDO0FBQTdCLGFBQTFCLENBTmpCOztBQUFBO0FBTUhmLFlBQUFBLFNBTkc7O0FBUU4sZ0JBQUdBLFNBQUgsRUFBYTtBQUVIUCxjQUFBQSxHQUFHLENBQUNRLElBQUosQ0FBUztBQUVKQyxnQkFBQUEsT0FBTyxFQUFDLG9DQUZKO0FBR0pGLGdCQUFBQSxTQUFTLEVBQVRBO0FBSEksZUFBVDtBQU1GLGFBUlIsTUFTVztBQUNBUCxjQUFBQSxHQUFHLENBQUNVLE1BQUosQ0FBVyxHQUFYLEVBQWdCRixJQUFoQixDQUFxQjtBQUNqQkMsZ0JBQUFBLE9BQU8sRUFBQztBQURTLGVBQXJCO0FBR0g7O0FBckJGO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBeUJHVCxZQUFBQSxHQUFHLENBQUNVLE1BQUosQ0FBVyxHQUFYLEVBQWdCRixJQUFoQixDQUFxQjtBQUNqQkMsY0FBQUEsT0FBTyxFQUFDLGlCQURTO0FBRWpCRSxjQUFBQSxJQUFJLEVBQUM7QUFBQ0MsZ0JBQUFBLEtBQUs7QUFBTjtBQUZZLGFBQXJCOztBQXpCSDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGllZ29cXERvY3VtZW50c1xcR2l0SHViXFxTZXJ2XFxzcmNcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb2R1Y3RvIGZyb20gJy4uL21vZGVscy9Qcm9kdWN0byc7XHJcbmltcG9ydCB7c2VxdWVsaXplfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZSc7XHJcblxyXG4vKnRvZG9zIGxvcyBwcm9kdWN0b3MgZGUgdW4gY29tZXJjaW8qL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UHJvZHVjdG9zUG9yQ29tZXJjaW8ocmVxLHJlcylcclxue1xyXG4gICAgdmFyIHtpZGNvbWVyY2lvfSA9IHJlcS5wYXJhbXM7XHJcbnRyeSB7XHJcblxyXG4gICAgICAgIGxldCBwcm9kdWN0b3MgPSBhd2FpdCBQcm9kdWN0by5maW5kQWxsKHtcclxuICAgICAgICAgICAgd2hlcmU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgcHJvZF9pZGNvbWVyY2lvOmlkY29tZXJjaW9cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0pO1xyXG4gIFxyXG4gICAgICAgIGlmKHByb2R1Y3Rvcyl7XHJcblxyXG4gICAgICAgICAgIHJlcy5qc29uKHtcclxuXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOid0b2RvcyBsb3MgcHJvZHVjdG9zIHJlZ2lzdHJhZG9zIGRlbCBjb21lcmNpbycsXHJcbiAgICAgICAgICAgICAgICBwcm9kdWN0b3NcclxuXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTonTm8gc2UgZW5jb250cm8gcmVnaXN0cm9zIGRlIHByb2R1Y3Rvcy4nICAgICAgXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgXHJcbiAgICAgXHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgbWVzc2FnZTonYWxnbyBzYWxpbyBtYWwgb2J0ZW5pZW5kbyBsb3MgcHJvZHVjdG9zJyxcclxuICAgICAgICAgICAgICBkYXRhOntlcnJvcn1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICB9XHJcbn1cclxuXHJcbi8qKiBPYnRlbmVyIHRvZG9zIGxvcyBwcm9kdWN0b3MgKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFsbChyZXEscmVzKXtcclxuXHJcbiAgICB0cnkge1xyXG5cclxuICAgICAgICBsZXQgcHJvZHVjdG9zID0gYXdhaXQgUHJvZHVjdG8uZmluZEFsbCgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmKCBwcm9kdWN0b3Mpe1xyXG5cclxuICAgICAgICAgICByZXMuanNvbih7XHJcblxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTondG9kb3MgbG9zIHByb2R1Y3RvcyByZWdpc3RyYWRvcycsXHJcbiAgICAgICAgICAgICAgICBwcm9kdWN0b3NcclxuXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOidObyBzZSBlbmNvbnRybyByZWdpc3Ryb3MgZGUgcHJvZHVjdG9zLicgICAgICBcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICAgICBcclxuICBcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICBtZXNzYWdlOidubyBzZSBlbmNvbnRybyBuaW5ndW4gcHJvZHVjdG8nLFxyXG4gICAgICAgICAgICAgIGRhdGE6e2Vycm9yfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgIH0gXHJcbn1cclxuXHJcblxyXG4vKnRvZG9zIGxvcyBwcm9kdWN0b3MgZGUgdW4gcGVkaWRvKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByb2R1Y3Rvc1BvclBlZGlkbyhyZXEscmVzKVxyXG57XHJcbnZhciB7aWRwZWRpZG99ID0gcmVxLnBhcmFtcztcclxudHJ5e1xyXG52YXIgc3FscXVlcnk9ICdzZWxlY3QgcHJvZHVjdG9zLiogIGZyb20gaXRlbXMsIHByb2R1Y3RvcyB3aGVyZSBwcm9kdWN0b3MucHJvZF9pZD1pdGVtcy5pdGVtX3Byb2R1Y3RvaWQgYW5kIGl0ZW1zLml0ZW1fcGVkaWRvaWQ9Jy5jb25jYXQoaWRwZWRpZG8pO1xyXG5cclxubGV0IHByb2R1Y3RvcyAgPSAgYXdhaXQgc2VxdWVsaXplLnF1ZXJ5KHNxbHF1ZXJ5ICx7IHR5cGU6IHNlcXVlbGl6ZS5RdWVyeVR5cGVzLlNFTEVDVH0pXHJcbiAgICBcclxuIGlmKHByb2R1Y3Rvcyl7XHJcblxyXG4gICAgICAgICAgIHJlcy5qc29uKHtcclxuXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOid0b2RvcyBsb3MgcHJvZHVjdG9zIHBhcmEgZWwgcGVkaWRvJyxcclxuICAgICAgICAgICAgICAgIHByb2R1Y3Rvc1xyXG5cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6J05vIHNlIGVuY29udHJvIHJlZ2lzdHJvcyBkZSBwcm9kdWN0b3MuJyAgICAgIFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgIFxyXG4gIFxyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICAgIG1lc3NhZ2U6J3N1cmdpbyB1biBlcnJvcicsXHJcbiAgICAgICAgICAgICAgZGF0YTp7ZXJyb3J9XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgfSBcclxuXHJcbiB9XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "productoController.js"
      ],
      "names": [
        "getProductosPorComercio",
        "req",
        "res",
        "idcomercio",
        "params",
        "Producto",
        "findAll",
        "where",
        "prod_idcomercio",
        "productos",
        "json",
        "message",
        "status",
        "data",
        "error",
        "getAll",
        "getProductosPorPedido",
        "idpedido",
        "sqlquery",
        "concat",
        "sequelize",
        "query",
        "type",
        "QueryTypes",
        "SELECT"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;AAEA;SACsBA,uB;;;AAoCtB;;;;;;0BApCO,iBAAuCC,GAAvC,EAA2CC,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAEEC,YAAAA,UAFF,GAEgBF,GAAG,CAACG,MAFpB,CAEED,UAFF;AAAA;AAAA;AAAA,mBAKuBE,qBAASC,OAAT,CAAiB;AACnCC,cAAAA,KAAK,EAAE;AACEC,gBAAAA,eAAe,EAACL;AADlB;AAD4B,aAAjB,CALvB;;AAAA;AAKKM,YAAAA,SALL;;AAWC,gBAAGA,SAAH,EAAa;AAEVP,cAAAA,GAAG,CAACQ,IAAJ,CAAS;AAEJC,gBAAAA,OAAO,EAAC,8CAFJ;AAGJF,gBAAAA,SAAS,EAATA;AAHI,eAAT;AAOF,aATD,MAUI;AACAP,cAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AAzBF;AAAA;;AAAA;AAAA;AAAA;AA6BGT,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,yCADS;AAEjBE,cAAAA,IAAI,EAAC;AAACC,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AA7BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAqCeC,M;;;AA+BtB;;;;;;0BA/BO,kBAAsBd,GAAtB,EAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIuBG,qBAASC,OAAT,EAJvB;;AAAA;AAIKG,YAAAA,SAJL;;AAMC,gBAAIA,SAAJ,EAAc;AAEXP,cAAAA,GAAG,CAACQ,IAAJ,CAAS;AAEJC,gBAAAA,OAAO,EAAC,iCAFJ;AAGJF,gBAAAA,SAAS,EAATA;AAHI,eAAT;AAMF,aARD,MASI;AACAP,cAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AAnBF;AAAA;;AAAA;AAAA;AAAA;AAuBGT,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,gCADS;AAEjBE,cAAAA,IAAI,EAAC;AAACC,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AAvBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAgCeE,qB;;;;;;;0BAAf,kBAAqCf,GAArC,EAAyCC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFe,YAAAA,QAFE,GAEUhB,GAAG,CAACG,MAFd,CAEFa,QAFE;AAAA;AAIHC,YAAAA,QAJG,GAIO,mHAAmHC,MAAnH,CAA0HF,QAA1H,CAJP;AAAA;AAAA,mBAMiBG,oBAAUC,KAAV,CAAgBH,QAAhB,EAA0B;AAAEI,cAAAA,IAAI,EAAEF,oBAAUG,UAAV,CAAqBC;AAA7B,aAA1B,CANjB;;AAAA;AAMHf,YAAAA,SANG;;AAQN,gBAAGA,SAAH,EAAa;AAEHP,cAAAA,GAAG,CAACQ,IAAJ,CAAS;AAEJC,gBAAAA,OAAO,EAAC,oCAFJ;AAGJF,gBAAAA,SAAS,EAATA;AAHI,eAAT;AAMF,aARR,MASW;AACAP,cAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AArBF;AAAA;;AAAA;AAAA;AAAA;AAyBGT,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,iBADS;AAEjBE,cAAAA,IAAI,EAAC;AAACC,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AAzBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
      "sourcesContent": [
        "import Producto from '../models/Producto';\r\nimport {sequelize} from '../database/database';\r\n\r\n/*todos los productos de un comercio*/\r\nexport async function getProductosPorComercio(req,res)\r\n{\r\n    var {idcomercio} = req.params;\r\ntry {\r\n\r\n        let productos = await Producto.findAll({\r\n            where: {\r\n                     prod_idcomercio:idcomercio\r\n                    }\r\n                  });\r\n  \r\n        if(productos){\r\n\r\n           res.json({\r\n\r\n                message:'todos los productos registrados del comercio',\r\n                productos\r\n\r\n            });\r\n\r\n        }\r\n        else{\r\n            res.status(500).json({\r\n                message:'No se encontro registros de productos.'      \r\n            })\r\n        }\r\n       \r\n     \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'algo salio mal obteniendo los productos',\r\n              data:{error}\r\n          });\r\n      }\r\n}\r\n\r\n/** Obtener todos los productos */\r\nexport async function getAll(req,res){\r\n\r\n    try {\r\n\r\n        let productos = await Producto.findAll();\r\n        \r\n        if( productos){\r\n\r\n           res.json({\r\n\r\n                message:'todos los productos registrados',\r\n                productos\r\n\r\n            });\r\n        }\r\n        else{\r\n            res.status(500).json({\r\n                message:'No se encontro registros de productos.'      \r\n            })\r\n        }\r\n       \r\n  \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'no se encontro ningun producto',\r\n              data:{error}\r\n          });\r\n      } \r\n}\r\n\r\n\r\n/*todos los productos de un pedido*/\r\nexport async function getProductosPorPedido(req,res)\r\n{\r\nvar {idpedido} = req.params;\r\ntry{\r\nvar sqlquery= 'select productos.*  from items, productos where productos.prod_id=items.item_productoid and items.item_pedidoid='.concat(idpedido);\r\n\r\nlet productos  =  await sequelize.query(sqlquery ,{ type: sequelize.QueryTypes.SELECT})\r\n    \r\n if(productos){\r\n\r\n           res.json({\r\n\r\n                message:'todos los productos para el pedido',\r\n                productos\r\n\r\n            });\r\n        }\r\n        else{\r\n            res.status(500).json({\r\n                message:'No se encontro registros de productos.'      \r\n            })\r\n        }\r\n       \r\n  \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'surgio un error',\r\n              data:{error}\r\n          });\r\n      } \r\n\r\n }\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570710586057
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\\\\Producto.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Producto.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Producto.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Producto.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
        "sourceFileName": "Producto.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* Defino modelo de los datos */\nvar Producto = _database.sequelize.define('productos', {\n  prod_id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  prod_value: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  prod_nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  prod_idcomercio: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  prod_descripcion: {\n    type: _sequelize[\"default\"].TEXT\n  }\n});\n\nvar _default = Producto;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlByb2R1Y3RvLmpzIl0sIm5hbWVzIjpbIlByb2R1Y3RvIiwic2VxdWVsaXplIiwiZGVmaW5lIiwicHJvZF9pZCIsInR5cGUiLCJTZXF1ZWxpemUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsInByb2RfdmFsdWUiLCJwcm9kX25vbWJyZSIsIlRFWFQiLCJwcm9kX2lkY29tZXJjaW8iLCJwcm9kX2Rlc2NyaXBjaW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQTtBQUNBLElBQU1BLFFBQVEsR0FBRUMsb0JBQVVDLE1BQVYsQ0FBaUIsV0FBakIsRUFBNkI7QUFFekNDLEVBQUFBLE9BQU8sRUFBQztBQUNKQyxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQURaO0FBRUpDLElBQUFBLFVBQVUsRUFBRTtBQUZSLEdBRmlDO0FBT3pDQyxFQUFBQSxVQUFVLEVBQUM7QUFDUEosSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEVCxHQVA4QjtBQVd6Q0csRUFBQUEsV0FBVyxFQUFDO0FBQ1JMLElBQUFBLElBQUksRUFBRUMsc0JBQVVLO0FBRFIsR0FYNkI7QUFlekNDLEVBQUFBLGVBQWUsRUFBQztBQUNaUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURKLEdBZnlCO0FBa0J6Q00sRUFBQUEsZ0JBQWdCLEVBQUM7QUFDYlIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUs7QUFESDtBQWxCd0IsQ0FBN0IsQ0FBaEI7O2VBdUJlVixRIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGllZ29cXERvY3VtZW50c1xcR2l0SHViXFxTZXJ2XFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuaW1wb3J0IHtzZXF1ZWxpemV9IGZyb20gJy4uL2RhdGFiYXNlL2RhdGFiYXNlJztcclxuXHJcbi8qIERlZmlubyBtb2RlbG8gZGUgbG9zIGRhdG9zICovXHJcbmNvbnN0IFByb2R1Y3RvPSBzZXF1ZWxpemUuZGVmaW5lKCdwcm9kdWN0b3MnLHtcclxuXHJcbiAgICBwcm9kX2lkOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXHJcbiAgICB9LFxyXG5cclxuICAgIHByb2RfdmFsdWU6e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICAgIFxyXG4gICAgfSxcclxuICAgIHByb2Rfbm9tYnJlOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuXHJcbiAgICBwcm9kX2lkY29tZXJjaW86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICB9LFxyXG4gICAgcHJvZF9kZXNjcmlwY2lvbjp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH1cclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQcm9kdWN0bzsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Producto.js"
      ],
      "names": [
        "Producto",
        "sequelize",
        "define",
        "prod_id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "prod_value",
        "prod_nombre",
        "TEXT",
        "prod_idcomercio",
        "prod_descripcion"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;AACA,IAAMA,QAAQ,GAAEC,oBAAUC,MAAV,CAAiB,WAAjB,EAA6B;AAEzCC,EAAAA,OAAO,EAAC;AACJC,IAAAA,IAAI,EAAEC,sBAAUC,OADZ;AAEJC,IAAAA,UAAU,EAAE;AAFR,GAFiC;AAOzCC,EAAAA,UAAU,EAAC;AACPJ,IAAAA,IAAI,EAAEC,sBAAUC;AADT,GAP8B;AAWzCG,EAAAA,WAAW,EAAC;AACRL,IAAAA,IAAI,EAAEC,sBAAUK;AADR,GAX6B;AAezCC,EAAAA,eAAe,EAAC;AACZP,IAAAA,IAAI,EAAEC,sBAAUC;AADJ,GAfyB;AAkBzCM,EAAAA,gBAAgB,EAAC;AACbR,IAAAA,IAAI,EAAEC,sBAAUK;AADH;AAlBwB,CAA7B,CAAhB;;eAuBeV,Q",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../database/database';\r\n\r\n/* Defino modelo de los datos */\r\nconst Producto= sequelize.define('productos',{\r\n\r\n    prod_id:{\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n\r\n    prod_value:{\r\n        type: Sequelize.INTEGER\r\n      \r\n    },\r\n    prod_nombre:{\r\n        type: Sequelize.TEXT\r\n    },\r\n\r\n    prod_idcomercio:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    prod_descripcion:{\r\n        type: Sequelize.TEXT\r\n    }\r\n});\r\n\r\nexport default Producto;"
      ]
    },
    "sourceType": "script",
    "mtime": 1569465649854
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\rutas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\rutas\\\\pedidos.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\pedidos.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\pedidos.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\pedidos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
        "sourceFileName": "pedidos.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _pedidoController = require(\"../controllers/pedidoController\");\n\nvar _userController = require(\"../controllers/userController\");\n\nvar router = (0, _express.Router)();\n/* Controladores \r\nseguramente falten.\r\n*/\n\n/* Rutas */\n\n/*obtener todos los pedidos*/\nrouter.get('/all', _userController.ensureToken, _userController.chequeoToken, _pedidoController.all);\n/* Obtengo el precio del envio antes de dar el registro del mismo en pendiente*/\n\nrouter.get('/getPrecioEnvio', _userController.ensureToken, _userController.chequeoToken, _pedidoController.getPrecioEnvio);\n/* registrarPedido */\n\nrouter.post('/registrarPedido', _userController.ensureToken, _userController.chequeoToken, _pedidoController.registrarPedido);\n/* Obtener pedido por idUsuario */\n\nrouter.get('/getPedidosUsuario/:idUsuario', _userController.ensureToken, _userController.chequeoToken, _pedidoController.getPedidosUsuario);\n/* Obtener pedido por idDelivery */\n\nrouter.get('/getPedidosDelivery/:idDelivery', _userController.ensureToken, _userController.chequeoToken, _pedidoController.getPedidosDelivery);\n/* Obtener pedidos cercanos al Delivery */\n\nrouter.get('/getPedidosPendientesParaDelivery/', _userController.ensureToken, _userController.chequeoToken, _pedidoController.getPedidosPendientesParaDelivery);\n/* setear pedido tomad por idDelivery */\n\nrouter.post('/asignarPedidoADelivery/', _userController.ensureToken, _userController.chequeoToken, _pedidoController.asignarPedidoADelivery);\n/* Exporto */\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlZGlkb3MuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiZW5zdXJlVG9rZW4iLCJjaGVxdWVvVG9rZW4iLCJhbGwiLCJnZXRQcmVjaW9FbnZpbyIsInBvc3QiLCJyZWdpc3RyYXJQZWRpZG8iLCJnZXRQZWRpZG9zVXN1YXJpbyIsImdldFBlZGlkb3NEZWxpdmVyeSIsImdldFBlZGlkb3NQZW5kaWVudGVzUGFyYURlbGl2ZXJ5IiwiYXNpZ25hclBlZGlkb0FEZWxpdmVyeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQVFBOztBQVNBOztBQWZBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUdDOzs7O0FBaUJEOztBQUNBO0FBQ0FBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLE1BQVgsRUFBa0JDLDJCQUFsQixFQUE4QkMsNEJBQTlCLEVBQTJDQyxxQkFBM0M7QUFFQTs7QUFDQUosTUFBTSxDQUFDQyxHQUFQLENBQVcsaUJBQVgsRUFBNkJDLDJCQUE3QixFQUF5Q0MsNEJBQXpDLEVBQXNERSxnQ0FBdEQ7QUFFQTs7QUFDQUwsTUFBTSxDQUFDTSxJQUFQLENBQVksa0JBQVosRUFBK0JKLDJCQUEvQixFQUEyQ0MsNEJBQTNDLEVBQXdESSxpQ0FBeEQ7QUFFQTs7QUFDQVAsTUFBTSxDQUFDQyxHQUFQLENBQVcsK0JBQVgsRUFBMkNDLDJCQUEzQyxFQUF1REMsNEJBQXZELEVBQXFFSyxtQ0FBckU7QUFFQTs7QUFDQVIsTUFBTSxDQUFDQyxHQUFQLENBQVcsaUNBQVgsRUFBNkNDLDJCQUE3QyxFQUF5REMsNEJBQXpELEVBQXVFTSxvQ0FBdkU7QUFFQTs7QUFDQVQsTUFBTSxDQUFDQyxHQUFQLENBQVcsb0NBQVgsRUFBZ0RDLDJCQUFoRCxFQUE0REMsNEJBQTVELEVBQTBFTyxrREFBMUU7QUFFQTs7QUFDQVYsTUFBTSxDQUFDTSxJQUFQLENBQVksMEJBQVosRUFBdUNKLDJCQUF2QyxFQUFtREMsNEJBQW5ELEVBQWlFUSx3Q0FBakU7QUFHQzs7ZUFDY1gsTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXERpZWdvXFxEb2N1bWVudHNcXEdpdEh1YlxcU2Vydlxcc3JjXFxydXRhcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Um91dGVyfSBmcm9tICdleHByZXNzJ1xyXG5cclxuY29uc3Qgcm91dGVyID0gUm91dGVyKClcclxuICAgXHJcblxyXG4gLyogQ29udHJvbGFkb3JlcyBcclxuXHRzZWd1cmFtZW50ZSBmYWx0ZW4uXHJcbiovXHJcbmltcG9ydCB7IGFsbCxcclxuXHQgICAgIGdldFByZWNpb0VudmlvLFxyXG5cdFx0IHJlZ2lzdHJhclBlZGlkbyxcclxuXHRcdCBnZXRQZWRpZG9zVXN1YXJpbyxcclxuXHRcdCBnZXRQZWRpZG9zRGVsaXZlcnksXHJcblx0XHQgZ2V0UGVkaWRvc1BlbmRpZW50ZXNQYXJhRGVsaXZlcnksXHJcblx0XHQgYXNpZ25hclBlZGlkb0FEZWxpdmVyeVxyXG4gICAgICAgIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvcGVkaWRvQ29udHJvbGxlcic7XHJcblxyXG5pbXBvcnQgeyBcclxuXHQgICAgZW5zdXJlVG9rZW4sY2hlcXVlb1Rva2VuXHJcblx0ICAgfSBmcm9tICcuLi9jb250cm9sbGVycy91c2VyQ29udHJvbGxlcic7XHJcbiAgIFxyXG4gICBcclxuLyogUnV0YXMgKi9cclxuLypvYnRlbmVyIHRvZG9zIGxvcyBwZWRpZG9zKi9cclxucm91dGVyLmdldCgnL2FsbCcsZW5zdXJlVG9rZW4sY2hlcXVlb1Rva2VuLGFsbCk7XHJcblxyXG4vKiBPYnRlbmdvIGVsIHByZWNpbyBkZWwgZW52aW8gYW50ZXMgZGUgZGFyIGVsIHJlZ2lzdHJvIGRlbCBtaXNtbyBlbiBwZW5kaWVudGUqL1xyXG5yb3V0ZXIuZ2V0KCcvZ2V0UHJlY2lvRW52aW8nLGVuc3VyZVRva2VuLGNoZXF1ZW9Ub2tlbixnZXRQcmVjaW9FbnZpbyk7XHJcblxyXG4vKiByZWdpc3RyYXJQZWRpZG8gKi9cclxucm91dGVyLnBvc3QoJy9yZWdpc3RyYXJQZWRpZG8nLGVuc3VyZVRva2VuLGNoZXF1ZW9Ub2tlbixyZWdpc3RyYXJQZWRpZG8pO1xyXG5cclxuLyogT2J0ZW5lciBwZWRpZG8gcG9yIGlkVXN1YXJpbyAqL1xyXG5yb3V0ZXIuZ2V0KCcvZ2V0UGVkaWRvc1VzdWFyaW8vOmlkVXN1YXJpbycsZW5zdXJlVG9rZW4sY2hlcXVlb1Rva2VuLCBnZXRQZWRpZG9zVXN1YXJpbyk7XHJcblxyXG4vKiBPYnRlbmVyIHBlZGlkbyBwb3IgaWREZWxpdmVyeSAqL1xyXG5yb3V0ZXIuZ2V0KCcvZ2V0UGVkaWRvc0RlbGl2ZXJ5LzppZERlbGl2ZXJ5JyxlbnN1cmVUb2tlbixjaGVxdWVvVG9rZW4sIGdldFBlZGlkb3NEZWxpdmVyeSk7XHJcblxyXG4vKiBPYnRlbmVyIHBlZGlkb3MgY2VyY2Fub3MgYWwgRGVsaXZlcnkgKi9cclxucm91dGVyLmdldCgnL2dldFBlZGlkb3NQZW5kaWVudGVzUGFyYURlbGl2ZXJ5LycsZW5zdXJlVG9rZW4sY2hlcXVlb1Rva2VuLCBnZXRQZWRpZG9zUGVuZGllbnRlc1BhcmFEZWxpdmVyeSk7XHJcblxyXG4vKiBzZXRlYXIgcGVkaWRvIHRvbWFkIHBvciBpZERlbGl2ZXJ5ICovXHJcbnJvdXRlci5wb3N0KCcvYXNpZ25hclBlZGlkb0FEZWxpdmVyeS8nLGVuc3VyZVRva2VuLGNoZXF1ZW9Ub2tlbiwgYXNpZ25hclBlZGlkb0FEZWxpdmVyeSk7XHJcblxyXG5cclxuIC8qIEV4cG9ydG8gKi9cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "pedidos.js"
      ],
      "names": [
        "router",
        "get",
        "ensureToken",
        "chequeoToken",
        "all",
        "getPrecioEnvio",
        "post",
        "registrarPedido",
        "getPedidosUsuario",
        "getPedidosDelivery",
        "getPedidosPendientesParaDelivery",
        "asignarPedidoADelivery"
      ],
      "mappings": ";;;;;;;AAAA;;AAQA;;AASA;;AAfA,IAAMA,MAAM,GAAG,sBAAf;AAGC;;;;AAiBD;;AACA;AACAA,MAAM,CAACC,GAAP,CAAW,MAAX,EAAkBC,2BAAlB,EAA8BC,4BAA9B,EAA2CC,qBAA3C;AAEA;;AACAJ,MAAM,CAACC,GAAP,CAAW,iBAAX,EAA6BC,2BAA7B,EAAyCC,4BAAzC,EAAsDE,gCAAtD;AAEA;;AACAL,MAAM,CAACM,IAAP,CAAY,kBAAZ,EAA+BJ,2BAA/B,EAA2CC,4BAA3C,EAAwDI,iCAAxD;AAEA;;AACAP,MAAM,CAACC,GAAP,CAAW,+BAAX,EAA2CC,2BAA3C,EAAuDC,4BAAvD,EAAqEK,mCAArE;AAEA;;AACAR,MAAM,CAACC,GAAP,CAAW,iCAAX,EAA6CC,2BAA7C,EAAyDC,4BAAzD,EAAuEM,oCAAvE;AAEA;;AACAT,MAAM,CAACC,GAAP,CAAW,oCAAX,EAAgDC,2BAAhD,EAA4DC,4BAA5D,EAA0EO,kDAA1E;AAEA;;AACAV,MAAM,CAACM,IAAP,CAAY,0BAAZ,EAAuCJ,2BAAvC,EAAmDC,4BAAnD,EAAiEQ,wCAAjE;AAGC;;eACcX,M",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
      "sourcesContent": [
        "import {Router} from 'express'\r\n\r\nconst router = Router()\r\n   \r\n\r\n /* Controladores \r\n\tseguramente falten.\r\n*/\r\nimport { all,\r\n\t     getPrecioEnvio,\r\n\t\t registrarPedido,\r\n\t\t getPedidosUsuario,\r\n\t\t getPedidosDelivery,\r\n\t\t getPedidosPendientesParaDelivery,\r\n\t\t asignarPedidoADelivery\r\n        } from '../controllers/pedidoController';\r\n\r\nimport { \r\n\t    ensureToken,chequeoToken\r\n\t   } from '../controllers/userController';\r\n   \r\n   \r\n/* Rutas */\r\n/*obtener todos los pedidos*/\r\nrouter.get('/all',ensureToken,chequeoToken,all);\r\n\r\n/* Obtengo el precio del envio antes de dar el registro del mismo en pendiente*/\r\nrouter.get('/getPrecioEnvio',ensureToken,chequeoToken,getPrecioEnvio);\r\n\r\n/* registrarPedido */\r\nrouter.post('/registrarPedido',ensureToken,chequeoToken,registrarPedido);\r\n\r\n/* Obtener pedido por idUsuario */\r\nrouter.get('/getPedidosUsuario/:idUsuario',ensureToken,chequeoToken, getPedidosUsuario);\r\n\r\n/* Obtener pedido por idDelivery */\r\nrouter.get('/getPedidosDelivery/:idDelivery',ensureToken,chequeoToken, getPedidosDelivery);\r\n\r\n/* Obtener pedidos cercanos al Delivery */\r\nrouter.get('/getPedidosPendientesParaDelivery/',ensureToken,chequeoToken, getPedidosPendientesParaDelivery);\r\n\r\n/* setear pedido tomad por idDelivery */\r\nrouter.post('/asignarPedidoADelivery/',ensureToken,chequeoToken, asignarPedidoADelivery);\r\n\r\n\r\n /* Exporto */\r\nexport default router\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1569373949927
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\controllers\\\\pedidoController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\pedidoController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\pedidoController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\pedidoController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
        "sourceFileName": "pedidoController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.all = all;\nexports.getPedidosUsuario = getPedidosUsuario;\nexports.getPedidosDelivery = getPedidosDelivery;\nexports.registrarPedido = registrarPedido;\nexports.getPedidosPendientesParaDelivery = getPedidosPendientesParaDelivery;\nexports.asignarPedidoADelivery = asignarPedidoADelivery;\nexports.getPrecioEnvio = getPrecioEnvio;\n\nvar _Pedido = _interopRequireDefault(require(\"../models/Pedido\"));\n\nvar _Producto = _interopRequireDefault(require(\"../models/Producto\"));\n\nvar _Item = _interopRequireDefault(require(\"../models/Item\"));\n\nvar _Service = require(\"../service/Service\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction all(_x, _x2) {\n  return _all.apply(this, arguments);\n} //obtengo los pedidos de usuario solicita pedido\n\n\nfunction _all() {\n  _all = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var pedidos;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _Pedido[\"default\"].findAll({\n              attributes: ['ped_id', 'ped_userid', 'ped_deliveryid']\n            });\n\n          case 3:\n            pedidos = _context.sent;\n\n            if (pedidos) {\n              res.json({\n                message: 'todos los pedidos registrados',\n                pedidos: pedidos\n              });\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'no se pudo obtener los pedidos',\n              data: _context.t0\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _all.apply(this, arguments);\n}\n\nfunction getPedidosUsuario(_x3, _x4) {\n  return _getPedidosUsuario.apply(this, arguments);\n} //obtengo los pedidos de usuario  delivery\n\n\nfunction _getPedidosUsuario() {\n  _getPedidosUsuario = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var idUsuario, pedidos;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            idUsuario = req.params.idUsuario;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _Pedido[\"default\"].findAll({\n              where: {\n                ped_userid: idUsuario\n              },\n              attributes: ['ped_id', 'ped_userid', 'ped_deliveryid', 'ped_total', 'ped_envio', 'ped_direccioninicio', 'ped_direcciondestino', 'ped_latitudinicio', 'ped_longitudinicio', 'ped_latituddestino', 'ped_longituddestino', 'ped_longituddestino', 'ped_estado']\n            });\n\n          case 4:\n            pedidos = _context2.sent;\n\n            if (pedidos) {\n              res.json({\n                message: 'pedidos del usuario',\n                pedidos: pedidos\n              });\n            } else {\n              res.json({\n                message: 'No se encontro registros de pedidos.'\n              });\n            }\n\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            res.status(500).json({\n              message: 'algo no funciono 1',\n              data: idusuario\n            });\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 8]]);\n  }));\n  return _getPedidosUsuario.apply(this, arguments);\n}\n\nfunction getPedidosDelivery(_x5, _x6) {\n  return _getPedidosDelivery.apply(this, arguments);\n} //registro el pedido pendiente\n\n\nfunction _getPedidosDelivery() {\n  _getPedidosDelivery = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var idDelivery, pedidos;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            idDelivery = req.params.idDelivery;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _Pedido[\"default\"].findAll({\n              where: {\n                ped_deliveryid: idDelivery\n              },\n              attributes: ['ped_id', 'ped_userid', 'ped_deliveryid', 'ped_total', 'ped_envio', 'ped_direccioninicio', 'ped_direcciondestino', 'ped_latitudinicio', 'ped_longitudinicio', 'ped_latituddestino', 'ped_longituddestino', 'ped_longituddestino', 'ped_estado']\n            });\n\n          case 4:\n            pedidos = _context3.sent;\n\n            if (pedidos) {\n              res.json({\n                message: 'pedidos del delivery',\n                pedidos: pedidos\n              });\n            } else {\n              res.json({\n                message: 'No se encontro registros de pedidos.'\n              });\n            }\n\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.status(500).json({\n              message: 'algo no funciono',\n              data: idDelivery\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 8]]);\n  }));\n  return _getPedidosDelivery.apply(this, arguments);\n}\n\nfunction registrarPedido(_x7, _x8) {\n  return _registrarPedido.apply(this, arguments);\n} //obtengo los pedidos pendientes cercanos.\n\n\nfunction _registrarPedido() {\n  _registrarPedido = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body2, iduser, diri, dirf, lati, longi, latf, longf, items, pesoxkm, iddelivery, total, envio, estadopedido, idpedido, nuevoPedido, i, numItems, stringJson, idProducto, cantidad, productFound, nuevoitem, value, pedidoUpdate;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body2 = req.body, iduser = _req$body2.iduser, diri = _req$body2.diri, dirf = _req$body2.dirf, lati = _req$body2.lati, longi = _req$body2.longi, latf = _req$body2.latf, longf = _req$body2.longf, items = _req$body2.items;\n            pesoxkm = 1;\n            _context4.prev = 2;\n            iddelivery = 0;\n            total = 0;\n            envio = 0; //estadopedido=1 pendiente       \n\n            estadopedido = 1; //creo el pedido con total=0\n\n            idpedido = 0;\n            _context4.next = 10;\n            return _Pedido[\"default\"].create({\n              ped_userid: iduser,\n              ped_deliveryid: iddelivery,\n              ped_total: total,\n              ped_envio: envio,\n              ped_direccioninicio: diri,\n              ped_direcciondestino: dirf,\n              ped_latitudinicio: lati,\n              ped_longitudinicio: longi,\n              ped_latituddestino: latf,\n              ped_longituddestino: longf,\n              ped_estado: estadopedido\n            }, {\n              fields: ['ped_userid', 'ped_deliveryid', 'ped_total', 'ped_envio', 'ped_direccioninicio', 'ped_direcciondestino', 'ped_latitudinicio', 'ped_longitudinicio', 'ped_latituddestino', 'ped_longituddestino', 'ped_longituddestino', 'ped_estado']\n            });\n\n          case 10:\n            nuevoPedido = _context4.sent;\n\n            if (!nuevoPedido) {\n              _context4.next = 35;\n              break;\n            }\n\n            //obtengo el id pedido\n            idpedido = nuevoPedido.ped_id;\n            i = 0;\n            numItems = items.length; //saco todos los items\n\n          case 15:\n            if (!(i < numItems)) {\n              _context4.next = 30;\n              break;\n            }\n\n            //saco el string del json\n            stringJson = items[i]; //valores id y cantidad\n\n            idProducto = stringJson.id;\n            cantidad = stringJson.cantidad; //busco los datos del producto\n\n            _context4.next = 21;\n            return _Producto[\"default\"].findOne({\n              where: {\n                prod_id: idProducto\n              },\n              attributes: ['prod_value']\n            });\n\n          case 21:\n            productFound = _context4.sent;\n\n            if (!productFound) {\n              _context4.next = 27;\n              break;\n            }\n\n            _context4.next = 25;\n            return _Item[\"default\"].create({\n              item_pedidoid: idpedido,\n              item_productoid: idProducto,\n              item_cantidad: cantidad\n            }, {\n              fields: ['item_pedidoid', 'item_productoid', 'item_cantidad']\n            });\n\n          case 25:\n            nuevoitem = _context4.sent;\n\n            if (nuevoitem) {\n              value = productFound.prod_value;\n              total += value * cantidad;\n            }\n\n          case 27:\n            //incremento \n            i = i + 1;\n            _context4.next = 15;\n            break;\n\n          case 30:\n            envio = pesoxkm * parseInt((0, _Service.getKilometros)(latf, longf, lati, longi)); //hago el update del total del pedido  \n\n            _context4.next = 33;\n            return _Pedido[\"default\"].update({\n              ped_total: total,\n              ped_envio: envio\n            }, {\n              where: {\n                ped_id: idpedido\n              }\n            });\n\n          case 33:\n            pedidoUpdate = _context4.sent;\n\n            if (pedidoUpdate) {\n              //devuelvo el id pedido y el total\n              res.json({\n                message: 'pedido pendiente',\n                idpedido: idpedido,\n                total: total,\n                envio: envio\n              });\n            } else {\n              //devuelvo el id pedido y el total\n              res.status(500).json({\n                message: 'no se pudo hacer el update',\n                data: {\n                  error: error\n                }\n              });\n            }\n\n          case 35:\n            _context4.next = 40;\n            break;\n\n          case 37:\n            _context4.prev = 37;\n            _context4.t0 = _context4[\"catch\"](2);\n            res.status(500).json({\n              message: 'no se pudo registrar el pedido',\n              data: _context4.t0\n            });\n\n          case 40:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[2, 37]]);\n  }));\n  return _registrarPedido.apply(this, arguments);\n}\n\nfunction getPedidosPendientesParaDelivery(_x9, _x10) {\n  return _getPedidosPendientesParaDelivery.apply(this, arguments);\n} //asignacion de pedido a delivery\n\n\nfunction _getPedidosPendientesParaDelivery() {\n  _getPedidosPendientesParaDelivery = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    var _req$body3, lati, longi, estadopedido, maxkms, pedidos, pedidoscercanos;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _req$body3 = req.body, lati = _req$body3.lati, longi = _req$body3.longi;\n            estadopedido = 1;\n            maxkms = 20;\n            _context5.prev = 3;\n            _context5.next = 6;\n            return _Pedido[\"default\"].findAll({\n              where: {\n                ped_estado: estadopedido\n              },\n              attributes: ['ped_id', 'ped_userid', 'ped_deliveryid', 'ped_total', 'ped_envio', 'ped_direccioninicio', 'ped_direcciondestino', 'ped_latitudinicio', 'ped_longitudinicio', 'ped_latituddestino', 'ped_longituddestino', 'ped_longituddestino', 'ped_estado']\n            });\n\n          case 6:\n            pedidos = _context5.sent;\n\n            if (pedidos) {\n              //filtro los cercanos \n              pedidoscercanos = [];\n              pedidos.forEach(function (ped) {\n                var lat = ped.ped_latitudinicio;\n                var _long = ped.ped_longitudinicio;\n\n                if (parseInt((0, _Service.getKilometros)(lat, _long, lati, longi)) <= maxkms) {\n                  pedidoscercanos.push(ped);\n                }\n              });\n              res.json({\n                message: 'pedidos pendientes son:',\n                pedidoscercanos: pedidoscercanos\n              });\n            } else {\n              res.status(500).json({\n                message: 'No se encontro registros de pedidos.'\n              });\n            }\n\n            _context5.next = 13;\n            break;\n\n          case 10:\n            _context5.prev = 10;\n            _context5.t0 = _context5[\"catch\"](3);\n            res.status(500).json({\n              message: 'algo no funciono',\n              data: {\n                error: _context5.t0\n              }\n            });\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[3, 10]]);\n  }));\n  return _getPedidosPendientesParaDelivery.apply(this, arguments);\n}\n\nfunction asignarPedidoADelivery(_x11, _x12) {\n  return _asignarPedidoADelivery.apply(this, arguments);\n}\n/* obtengo el precio del envio antes de dar el ok o no al registro \r\npedido*/\n\n\nfunction _asignarPedidoADelivery() {\n  _asignarPedidoADelivery = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(req, res) {\n    var _req$body4, idpedido, iddelivery, estadoPendiente, estadoAsignado, pedidosSinAsignar, pedidoUpdate;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _req$body4 = req.body, idpedido = _req$body4.idpedido, iddelivery = _req$body4.iddelivery;\n            estadoPendiente = 1;\n            estadoAsignado = 2;\n            _context6.prev = 3;\n            _context6.next = 6;\n            return _Pedido[\"default\"].count({\n              where: {\n                ped_id: idpedido,\n                ped_estado: estadoPendiente\n              }\n            });\n\n          case 6:\n            pedidosSinAsignar = _context6.sent;\n\n            if (!(pedidosSinAsignar > 0)) {\n              _context6.next = 14;\n              break;\n            }\n\n            _context6.next = 10;\n            return _Pedido[\"default\"].update({\n              ped_deliveryid: iddelivery,\n              ped_estado: estadoAsignado\n            }, {\n              where: {\n                ped_id: idpedido\n              }\n            });\n\n          case 10:\n            pedidoUpdate = _context6.sent;\n\n            if (pedidoUpdate) {\n              //devuelvo el id pedido y el delivery\n              res.json({\n                message: 'pedido asignado',\n                idpedido: idpedido,\n                iddelivery: iddelivery\n              });\n            } else {\n              res.status(500).json({\n                message: 'No se pudo asignar un pedido.'\n              });\n            }\n\n            _context6.next = 15;\n            break;\n\n          case 14:\n            res.status(500).json({\n              message: 'El pedido ya fue asignado.'\n            });\n\n          case 15:\n            _context6.next = 20;\n            break;\n\n          case 17:\n            _context6.prev = 17;\n            _context6.t0 = _context6[\"catch\"](3);\n            res.status(500).json({\n              message: 'algo no funciono',\n              data: {\n                error: _context6.t0\n              }\n            });\n\n          case 20:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[3, 17]]);\n  }));\n  return _asignarPedidoADelivery.apply(this, arguments);\n}\n\nfunction getPrecioEnvio(req, res) {\n  var _req$body = req.body,\n      lati = _req$body.lati,\n      longi = _req$body.longi,\n      latf = _req$body.latf,\n      longf = _req$body.longf;\n  var pesoxkm = 10;\n  var kms = (0, _Service.getKilometros)(latf, longf, lati, longi);\n  var envio = (0, _Service.getPrecioEnvioPorReglas)(1, 19, kms * pesoxkm, kms, 10, 1, 4343); //const re=  getPorcentajeEnvioPorReglas(0, 21, 500 ,11,1, 333);\n  //console.log(re);\n\n  res.json({\n    message: 'valor envio',\n    envio: envio\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "pedidoController.js"
      ],
      "names": [
        "all",
        "req",
        "res",
        "Pedido",
        "findAll",
        "attributes",
        "pedidos",
        "json",
        "message",
        "status",
        "data",
        "getPedidosUsuario",
        "idUsuario",
        "params",
        "where",
        "ped_userid",
        "idusuario",
        "getPedidosDelivery",
        "idDelivery",
        "ped_deliveryid",
        "registrarPedido",
        "body",
        "iduser",
        "diri",
        "dirf",
        "lati",
        "longi",
        "latf",
        "longf",
        "items",
        "pesoxkm",
        "iddelivery",
        "total",
        "envio",
        "estadopedido",
        "idpedido",
        "create",
        "ped_total",
        "ped_envio",
        "ped_direccioninicio",
        "ped_direcciondestino",
        "ped_latitudinicio",
        "ped_longitudinicio",
        "ped_latituddestino",
        "ped_longituddestino",
        "ped_estado",
        "fields",
        "nuevoPedido",
        "ped_id",
        "i",
        "numItems",
        "length",
        "stringJson",
        "idProducto",
        "id",
        "cantidad",
        "Producto",
        "findOne",
        "prod_id",
        "productFound",
        "Item",
        "item_pedidoid",
        "item_productoid",
        "item_cantidad",
        "nuevoitem",
        "value",
        "prod_value",
        "parseInt",
        "update",
        "pedidoUpdate",
        "error",
        "getPedidosPendientesParaDelivery",
        "maxkms",
        "pedidoscercanos",
        "forEach",
        "ped",
        "lat",
        "long",
        "push",
        "asignarPedidoADelivery",
        "estadoPendiente",
        "estadoAsignado",
        "count",
        "pedidosSinAsignar",
        "getPrecioEnvio",
        "kms"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;SAKsBA,G;;EAyBtB;;;;;;0BAzBO,iBAAmBC,GAAnB,EAAwBC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAImBC,mBAAOC,OAAP,CAAe;AAAEC,cAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,YAAX,EAAyB,gBAAzB;AAAd,aAAf,CAJnB;;AAAA;AAICC,YAAAA,OAJD;;AAMH,gBAAGA,OAAH,EACA;AACEJ,cAAAA,GAAG,CAACK,IAAJ,CAAS;AACLC,gBAAAA,OAAO,EAAC,+BADH;AAELF,gBAAAA,OAAO,EAAPA;AAFK,eAAT;AAKD;;AAbE;AAAA;;AAAA;AAAA;AAAA;AAiBLJ,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,gCADS;AAEjBE,cAAAA,IAAI;AAFa,aAArB;;AAjBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA0BeC,iB;;EAiDtB;;;;;;0BAjDO,kBAAiCV,GAAjC,EAAsCC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAGIU,YAAAA,SAHJ,GAGiBX,GAAG,CAACY,MAHrB,CAGID,SAHJ;AAAA;AAAA;AAAA,mBAOqBT,mBAAOC,OAAP,CAAe;AAC/BU,cAAAA,KAAK,EAAE;AACLC,gBAAAA,UAAU,EAACH;AADN,eADwB;AAI/BP,cAAAA,UAAU,EAAE,CACV,QADU,EAEV,YAFU,EAGV,gBAHU,EAIV,WAJU,EAKV,WALU,EAMV,qBANU,EAOV,sBAPU,EAQV,mBARU,EASV,oBATU,EAUV,oBAVU,EAWV,qBAXU,EAYV,qBAZU,EAaV,YAbU;AAJmB,aAAf,CAPrB;;AAAA;AAOKC,YAAAA,OAPL;;AA4BC,gBAAGA,OAAH,EAAW;AAEPJ,cAAAA,GAAG,CAACK,IAAJ,CAAS;AACPC,gBAAAA,OAAO,EAAC,qBADD;AAEPF,gBAAAA,OAAO,EAAPA;AAFO,eAAT;AAIH,aAND,MAMK;AACDJ,cAAAA,GAAG,CAACK,IAAJ,CAAS;AACLC,gBAAAA,OAAO,EAAC;AADH,eAAT;AAGH;;AAtCF;AAAA;;AAAA;AAAA;AAAA;AAyCCN,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,oBADS;AAEjBE,cAAAA,IAAI,EAACM;AAFY,aAArB;;AAzCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAkDeC,kB;;EAkDtB;;;;;;0BAlDO,kBAAkChB,GAAlC,EAAuCC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAGIgB,YAAAA,UAHJ,GAGkBjB,GAAG,CAACY,MAHtB,CAGIK,UAHJ;AAAA;AAAA;AAAA,mBAOqBf,mBAAOC,OAAP,CAAe;AAC/BU,cAAAA,KAAK,EAAE;AACLK,gBAAAA,cAAc,EAACD;AADV,eADwB;AAI/Bb,cAAAA,UAAU,EAAE,CACV,QADU,EAEV,YAFU,EAGV,gBAHU,EAIV,WAJU,EAKV,WALU,EAMV,qBANU,EAOV,sBAPU,EAQV,mBARU,EASV,oBATU,EAUV,oBAVU,EAWV,qBAXU,EAYV,qBAZU,EAaV,YAbU;AAJmB,aAAf,CAPrB;;AAAA;AAOKC,YAAAA,OAPL;;AA4BC,gBAAGA,OAAH,EAAW;AAETJ,cAAAA,GAAG,CAACK,IAAJ,CAAS;AACPC,gBAAAA,OAAO,EAAC,sBADD;AAEPF,gBAAAA,OAAO,EAAPA;AAFO,eAAT;AAKD,aAPD,MAOK;AACDJ,cAAAA,GAAG,CAACK,IAAJ,CAAS;AACLC,gBAAAA,OAAO,EAAC;AADH,eAAT;AAGH;;AAvCF;AAAA;;AAAA;AAAA;AAAA;AA0CCN,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,kBADS;AAEjBE,cAAAA,IAAI,EAACQ;AAFY,aAArB;;AA1CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAmDeE,e;;EAuItB;;;;;;0BAvIO,kBAA+BnB,GAA/B,EAAoCC,GAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAE8CD,GAAG,CAACoB,IAFlD,EAEFC,MAFE,cAEFA,MAFE,EAEKC,IAFL,cAEKA,IAFL,EAEUC,IAFV,cAEUA,IAFV,EAEeC,IAFf,cAEeA,IAFf,EAEoBC,KAFpB,cAEoBA,KAFpB,EAE0BC,IAF1B,cAE0BA,IAF1B,EAE+BC,KAF/B,cAE+BA,KAF/B,EAEqCC,KAFrC,cAEqCA,KAFrC;AAGHC,YAAAA,OAHG,GAGK,CAHL;AAAA;AAMSC,YAAAA,UANT,GAMoB,CANpB;AAOSC,YAAAA,KAPT,GAOe,CAPf;AAQSC,YAAAA,KART,GAQe,CARf,EASK;;AACIC,YAAAA,YAVT,GAUsB,CAVtB,EAWK;;AACIC,YAAAA,QAZT,GAYkB,CAZlB;AAAA;AAAA,mBAc6BhC,mBAAOiC,MAAP,CAAc;AACtCrB,cAAAA,UAAU,EAAEO,MAD0B;AAEtCH,cAAAA,cAAc,EAAEY,UAFsB;AAGtCM,cAAAA,SAAS,EAAEL,KAH2B;AAItCM,cAAAA,SAAS,EAAEL,KAJ2B;AAKtCM,cAAAA,mBAAmB,EAAEhB,IALiB;AAMtCiB,cAAAA,oBAAoB,EAAEhB,IANgB;AAOtCiB,cAAAA,iBAAiB,EAAEhB,IAPmB;AAQtCiB,cAAAA,kBAAkB,EAAEhB,KARkB;AAStCiB,cAAAA,kBAAkB,EAAEhB,IATkB;AAUtCiB,cAAAA,mBAAmB,EAAEhB,KAViB;AAWtCiB,cAAAA,UAAU,EAACX;AAX2B,aAAd,EAc1B;AACAY,cAAAA,MAAM,EAAC,CACL,YADK,EAEL,gBAFK,EAGL,WAHK,EAIL,WAJK,EAKL,qBALK,EAML,sBANK,EAOL,mBAPK,EAQL,oBARK,EASL,oBATK,EAUL,qBAVK,EAWL,qBAXK,EAYL,YAZK;AADP,aAd0B,CAd7B;;AAAA;AAcSC,YAAAA,WAdT;;AAAA,iBA+CQA,WA/CR;AAAA;AAAA;AAAA;;AAiDK;AACAZ,YAAAA,QAAQ,GAAEY,WAAW,CAACC,MAAtB;AACIC,YAAAA,CAnDT,GAmDa,CAnDb;AAoDWC,YAAAA,QApDX,GAoDqBrB,KAAK,CAACsB,MApD3B,EAqDK;;AArDL;AAAA,kBAsDYF,CAAC,GAAGC,QAtDhB;AAAA;AAAA;AAAA;;AAwDO;AACIE,YAAAA,UAzDX,GAyDsBvB,KAAK,CAACoB,CAAD,CAzD3B,EA0DO;;AACMI,YAAAA,UA3Db,GA2DyBD,UAAU,CAACE,EA3DpC;AA4DaC,YAAAA,QA5Db,GA4DyBH,UAAU,CAACG,QA5DpC,EA6DO;;AA7DP;AAAA,mBA8DkCC,qBAASC,OAAT,CAAiB;AACtC3C,cAAAA,KAAK,EAAE;AACC4C,gBAAAA,OAAO,EAACL;AADT,eAD+B;AAItChD,cAAAA,UAAU,EAAE,CAAC,YAAD;AAJ0B,aAAjB,CA9DlC;;AAAA;AA8DasD,YAAAA,YA9Db;;AAAA,iBAqEUA,YArEV;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAuE+BC,iBAAKxB,MAAL,CAAY;AACpByB,cAAAA,aAAa,EAAE1B,QADK;AAEpB2B,cAAAA,eAAe,EAAET,UAFG;AAGpBU,cAAAA,aAAa,EAAER;AAHK,aAAZ,EAIL;AACLT,cAAAA,MAAM,EAAC,CACP,eADO,EAEP,iBAFO,EAGP,eAHO;AADF,aAJK,CAvE/B;;AAAA;AAuEakB,YAAAA,SAvEb;;AAmFS,gBAAGA,SAAH,EACD;AACIC,cAAAA,KADJ,GACUN,YAAY,CAACO,UADvB;AAEAlC,cAAAA,KAAK,IAAEiC,KAAK,GAACV,QAAb;AACC;;AAvFT;AAyFJ;AACCN,YAAAA,CAAC,GAAGA,CAAC,GAAC,CAAN;AA1FG;AAAA;;AAAA;AA6FJhB,YAAAA,KAAK,GAACH,OAAO,GAACqC,QAAQ,CAAC,4BAAcxC,IAAd,EAAmBC,KAAnB,EAAyBH,IAAzB,EAA8BC,KAA9B,CAAD,CAAtB,CA7FI,CA8FL;;AA9FK;AAAA,mBA+FmBvB,mBAAOiE,MAAP,CACtB;AAAE/B,cAAAA,SAAS,EAAEL,KAAb;AACEM,cAAAA,SAAS,EAAEL;AADb,aADsB,EAItB;AAAEnB,cAAAA,KAAK,EAAE;AAAEkC,gBAAAA,MAAM,EAAEb;AAAV;AAAT,aAJsB,CA/FnB;;AAAA;AA+FDkC,YAAAA,YA/FC;;AAsGL,gBAAGA,YAAH,EACG;AACA;AACDnE,cAAAA,GAAG,CAACK,IAAJ,CACA;AACAC,gBAAAA,OAAO,EAAC,kBADR;AAEC2B,gBAAAA,QAAQ,EAARA,QAFD;AAEUH,gBAAAA,KAAK,EAALA,KAFV;AAEgBC,gBAAAA,KAAK,EAALA;AAFhB,eADA;AAMC,aATH,MAWE;AACG;AACA/B,cAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACpBC,gBAAAA,OAAO,EAAC,4BADY;AAEpBE,gBAAAA,IAAI,EAAC;AAAC4D,kBAAAA,KAAK,EAALA;AAAD;AAFe,eAArB;AAKF;;AAxHE;AAAA;AAAA;;AAAA;AAAA;AAAA;AA+HLpE,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,gCADS;AAEjBE,cAAAA,IAAI;AAFa,aAArB;;AA/HK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAwIe6D,gC;;EAkEtB;;;;;;0BAlEO,kBAAgDtE,GAAhD,EAAqDC,GAArD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEcD,GAAG,CAACoB,IAFlB,EAEAI,IAFA,cAEAA,IAFA,EAEKC,KAFL,cAEKA,KAFL;AAGDQ,YAAAA,YAHC,GAGY,CAHZ;AAIDsC,YAAAA,MAJC,GAIM,EAJN;AAAA;AAAA;AAAA,mBAQiBrE,mBAAOC,OAAP,CAAe;AAC/BU,cAAAA,KAAK,EAAE;AACL+B,gBAAAA,UAAU,EAAEX;AADP,eADwB;AAI/B7B,cAAAA,UAAU,EAAE,CACV,QADU,EAEV,YAFU,EAGV,gBAHU,EAIV,WAJU,EAKV,WALU,EAMV,qBANU,EAOV,sBAPU,EAQV,mBARU,EASV,oBATU,EAUV,oBAVU,EAWV,qBAXU,EAYV,qBAZU,EAaV,YAbU;AAJmB,aAAf,CARjB;;AAAA;AAQCC,YAAAA,OARD;;AA6BH,gBAAGA,OAAH,EAAW;AACT;AACImE,cAAAA,eAFK,GAEW,EAFX;AAGTnE,cAAAA,OAAO,CAACoE,OAAR,CACE,UAACC,GAAD,EAAS;AACR,oBAAIC,GAAG,GAAED,GAAG,CAAClC,iBAAb;AACA,oBAAIoC,KAAI,GAACF,GAAG,CAACjC,kBAAb;;AACD,oBAAGyB,QAAQ,CAAC,4BAAcS,GAAd,EAAkBC,KAAlB,EAAuBpD,IAAvB,EAA4BC,KAA5B,CAAD,CAAR,IAA8C8C,MAAjD,EACC;AACCC,kBAAAA,eAAe,CAACK,IAAhB,CAAqBH,GAArB;AACA;AAEG,eATP;AAaIzE,cAAAA,GAAG,CAACK,IAAJ,CACA;AACEC,gBAAAA,OAAO,EAAC,yBADV;AAEEiE,gBAAAA,eAAe,EAAfA;AAFF,eADA;AAQL,aAxBD,MAwBK;AACDvE,cAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AAzDE;AAAA;;AAAA;AAAA;AAAA;AA4DHN,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,kBADS;AAEjBE,cAAAA,IAAI,EAAC;AAAC4D,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AA5DG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAmEeS,sB;;;AA8DtB;;;;;;;0BA9DO,kBAAsC9E,GAAtC,EAA2CC,GAA3C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEqBD,GAAG,CAACoB,IAFzB,EAEFc,QAFE,cAEFA,QAFE,EAEOJ,UAFP,cAEOA,UAFP;AAGHiD,YAAAA,eAHG,GAGa,CAHb;AAIHC,YAAAA,cAJG,GAIY,CAJZ;AAAA;AAAA;AAAA,mBAQyB9E,mBAAO+E,KAAP,CAAa;AAC3CpE,cAAAA,KAAK,EAAE;AACLkC,gBAAAA,MAAM,EAAEb,QADH;AAELU,gBAAAA,UAAU,EAAEmC;AAFP;AADoC,aAAb,CARzB;;AAAA;AAQDG,YAAAA,iBARC;;AAAA,kBAgBJA,iBAAiB,GAAC,CAhBd;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAmBoBhF,mBAAOiE,MAAP,CACvB;AACAjD,cAAAA,cAAc,EAAEY,UADhB;AAEAc,cAAAA,UAAU,EAACoC;AAFX,aADuB,EAKzB;AACEnE,cAAAA,KAAK,EAAE;AAAEkC,gBAAAA,MAAM,EAAEb;AAAV;AADT,aALyB,CAnBpB;;AAAA;AAmBCkC,YAAAA,YAnBD;;AA6BL,gBAAGA,YAAH,EACA;AACC;AACAnE,cAAAA,GAAG,CAACK,IAAJ,CACC;AACAC,gBAAAA,OAAO,EAAC,iBADR;AAEA2B,gBAAAA,QAAQ,EAARA,QAFA;AAESJ,gBAAAA,UAAU,EAAVA;AAFT,eADD;AAKA,aARD,MAUA;AACE7B,cAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGA;;AA3CG;AAAA;;AAAA;AA+CHN,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACrBC,cAAAA,OAAO,EAAC;AADa,aAArB;;AA/CG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwDLN,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,kBADS;AAEjBE,cAAAA,IAAI,EAAC;AAAC4D,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AAxDK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgEC,SAASc,cAAT,CAAwBnF,GAAxB,EAA6BC,GAA7B,EACR;AAAA,kBACgCD,GAAG,CAACoB,IADpC;AAAA,MACOI,IADP,aACOA,IADP;AAAA,MACYC,KADZ,aACYA,KADZ;AAAA,MACkBC,IADlB,aACkBA,IADlB;AAAA,MACuBC,KADvB,aACuBA,KADvB;AAEE,MAAIE,OAAO,GAAC,EAAZ;AACA,MAAIuD,GAAG,GAAC,4BAAc1D,IAAd,EAAmBC,KAAnB,EAAyBH,IAAzB,EAA8BC,KAA9B,CAAR;AAEA,MAAKO,KAAK,GAAK,sCAAwB,CAAxB,EAA0B,EAA1B,EAA6BoD,GAAG,GAACvD,OAAjC,EAAyCuD,GAAzC,EAA6C,EAA7C,EAAgD,CAAhD,EAAkD,IAAlD,CAAf,CALF,CAOE;AACA;;AACAnF,EAAAA,GAAG,CAACK,IAAJ,CACE;AACCC,IAAAA,OAAO,EAAC,aADT;AAECyB,IAAAA,KAAK,EAALA;AAFD,GADF;AAOD",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
      "sourcesContent": [
        "import Pedido from '../models/Pedido'\r\nimport Producto from '../models/Producto'\r\nimport Item from '../models/Item'\r\nimport {getKilometros, getPrecioEnvioPorReglas, getPorcentajeEnvioPorReglas}  from '../service/Service'\r\n//import jwt from 'jsonwebtoken'\r\n\r\n\r\n// todos los pedidos sin ningun filtro.\r\nexport async function all(req, res) \r\n{\r\n  try {\r\n\r\n    let pedidos =   await Pedido.findAll({ attributes: ['ped_id', 'ped_userid', 'ped_deliveryid'] })\r\n  \r\n    if(pedidos)\r\n    {\r\n      res.json({\r\n          message:'todos los pedidos registrados',\r\n          pedidos\r\n      })\r\n\r\n    }\r\n\r\n \r\n} catch (error) {\r\n  res.status(500).json({\r\n      message:'no se pudo obtener los pedidos',\r\n      data:error\r\n  });\r\n}\r\n}\r\n\r\n\r\n//obtengo los pedidos de usuario solicita pedido\r\nexport async function getPedidosUsuario(req, res)\r\n{\r\n    \r\n    const {idUsuario} = req.params;\r\n \r\n    try {\r\n\r\n        let pedidos = await Pedido.findAll({\r\n            where: {\r\n              ped_userid:idUsuario\r\n            },\r\n            attributes: [\r\n              'ped_id',\r\n              'ped_userid',\r\n              'ped_deliveryid',\r\n              'ped_total',\r\n              'ped_envio',\r\n              'ped_direccioninicio',\r\n              'ped_direcciondestino',\r\n              'ped_latitudinicio',\r\n              'ped_longitudinicio',\r\n              'ped_latituddestino',\r\n              'ped_longituddestino',\r\n              'ped_longituddestino',  \r\n              'ped_estado'\r\n           ]\r\n        });\r\n\r\n        if(pedidos){\r\n    \r\n            res.json({\r\n              message:'pedidos del usuario',\r\n              pedidos});\r\n\r\n        }else{\r\n            res.json({\r\n                message:'No se encontro registros de pedidos.'      \r\n            })\r\n        }\r\n        \r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message:'algo no funciono 1',\r\n            data:idusuario\r\n        });\r\n    }\r\n}\r\n\r\n\r\n//obtengo los pedidos de usuario  delivery\r\nexport async function getPedidosDelivery(req, res)\r\n{\r\n    \r\n    const {idDelivery} = req.params;\r\n   \r\n    try {\r\n\r\n        let pedidos = await Pedido.findAll({\r\n            where: {\r\n              ped_deliveryid:idDelivery\r\n            },\r\n            attributes: [\r\n              'ped_id',\r\n              'ped_userid',\r\n              'ped_deliveryid',\r\n              'ped_total',\r\n              'ped_envio',\r\n              'ped_direccioninicio',\r\n              'ped_direcciondestino',\r\n              'ped_latitudinicio',\r\n              'ped_longitudinicio',\r\n              'ped_latituddestino',\r\n              'ped_longituddestino',\r\n              'ped_longituddestino',  \r\n              'ped_estado'\r\n           ]\r\n        });\r\n\r\n        if(pedidos){\r\n    \r\n          res.json({\r\n            message:'pedidos del delivery',\r\n            pedidos});\r\n               \r\n\r\n        }else{\r\n            res.json({\r\n                message:'No se encontro registros de pedidos.'      \r\n            })\r\n        }\r\n        \r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message:'algo no funciono',\r\n            data:idDelivery\r\n        });\r\n    }\r\n}\r\n\r\n\r\n//registro el pedido pendiente\r\nexport async function registrarPedido(req, res)\r\n{  \r\nvar {iduser,diri,dirf,lati,longi,latf,longf,items} = req.body;\r\nvar pesoxkm=1\r\n  try{\r\n\r\n            var iddelivery=0;\r\n            var total=0;\r\n            var envio=0;\r\n            //estadopedido=1 pendiente       \r\n            var estadopedido=1;\r\n            //creo el pedido con total=0\r\n            var idpedido=0;\r\n\r\n            let nuevoPedido = await Pedido.create({\r\n            ped_userid: iduser,\r\n            ped_deliveryid: iddelivery,\r\n            ped_total: total,\r\n            ped_envio: envio,\r\n            ped_direccioninicio: diri,\r\n            ped_direcciondestino: dirf,\r\n            ped_latitudinicio: lati,\r\n            ped_longitudinicio: longi,\r\n            ped_latituddestino: latf,\r\n            ped_longituddestino: longf,\r\n            ped_estado:estadopedido\r\n          }\r\n            ,\r\n          {\r\n          fields:[\r\n            'ped_userid',\r\n            'ped_deliveryid',\r\n            'ped_total',\r\n            'ped_envio',\r\n            'ped_direccioninicio',\r\n            'ped_direcciondestino',\r\n            'ped_latitudinicio',\r\n            'ped_longitudinicio',\r\n            'ped_latituddestino',\r\n            'ped_longituddestino',\r\n            'ped_longituddestino',  \r\n            'ped_estado'\r\n            ]\r\n          }\r\n        )\r\n \r\n\r\n            if(nuevoPedido)\r\n            {\r\n            //obtengo el id pedido\r\n            idpedido =nuevoPedido.ped_id;\r\n            var i = 0;\r\n            const numItems= items.length;\r\n            //saco todos los items\r\n            while (i < numItems)\r\n            {\r\n              //saco el string del json\r\n              var stringJson=items[i];\r\n              //valores id y cantidad\r\n              const idProducto= stringJson.id\r\n              const cantidad  = stringJson.cantidad\r\n              //busco los datos del producto\r\n              const productFound = await Producto.findOne({\r\n                    where: {\r\n                            prod_id:idProducto\r\n                            },\r\n                    attributes: ['prod_value']\r\n                          });\r\n              //encontre el producto y creo el item\r\n              if(productFound)\r\n              {\r\n                let nuevoitem = await Item.create({\r\n                              item_pedidoid: idpedido,\r\n                              item_productoid: idProducto,\r\n                              item_cantidad: cantidad\r\n                              } ,{\r\n                            fields:[ \r\n                            'item_pedidoid',\r\n                            'item_productoid',\r\n                            'item_cantidad',\r\n                                  ]\r\n                                }\r\n                            );\r\n                if(nuevoitem)   \r\n               {  \r\n               var value=productFound.prod_value;\r\n               total+=value*cantidad;        \r\n               }             \r\n             }\r\n   //incremento \r\n    i = i+1;\r\n  }\r\n\r\n   envio=pesoxkm*parseInt(getKilometros(latf,longf,lati,longi))\r\n  //hago el update del total del pedido  \r\n  let pedidoUpdate= await Pedido.update(\r\n    { ped_total: total,\r\n      ped_envio: envio\r\n     },\r\n    { where: { ped_id: idpedido } }\r\n     )\r\n\r\n  if(pedidoUpdate)\r\n     {      \r\n     //devuelvo el id pedido y el total\r\n    res.json(\r\n    {\r\n    message:'pedido pendiente',\r\n     idpedido,total,envio\r\n     })\r\n    \r\n    }\r\n    else\r\n    {\r\n       //devuelvo el id pedido y el total\r\n       res.status(500).json({\r\n        message:'no se pudo hacer el update',\r\n        data:{error}\r\n      });\r\n        \r\n    }\r\n \r\n\r\n  }\r\n\r\n\r\n} catch (error) {\r\n  res.status(500).json({\r\n      message:'no se pudo registrar el pedido',\r\n      data:error\r\n  });\r\n}\r\n  \r\n}\r\n\r\n//obtengo los pedidos pendientes cercanos.\r\nexport async function getPedidosPendientesParaDelivery(req, res)\r\n{\r\n  var {lati,longi} = req.body;\r\n  var estadopedido=1\r\n  var maxkms=20\r\n\r\n  try {\r\n   /*hay que usar lati y longi para buscar los pedidos cercanos */\r\n    let pedidos = await Pedido.findAll({\r\n        where: {\r\n          ped_estado: estadopedido\r\n        },\r\n        attributes: [\r\n          'ped_id',\r\n          'ped_userid',\r\n          'ped_deliveryid',\r\n          'ped_total',\r\n          'ped_envio',\r\n          'ped_direccioninicio',\r\n          'ped_direcciondestino',\r\n          'ped_latitudinicio',\r\n          'ped_longitudinicio',\r\n          'ped_latituddestino',\r\n          'ped_longituddestino',\r\n          'ped_longituddestino',  \r\n          'ped_estado'\r\n       ]\r\n    });\r\n\r\n    if(pedidos){\r\n      //filtro los cercanos \r\n      var pedidoscercanos=[] ;\r\n      pedidos.forEach( \r\n        (ped) => { \r\n         var lat =ped.ped_latitudinicio;\r\n         var long=ped.ped_longitudinicio;\r\n        if(parseInt(getKilometros(lat,long,lati,longi))<=maxkms)\r\n         {\r\n          pedidoscercanos.push(ped);\r\n         }\r\n\r\n            }\r\n          );\r\n      \r\n\r\n          res.json(\r\n          {\r\n            message:'pedidos pendientes son:',\r\n            pedidoscercanos\r\n          })\r\n\r\n\r\n\r\n    }else{\r\n        res.status(500).json({\r\n            message:'No se encontro registros de pedidos.'      \r\n        })\r\n    }\r\n    \r\n} catch (error) {\r\n    res.status(500).json({\r\n        message:'algo no funciono',\r\n        data:{error}\r\n    });\r\n}\r\n}\r\n//asignacion de pedido a delivery\r\nexport async function asignarPedidoADelivery(req, res)\r\n{\r\nvar {idpedido,iddelivery} = req.body;  \r\nvar estadoPendiente=1;  \r\nvar estadoAsignado=2;\r\ntry\r\n{ \r\n  //me fijo si el pedido no fue asignado\r\n  var pedidosSinAsignar = await Pedido.count({\r\n  where: {\r\n    ped_id: idpedido, \r\n    ped_estado: estadoPendiente\r\n  }\r\n});\r\n\r\n\r\nif(pedidosSinAsignar>0)\r\n   {\r\n   //hago el update del pedido  \r\n    let pedidoUpdate=await Pedido.update(\r\n    {\r\n    ped_deliveryid: iddelivery,\r\n    ped_estado:estadoAsignado\r\n   },\r\n  { \r\n    where: { ped_id: idpedido } }\r\n   )\r\n\r\n\r\n  if(pedidoUpdate)\r\n  {\r\n   //devuelvo el id pedido y el delivery\r\n   res.json(\r\n    {\r\n    message:'pedido asignado',\r\n    idpedido,iddelivery\r\n     })\r\n  }\r\n  else\r\n  {\r\n    res.status(500).json({\r\n        message:'No se pudo asignar un pedido.'      \r\n    })\r\n   }\r\n}\r\nelse \r\n{\r\n    res.status(500).json({\r\n    message:'El pedido ya fue asignado.'      \r\n})\r\n\r\n}\r\n\r\n}\r\n\r\ncatch (error) {\r\n  res.status(500).json({\r\n      message:'algo no funciono',\r\n      data:{error}\r\n  });\r\n}\r\n}\r\n/* obtengo el precio del envio antes de dar el ok o no al registro \r\npedido*/ \r\nexport  function getPrecioEnvio(req, res)\r\n{\r\n  var {lati,longi,latf,longf} = req.body;\r\n  var pesoxkm=10;\r\n  var kms=getKilometros(latf,longf,lati,longi);\r\n\r\n  var  envio=    getPrecioEnvioPorReglas(1,19,kms*pesoxkm,kms,10,1,4343);\r\n \r\n  //const re=  getPorcentajeEnvioPorReglas(0, 21, 500 ,11,1, 333);\r\n  //console.log(re);\r\n  res.json(\r\n    {\r\n     message:'valor envio',\r\n     envio\r\n  }\r\n  );\r\n\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1570556188413
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\\\\pedido.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\pedido.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\pedido.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\pedido.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
        "sourceFileName": "pedido.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/** Defino modelo de los datos */\nvar Pedido = _database.sequelize.define('pedido', {\n  ped_id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  ped_userid: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  ped_deliveryid: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  ped_total: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  ped_envio: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  ped_direccioninicio: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  ped_direcciondestino: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  ped_latitudinicio: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  ped_longitudinicio: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  ped_latituddestino: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  ped_longituddestino: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  ped_descripcion: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  ped_estado: {\n    type: _sequelize[\"default\"].INTEGER\n  }\n});\n\nvar _default = Pedido;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlZGlkby5qcyJdLCJuYW1lcyI6WyJQZWRpZG8iLCJzZXF1ZWxpemUiLCJkZWZpbmUiLCJwZWRfaWQiLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJwZWRfdXNlcmlkIiwicGVkX2RlbGl2ZXJ5aWQiLCJwZWRfdG90YWwiLCJwZWRfZW52aW8iLCJwZWRfZGlyZWNjaW9uaW5pY2lvIiwiVEVYVCIsInBlZF9kaXJlY2Npb25kZXN0aW5vIiwicGVkX2xhdGl0dWRpbmljaW8iLCJET1VCTEUiLCJwZWRfbG9uZ2l0dWRpbmljaW8iLCJwZWRfbGF0aXR1ZGRlc3Rpbm8iLCJwZWRfbG9uZ2l0dWRkZXN0aW5vIiwicGVkX2Rlc2NyaXBjaW9uIiwicGVkX2VzdGFkbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUE7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFVQyxNQUFWLENBQWlCLFFBQWpCLEVBQTBCO0FBRXJDQyxFQUFBQSxNQUFNLEVBQUM7QUFDSEMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEYjtBQUVIQyxJQUFBQSxVQUFVLEVBQUU7QUFGVCxHQUY4QjtBQU9yQ0MsRUFBQUEsVUFBVSxFQUFDO0FBQ1BKLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRFQsR0FQMEI7QUFVckNHLEVBQUFBLGNBQWMsRUFBQztBQUNYTCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURMLEdBVnNCO0FBYXJDSSxFQUFBQSxTQUFTLEVBQUM7QUFDTk4sSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEVixHQWIyQjtBQWdCckNLLEVBQUFBLFNBQVMsRUFBQztBQUNOUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURWLEdBaEIyQjtBQW1CckNNLEVBQUFBLG1CQUFtQixFQUFDO0FBQ2pCUixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVUTtBQURDLEdBbkJpQjtBQXNCckNDLEVBQUFBLG9CQUFvQixFQUFDO0FBQ2JWLElBQUFBLElBQUksRUFBRUMsc0JBQVVRO0FBREgsR0F0QmdCO0FBeUJyQ0UsRUFBQUEsaUJBQWlCLEVBQUM7QUFDZFgsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVVc7QUFERixHQXpCbUI7QUE0QnJDQyxFQUFBQSxrQkFBa0IsRUFBQztBQUNmYixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVVztBQURELEdBNUJrQjtBQStCckNFLEVBQUFBLGtCQUFrQixFQUFDO0FBQ2ZkLElBQUFBLElBQUksRUFBRUMsc0JBQVVXO0FBREQsR0EvQmtCO0FBa0NyQ0csRUFBQUEsbUJBQW1CLEVBQUM7QUFDaEJmLElBQUFBLElBQUksRUFBRUMsc0JBQVVXO0FBREEsR0FsQ2lCO0FBcUNyQ0ksRUFBQUEsZUFBZSxFQUFDO0FBQ1poQixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVUTtBQURKLEdBckNxQjtBQXdDckNRLEVBQUFBLFVBQVUsRUFBRTtBQUNSakIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEUjtBQXhDeUIsQ0FBMUIsQ0FBZjs7ZUE2Q2VOLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxEaWVnb1xcRG9jdW1lbnRzXFxHaXRIdWJcXFNlcnZcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xyXG5pbXBvcnQge3NlcXVlbGl6ZX0gZnJvbSAnLi4vZGF0YWJhc2UvZGF0YWJhc2UnO1xyXG5cclxuLyoqIERlZmlubyBtb2RlbG8gZGUgbG9zIGRhdG9zICovXHJcblxyXG5jb25zdCBQZWRpZG8gPSBzZXF1ZWxpemUuZGVmaW5lKCdwZWRpZG8nLHtcclxuXHJcbiAgICBwZWRfaWQ6e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWVcclxuICAgIH0sXHJcblxyXG4gICAgcGVkX3VzZXJpZDp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH0sXHJcbiAgICBwZWRfZGVsaXZlcnlpZDp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH0sXHJcbiAgICBwZWRfdG90YWw6e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICB9LFxyXG4gICAgcGVkX2VudmlvOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuICAgIHBlZF9kaXJlY2Npb25pbmljaW86e1xyXG4gICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBwZWRfZGlyZWNjaW9uZGVzdGlubzp7XHJcbiAgICAgICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LCAgIFxyXG4gICAgcGVkX2xhdGl0dWRpbmljaW86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5ET1VCTEVcclxuICAgIH0sXHJcbiAgICBwZWRfbG9uZ2l0dWRpbmljaW86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5ET1VCTEVcclxuICAgIH0sXHJcbiAgICBwZWRfbGF0aXR1ZGRlc3Rpbm86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5ET1VCTEVcclxuICAgIH0sXHJcbiAgICBwZWRfbG9uZ2l0dWRkZXN0aW5vOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuRE9VQkxFXHJcbiAgICB9LFxyXG4gICAgcGVkX2Rlc2NyaXBjaW9uOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIHBlZF9lc3RhZG8gOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfVxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBlZGlkbzsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "pedido.js"
      ],
      "names": [
        "Pedido",
        "sequelize",
        "define",
        "ped_id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "ped_userid",
        "ped_deliveryid",
        "ped_total",
        "ped_envio",
        "ped_direccioninicio",
        "TEXT",
        "ped_direcciondestino",
        "ped_latitudinicio",
        "DOUBLE",
        "ped_longitudinicio",
        "ped_latituddestino",
        "ped_longituddestino",
        "ped_descripcion",
        "ped_estado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;AAEA,IAAMA,MAAM,GAAGC,oBAAUC,MAAV,CAAiB,QAAjB,EAA0B;AAErCC,EAAAA,MAAM,EAAC;AACHC,IAAAA,IAAI,EAAEC,sBAAUC,OADb;AAEHC,IAAAA,UAAU,EAAE;AAFT,GAF8B;AAOrCC,EAAAA,UAAU,EAAC;AACPJ,IAAAA,IAAI,EAAEC,sBAAUC;AADT,GAP0B;AAUrCG,EAAAA,cAAc,EAAC;AACXL,IAAAA,IAAI,EAAEC,sBAAUC;AADL,GAVsB;AAarCI,EAAAA,SAAS,EAAC;AACNN,IAAAA,IAAI,EAAEC,sBAAUC;AADV,GAb2B;AAgBrCK,EAAAA,SAAS,EAAC;AACNP,IAAAA,IAAI,EAAEC,sBAAUC;AADV,GAhB2B;AAmBrCM,EAAAA,mBAAmB,EAAC;AACjBR,IAAAA,IAAI,EAAEC,sBAAUQ;AADC,GAnBiB;AAsBrCC,EAAAA,oBAAoB,EAAC;AACbV,IAAAA,IAAI,EAAEC,sBAAUQ;AADH,GAtBgB;AAyBrCE,EAAAA,iBAAiB,EAAC;AACdX,IAAAA,IAAI,EAAEC,sBAAUW;AADF,GAzBmB;AA4BrCC,EAAAA,kBAAkB,EAAC;AACfb,IAAAA,IAAI,EAAEC,sBAAUW;AADD,GA5BkB;AA+BrCE,EAAAA,kBAAkB,EAAC;AACfd,IAAAA,IAAI,EAAEC,sBAAUW;AADD,GA/BkB;AAkCrCG,EAAAA,mBAAmB,EAAC;AAChBf,IAAAA,IAAI,EAAEC,sBAAUW;AADA,GAlCiB;AAqCrCI,EAAAA,eAAe,EAAC;AACZhB,IAAAA,IAAI,EAAEC,sBAAUQ;AADJ,GArCqB;AAwCrCQ,EAAAA,UAAU,EAAE;AACRjB,IAAAA,IAAI,EAAEC,sBAAUC;AADR;AAxCyB,CAA1B,CAAf;;eA6CeN,M",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../database/database';\r\n\r\n/** Defino modelo de los datos */\r\n\r\nconst Pedido = sequelize.define('pedido',{\r\n\r\n    ped_id:{\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n\r\n    ped_userid:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    ped_deliveryid:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    ped_total:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    ped_envio:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    ped_direccioninicio:{\r\n       type: Sequelize.TEXT\r\n    },\r\n    ped_direcciondestino:{\r\n            type: Sequelize.TEXT\r\n    },   \r\n    ped_latitudinicio:{\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    ped_longitudinicio:{\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    ped_latituddestino:{\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    ped_longituddestino:{\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    ped_descripcion:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    ped_estado :{\r\n        type: Sequelize.INTEGER\r\n    }\r\n});\r\n\r\nexport default Pedido;"
      ]
    },
    "sourceType": "script",
    "mtime": 1569373949919
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\\\\Item.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Item.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Item.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Item.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
        "sourceFileName": "Item.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* Defino modelo de los datos */\nvar Item = _database.sequelize.define('item', {\n  item_id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  item_pedidoid: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  item_productoid: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  item_cantidad: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  item_descripcion: {\n    type: _sequelize[\"default\"].TEXT\n  }\n});\n\nvar _default = Item;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkl0ZW0uanMiXSwibmFtZXMiOlsiSXRlbSIsInNlcXVlbGl6ZSIsImRlZmluZSIsIml0ZW1faWQiLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJpdGVtX3BlZGlkb2lkIiwiaXRlbV9wcm9kdWN0b2lkIiwiaXRlbV9jYW50aWRhZCIsIml0ZW1fZGVzY3JpcGNpb24iLCJURVhUIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFHQTtBQUNBLElBQU1BLElBQUksR0FBRUMsb0JBQVVDLE1BQVYsQ0FBaUIsTUFBakIsRUFBd0I7QUFFaENDLEVBQUFBLE9BQU8sRUFBQztBQUNKQyxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQURaO0FBRUpDLElBQUFBLFVBQVUsRUFBRTtBQUZSLEdBRndCO0FBT2hDQyxFQUFBQSxhQUFhLEVBQUM7QUFDVkosSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFETixHQVBrQjtBQVloQ0csRUFBQUEsZUFBZSxFQUFDO0FBQ1pMLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBREosR0FaZ0I7QUFnQmhDSSxFQUFBQSxhQUFhLEVBQUM7QUFDVk4sSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFETixHQWhCa0I7QUFtQmhDSyxFQUFBQSxnQkFBZ0IsRUFBQztBQUNiUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVTztBQURIO0FBbkJlLENBQXhCLENBQVo7O2VBMEJlWixJIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGllZ29cXERvY3VtZW50c1xcR2l0SHViXFxTZXJ2XFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuaW1wb3J0IHtzZXF1ZWxpemV9IGZyb20gJy4uL2RhdGFiYXNlL2RhdGFiYXNlJztcclxuXHJcblxyXG4vKiBEZWZpbm8gbW9kZWxvIGRlIGxvcyBkYXRvcyAqL1xyXG5jb25zdCBJdGVtPSBzZXF1ZWxpemUuZGVmaW5lKCdpdGVtJyx7XHJcblxyXG4gICAgaXRlbV9pZDp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXHJcbiAgICAgICAgcHJpbWFyeUtleTogdHJ1ZVxyXG4gICAgfSxcclxuICAgXHJcbiAgICBpdGVtX3BlZGlkb2lkOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG5cclxuICAgIH0sXHJcblxyXG4gICAgaXRlbV9wcm9kdWN0b2lkOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG5cclxuICAgIH0sXHJcbiAgICBpdGVtX2NhbnRpZGFkOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuICAgIGl0ZW1fZGVzY3JpcGNpb246e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9XHJcblxyXG4gICAgXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgSXRlbTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Item.js"
      ],
      "names": [
        "Item",
        "sequelize",
        "define",
        "item_id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "item_pedidoid",
        "item_productoid",
        "item_cantidad",
        "item_descripcion",
        "TEXT"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAGA;AACA,IAAMA,IAAI,GAAEC,oBAAUC,MAAV,CAAiB,MAAjB,EAAwB;AAEhCC,EAAAA,OAAO,EAAC;AACJC,IAAAA,IAAI,EAAEC,sBAAUC,OADZ;AAEJC,IAAAA,UAAU,EAAE;AAFR,GAFwB;AAOhCC,EAAAA,aAAa,EAAC;AACVJ,IAAAA,IAAI,EAAEC,sBAAUC;AADN,GAPkB;AAYhCG,EAAAA,eAAe,EAAC;AACZL,IAAAA,IAAI,EAAEC,sBAAUC;AADJ,GAZgB;AAgBhCI,EAAAA,aAAa,EAAC;AACVN,IAAAA,IAAI,EAAEC,sBAAUC;AADN,GAhBkB;AAmBhCK,EAAAA,gBAAgB,EAAC;AACbP,IAAAA,IAAI,EAAEC,sBAAUO;AADH;AAnBe,CAAxB,CAAZ;;eA0BeZ,I",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../database/database';\r\n\r\n\r\n/* Defino modelo de los datos */\r\nconst Item= sequelize.define('item',{\r\n\r\n    item_id:{\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n   \r\n    item_pedidoid:{\r\n        type: Sequelize.INTEGER\r\n\r\n    },\r\n\r\n    item_productoid:{\r\n        type: Sequelize.INTEGER\r\n\r\n    },\r\n    item_cantidad:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    item_descripcion:{\r\n        type: Sequelize.TEXT\r\n    }\r\n\r\n    \r\n});\r\n\r\nexport default Item;"
      ]
    },
    "sourceType": "script",
    "mtime": 1569466735589
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\rutas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\rutas\\\\comercios.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\comercios.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\comercios.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\comercios.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
        "sourceFileName": "comercios.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _comercioController = require(\"../controllers/comercioController\");\n\nvar _userController = require(\"../controllers/userController\");\n\nvar router = (0, _express.Router)();\n/** Controladores */\n\n/** Rutas */\n\n/** Obtener todos los productos */\nrouter.get('/all', _userController.ensureToken, _userController.chequeoToken, _comercioController.getAll);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbWVyY2lvcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJlbnN1cmVUb2tlbiIsImNoZXF1ZW9Ub2tlbiIsImdldEFsbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQU1BOztBQUlBOztBQVJBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUVJOztBQVdKOztBQUNBO0FBQ0FBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLE1BQVgsRUFBbUJDLDJCQUFuQixFQUErQkMsNEJBQS9CLEVBQTRDQywwQkFBNUM7ZUFHZUosTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXERpZWdvXFxEb2N1bWVudHNcXEdpdEh1YlxcU2Vydlxcc3JjXFxydXRhcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Um91dGVyfSBmcm9tICdleHByZXNzJ1xyXG5cclxuY29uc3Qgcm91dGVyID0gUm91dGVyKClcclxuXHJcbiAgICAvKiogQ29udHJvbGFkb3JlcyAqL1xyXG5cclxuaW1wb3J0IHsgIFxyXG4gICAgZ2V0QWxsIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvY29tZXJjaW9Db250cm9sbGVyJztcclxuXHJcblxyXG5pbXBvcnQgeyBcclxuICAgICBlbnN1cmVUb2tlbixjaGVxdWVvVG9rZW5cclxuICAgIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvdXNlckNvbnRyb2xsZXInO1xyXG5cclxuXHJcbi8qKiBSdXRhcyAqL1xyXG4vKiogT2J0ZW5lciB0b2RvcyBsb3MgcHJvZHVjdG9zICovXHJcbnJvdXRlci5nZXQoJy9hbGwnLCBlbnN1cmVUb2tlbixjaGVxdWVvVG9rZW4sZ2V0QWxsICk7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "comercios.js"
      ],
      "names": [
        "router",
        "get",
        "ensureToken",
        "chequeoToken",
        "getAll"
      ],
      "mappings": ";;;;;;;AAAA;;AAMA;;AAIA;;AARA,IAAMA,MAAM,GAAG,sBAAf;AAEI;;AAWJ;;AACA;AACAA,MAAM,CAACC,GAAP,CAAW,MAAX,EAAmBC,2BAAnB,EAA+BC,4BAA/B,EAA4CC,0BAA5C;eAGeJ,M",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
      "sourcesContent": [
        "import {Router} from 'express'\r\n\r\nconst router = Router()\r\n\r\n    /** Controladores */\r\n\r\nimport {  \r\n    getAll } from '../controllers/comercioController';\r\n\r\n\r\nimport { \r\n     ensureToken,chequeoToken\r\n    } from '../controllers/userController';\r\n\r\n\r\n/** Rutas */\r\n/** Obtener todos los productos */\r\nrouter.get('/all', ensureToken,chequeoToken,getAll );\r\n\r\n\r\nexport default router"
      ]
    },
    "sourceType": "script",
    "mtime": 1569373949924
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\controllers\\\\comercioController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\comercioController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\comercioController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\comercioController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
        "sourceFileName": "comercioController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAll = getAll;\n\nvar _Comercio = _interopRequireDefault(require(\"../models/Comercio\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/** Obtener todos los comercios */\nfunction getAll(_x, _x2) {\n  return _getAll.apply(this, arguments);\n}\n\nfunction _getAll() {\n  _getAll = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var comercios;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _Comercio[\"default\"].findAll();\n\n          case 3:\n            comercios = _context.sent;\n\n            if (comercios) {\n              res.json({\n                message: 'todos los comercios registrados',\n                comercios: comercios\n              }); //res.json(['John', 'Betty', 'Hal']);\n            } else {\n              res.status(500).json({\n                message: 'No se encontro registros de comercios.'\n              });\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'algo salio mal obteniendo los comercios',\n              data: {\n                error: _context.t0\n              }\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _getAll.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbWVyY2lvQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRBbGwiLCJyZXEiLCJyZXMiLCJDb21lcmNpbyIsImZpbmRBbGwiLCJjb21lcmNpb3MiLCJqc29uIiwibWVzc2FnZSIsInN0YXR1cyIsImRhdGEiLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7OztBQUdBO1NBQ3NCQSxNOzs7Ozs7OzBCQUFmLGlCQUFzQkMsR0FBdEIsRUFBMEJDLEdBQTFCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFPdUJDLHFCQUFTQyxPQUFULEVBUHZCOztBQUFBO0FBT0tDLFlBQUFBLFNBUEw7O0FBU0MsZ0JBQUdBLFNBQUgsRUFBYTtBQUVWSCxjQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBUztBQUVKQyxnQkFBQUEsT0FBTyxFQUFDLGlDQUZKO0FBR0pGLGdCQUFBQSxTQUFTLEVBQVRBO0FBSEksZUFBVCxFQUZVLENBU1Q7QUFDSCxhQVZELE1BV0k7QUFDQUgsY0FBQUEsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkYsSUFBaEIsQ0FBcUI7QUFDakJDLGdCQUFBQSxPQUFPLEVBQUM7QUFEUyxlQUFyQjtBQUdIOztBQXhCRjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQTZCR0wsWUFBQUEsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkYsSUFBaEIsQ0FBcUI7QUFDakJDLGNBQUFBLE9BQU8sRUFBQyx5Q0FEUztBQUVqQkUsY0FBQUEsSUFBSSxFQUFDO0FBQUNDLGdCQUFBQSxLQUFLO0FBQU47QUFGWSxhQUFyQjs7QUE3Qkg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXERpZWdvXFxEb2N1bWVudHNcXEdpdEh1YlxcU2Vydlxcc3JjXFxjb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb21lcmNpbyBmcm9tICcuLi9tb2RlbHMvQ29tZXJjaW8nO1xyXG5cclxuXHJcbi8qKiBPYnRlbmVyIHRvZG9zIGxvcyBjb21lcmNpb3MgKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFsbChyZXEscmVzKXtcclxuXHJcbiAgICBcclxuICAgIHRyeSB7XHJcbiAgICAgICAgIFxyXG4gICAgICAgIFxyXG5cclxuICAgICAgICBsZXQgY29tZXJjaW9zID0gYXdhaXQgQ29tZXJjaW8uZmluZEFsbCgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmKGNvbWVyY2lvcyl7XHJcblxyXG4gICAgICAgICAgIHJlcy5qc29uKHtcclxuXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOid0b2RvcyBsb3MgY29tZXJjaW9zIHJlZ2lzdHJhZG9zJyxcclxuICAgICAgICAgICAgICAgIGNvbWVyY2lvc1xyXG5cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAvL3Jlcy5qc29uKFsnSm9obicsICdCZXR0eScsICdIYWwnXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6J05vIHNlIGVuY29udHJvIHJlZ2lzdHJvcyBkZSBjb21lcmNpb3MuJyAgICAgIFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgIFxyXG4gICAgICAgXHJcbiAgXHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgbWVzc2FnZTonYWxnbyBzYWxpbyBtYWwgb2J0ZW5pZW5kbyBsb3MgY29tZXJjaW9zJyxcclxuICAgICAgICAgICAgICBkYXRhOntlcnJvcn1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICB9IFxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "comercioController.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Comercio",
        "findAll",
        "comercios",
        "json",
        "message",
        "status",
        "data",
        "error"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;AAGA;SACsBA,M;;;;;;;0BAAf,iBAAsBC,GAAtB,EAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAOuBC,qBAASC,OAAT,EAPvB;;AAAA;AAOKC,YAAAA,SAPL;;AASC,gBAAGA,SAAH,EAAa;AAEVH,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAEJC,gBAAAA,OAAO,EAAC,iCAFJ;AAGJF,gBAAAA,SAAS,EAATA;AAHI,eAAT,EAFU,CAST;AACH,aAVD,MAWI;AACAH,cAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AAxBF;AAAA;;AAAA;AAAA;AAAA;AA6BGL,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,yCADS;AAEjBE,cAAAA,IAAI,EAAC;AAACC,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AA7BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
      "sourcesContent": [
        "import Comercio from '../models/Comercio';\r\n\r\n\r\n/** Obtener todos los comercios */\r\nexport async function getAll(req,res){\r\n\r\n    \r\n    try {\r\n         \r\n        \r\n\r\n        let comercios = await Comercio.findAll();\r\n        \r\n        if(comercios){\r\n\r\n           res.json({\r\n\r\n                message:'todos los comercios registrados',\r\n                comercios\r\n\r\n            });\r\n\r\n            //res.json(['John', 'Betty', 'Hal']);\r\n        }\r\n        else{\r\n            res.status(500).json({\r\n                message:'No se encontro registros de comercios.'      \r\n            })\r\n        }\r\n       \r\n       \r\n  \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'algo salio mal obteniendo los comercios',\r\n              data:{error}\r\n          });\r\n      } \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1570041118869
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\\\\Comercio.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Comercio.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Comercio.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Comercio.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
        "sourceFileName": "Comercio.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* Defino modelo de los datos */\nvar Comercio = _database.sequelize.define('comercio', {\n  com_id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  com_direccion: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  com_descripcion: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  com_latitud: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  com_longitud: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  com_estado: {\n    type: _sequelize[\"default\"].INTEGER\n  }\n});\n\nvar _default = Comercio;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbWVyY2lvLmpzIl0sIm5hbWVzIjpbIkNvbWVyY2lvIiwic2VxdWVsaXplIiwiZGVmaW5lIiwiY29tX2lkIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJwcmltYXJ5S2V5IiwiY29tX2RpcmVjY2lvbiIsIlRFWFQiLCJjb21fZGVzY3JpcGNpb24iLCJjb21fbGF0aXR1ZCIsIkRPVUJMRSIsImNvbV9sb25naXR1ZCIsImNvbV9lc3RhZG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBO0FBQ0EsSUFBTUEsUUFBUSxHQUFFQyxvQkFBVUMsTUFBVixDQUFpQixVQUFqQixFQUE0QjtBQUN4Q0MsRUFBQUEsTUFBTSxFQUFDO0FBQ0hDLElBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BRGI7QUFFSEMsSUFBQUEsVUFBVSxFQUFFO0FBRlQsR0FEaUM7QUFLeENDLEVBQUFBLGFBQWEsRUFBQztBQUNWSixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQUROLEdBTDBCO0FBUXhDQyxFQUFBQSxlQUFlLEVBQUM7QUFDWk4sSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFESixHQVJ3QjtBQVl4Q0UsRUFBQUEsV0FBVyxFQUFFO0FBQ1RQLElBQUFBLElBQUksRUFBRUMsc0JBQVVPO0FBRFAsR0FaMkI7QUFnQnhDQyxFQUFBQSxZQUFZLEVBQUM7QUFDVFQsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVU87QUFEUCxHQWhCMkI7QUFvQnhDRSxFQUFBQSxVQUFVLEVBQUM7QUFDUFYsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEVDtBQXBCNkIsQ0FBNUIsQ0FBaEI7O2VBeUJlTixRIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGllZ29cXERvY3VtZW50c1xcR2l0SHViXFxTZXJ2XFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuaW1wb3J0IHtzZXF1ZWxpemV9IGZyb20gJy4uL2RhdGFiYXNlL2RhdGFiYXNlJztcclxuXHJcbi8qIERlZmlubyBtb2RlbG8gZGUgbG9zIGRhdG9zICovXHJcbmNvbnN0IENvbWVyY2lvPSBzZXF1ZWxpemUuZGVmaW5lKCdjb21lcmNpbycse1xyXG4gICAgY29tX2lkOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXHJcbiAgICB9LFxyXG4gICAgY29tX2RpcmVjY2lvbjp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBjb21fZGVzY3JpcGNpb246e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgXHJcbiAgICBjb21fbGF0aXR1ZDoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5ET1VCTEVcclxuICAgIH0sXHJcbiAgICBcclxuICAgIGNvbV9sb25naXR1ZDp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLkRPVUJMRVxyXG4gICAgfSxcclxuICAgIFxyXG4gICAgY29tX2VzdGFkbzp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH1cclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb21lcmNpbzsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Comercio.js"
      ],
      "names": [
        "Comercio",
        "sequelize",
        "define",
        "com_id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "com_direccion",
        "TEXT",
        "com_descripcion",
        "com_latitud",
        "DOUBLE",
        "com_longitud",
        "com_estado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;AACA,IAAMA,QAAQ,GAAEC,oBAAUC,MAAV,CAAiB,UAAjB,EAA4B;AACxCC,EAAAA,MAAM,EAAC;AACHC,IAAAA,IAAI,EAAEC,sBAAUC,OADb;AAEHC,IAAAA,UAAU,EAAE;AAFT,GADiC;AAKxCC,EAAAA,aAAa,EAAC;AACVJ,IAAAA,IAAI,EAAEC,sBAAUI;AADN,GAL0B;AAQxCC,EAAAA,eAAe,EAAC;AACZN,IAAAA,IAAI,EAAEC,sBAAUI;AADJ,GARwB;AAYxCE,EAAAA,WAAW,EAAE;AACTP,IAAAA,IAAI,EAAEC,sBAAUO;AADP,GAZ2B;AAgBxCC,EAAAA,YAAY,EAAC;AACTT,IAAAA,IAAI,EAAEC,sBAAUO;AADP,GAhB2B;AAoBxCE,EAAAA,UAAU,EAAC;AACPV,IAAAA,IAAI,EAAEC,sBAAUC;AADT;AApB6B,CAA5B,CAAhB;;eAyBeN,Q",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../database/database';\r\n\r\n/* Defino modelo de los datos */\r\nconst Comercio= sequelize.define('comercio',{\r\n    com_id:{\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n    com_direccion:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    com_descripcion:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    \r\n    com_latitud: {\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    \r\n    com_longitud:{\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    \r\n    com_estado:{\r\n        type: Sequelize.INTEGER\r\n    }\r\n});\r\n\r\nexport default Comercio;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570041118928
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\service\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\service\\\\service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\service",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\service\\service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\service\\service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\service\\service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\service",
        "sourceFileName": "service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getKilometros = getKilometros;\n\n//devuelve los kms entre dos posiciones\nfunction getKilometros(lat1, lon1, lat2, lon2) {\n  //local\n  function rad(x) {\n    return x * Math.PI / 180;\n  } //radio de la tierra en km\n\n\n  var R = 6378.137;\n  var dLat = rad(lat2 - lat1);\n  var dLong = rad(lon2 - lon1);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(rad(lat1)) * Math.cos(rad(lat2)) * Math.sin(dLong / 2) * Math.sin(dLong / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c; //retorna tres decimales\n\n  return d.toFixed(3);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2UuanMiXSwibmFtZXMiOlsiZ2V0S2lsb21ldHJvcyIsImxhdDEiLCJsb24xIiwibGF0MiIsImxvbjIiLCJyYWQiLCJ4IiwiTWF0aCIsIlBJIiwiUiIsImRMYXQiLCJkTG9uZyIsImEiLCJzaW4iLCJjb3MiLCJjIiwiYXRhbjIiLCJzcXJ0IiwiZCIsInRvRml4ZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNPLFNBQVNBLGFBQVQsQ0FBd0JDLElBQXhCLEVBQStCQyxJQUEvQixFQUFxQ0MsSUFBckMsRUFBMkNDLElBQTNDLEVBQ1A7QUFDQTtBQUNBLFdBQVNDLEdBQVQsQ0FBZUMsQ0FBZixFQUFrQjtBQUFDLFdBQU9BLENBQUMsR0FBQ0MsSUFBSSxDQUFDQyxFQUFQLEdBQVUsR0FBakI7QUFBc0IsR0FGekMsQ0FHQzs7O0FBQ0QsTUFBSUMsQ0FBQyxHQUFHLFFBQVI7QUFDQSxNQUFJQyxJQUFJLEdBQUdMLEdBQUcsQ0FBRUYsSUFBSSxHQUFHRixJQUFULENBQWQ7QUFDQSxNQUFJVSxLQUFLLEdBQUdOLEdBQUcsQ0FBRUQsSUFBSSxHQUFHRixJQUFULENBQWY7QUFFQSxNQUFJVSxDQUFDLEdBQUdMLElBQUksQ0FBQ00sR0FBTCxDQUFTSCxJQUFJLEdBQUMsQ0FBZCxJQUFtQkgsSUFBSSxDQUFDTSxHQUFMLENBQVNILElBQUksR0FBQyxDQUFkLENBQW5CLEdBQXNDSCxJQUFJLENBQUNPLEdBQUwsQ0FBU1QsR0FBRyxDQUFDSixJQUFELENBQVosSUFBc0JNLElBQUksQ0FBQ08sR0FBTCxDQUFTVCxHQUFHLENBQUNGLElBQUQsQ0FBWixDQUF0QixHQUE0Q0ksSUFBSSxDQUFDTSxHQUFMLENBQVNGLEtBQUssR0FBQyxDQUFmLENBQTVDLEdBQWdFSixJQUFJLENBQUNNLEdBQUwsQ0FBU0YsS0FBSyxHQUFDLENBQWYsQ0FBOUc7QUFDQSxNQUFJSSxDQUFDLEdBQUcsSUFBSVIsSUFBSSxDQUFDUyxLQUFMLENBQVdULElBQUksQ0FBQ1UsSUFBTCxDQUFVTCxDQUFWLENBQVgsRUFBeUJMLElBQUksQ0FBQ1UsSUFBTCxDQUFVLElBQUVMLENBQVosQ0FBekIsQ0FBWjtBQUNBLE1BQUlNLENBQUMsR0FBR1QsQ0FBQyxHQUFHTSxDQUFaLENBVkEsQ0FZQTs7QUFDQSxTQUFPRyxDQUFDLENBQUNDLE9BQUYsQ0FBVSxDQUFWLENBQVA7QUFFQyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXERpZWdvXFxEb2N1bWVudHNcXEdpdEh1YlxcU2Vydlxcc3JjXFxzZXJ2aWNlIiwic291cmNlc0NvbnRlbnQiOlsiLy9kZXZ1ZWx2ZSBsb3Mga21zIGVudHJlIGRvcyBwb3NpY2lvbmVzXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRLaWxvbWV0cm9zIChsYXQxICwgbG9uMSwgbGF0MiwgbG9uMilcclxue1xyXG4vL2xvY2FsXHJcbmZ1bmN0aW9uIHJhZCAgKHgpIHtyZXR1cm4geCpNYXRoLlBJLzE4MDt9XHJcbiAvL3JhZGlvIGRlIGxhIHRpZXJyYSBlbiBrbVxyXG52YXIgUiA9IDYzNzguMTM3O1xyXG52YXIgZExhdCA9IHJhZCggbGF0MiAtIGxhdDEgKTtcclxudmFyIGRMb25nID0gcmFkKCBsb24yIC0gbG9uMSApO1xyXG5cclxudmFyIGEgPSBNYXRoLnNpbihkTGF0LzIpICogTWF0aC5zaW4oZExhdC8yKSArIE1hdGguY29zKHJhZChsYXQxKSkgKiBNYXRoLmNvcyhyYWQobGF0MikpICogTWF0aC5zaW4oZExvbmcvMikgKiBNYXRoLnNpbihkTG9uZy8yKTtcclxudmFyIGMgPSAyICogTWF0aC5hdGFuMihNYXRoLnNxcnQoYSksIE1hdGguc3FydCgxLWEpKTtcclxudmFyIGQgPSBSICogYztcclxuXHJcbi8vcmV0b3JuYSB0cmVzIGRlY2ltYWxlc1xyXG5yZXR1cm4gZC50b0ZpeGVkKDMpO1xyXG5cclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "service.js"
      ],
      "names": [
        "getKilometros",
        "lat1",
        "lon1",
        "lat2",
        "lon2",
        "rad",
        "x",
        "Math",
        "PI",
        "R",
        "dLat",
        "dLong",
        "a",
        "sin",
        "cos",
        "c",
        "atan2",
        "sqrt",
        "d",
        "toFixed"
      ],
      "mappings": ";;;;;;;AAAA;AACO,SAASA,aAAT,CAAwBC,IAAxB,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,IAA3C,EACP;AACA;AACA,WAASC,GAAT,CAAeC,CAAf,EAAkB;AAAC,WAAOA,CAAC,GAACC,IAAI,CAACC,EAAP,GAAU,GAAjB;AAAsB,GAFzC,CAGC;;;AACD,MAAIC,CAAC,GAAG,QAAR;AACA,MAAIC,IAAI,GAAGL,GAAG,CAAEF,IAAI,GAAGF,IAAT,CAAd;AACA,MAAIU,KAAK,GAAGN,GAAG,CAAED,IAAI,GAAGF,IAAT,CAAf;AAEA,MAAIU,CAAC,GAAGL,IAAI,CAACM,GAAL,CAASH,IAAI,GAAC,CAAd,IAAmBH,IAAI,CAACM,GAAL,CAASH,IAAI,GAAC,CAAd,CAAnB,GAAsCH,IAAI,CAACO,GAAL,CAAST,GAAG,CAACJ,IAAD,CAAZ,IAAsBM,IAAI,CAACO,GAAL,CAAST,GAAG,CAACF,IAAD,CAAZ,CAAtB,GAA4CI,IAAI,CAACM,GAAL,CAASF,KAAK,GAAC,CAAf,CAA5C,GAAgEJ,IAAI,CAACM,GAAL,CAASF,KAAK,GAAC,CAAf,CAA9G;AACA,MAAII,CAAC,GAAG,IAAIR,IAAI,CAACS,KAAL,CAAWT,IAAI,CAACU,IAAL,CAAUL,CAAV,CAAX,EAAyBL,IAAI,CAACU,IAAL,CAAU,IAAEL,CAAZ,CAAzB,CAAZ;AACA,MAAIM,CAAC,GAAGT,CAAC,GAAGM,CAAZ,CAVA,CAYA;;AACA,SAAOG,CAAC,CAACC,OAAF,CAAU,CAAV,CAAP;AAEC",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\service",
      "sourcesContent": [
        "//devuelve los kms entre dos posiciones\r\nexport function getKilometros (lat1 , lon1, lat2, lon2)\r\n{\r\n//local\r\nfunction rad  (x) {return x*Math.PI/180;}\r\n //radio de la tierra en km\r\nvar R = 6378.137;\r\nvar dLat = rad( lat2 - lat1 );\r\nvar dLong = rad( lon2 - lon1 );\r\n\r\nvar a = Math.sin(dLat/2) * Math.sin(dLat/2) + Math.cos(rad(lat1)) * Math.cos(rad(lat2)) * Math.sin(dLong/2) * Math.sin(dLong/2);\r\nvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\nvar d = R * c;\r\n\r\n//retorna tres decimales\r\nreturn d.toFixed(3);\r\n\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1569373949938
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\\\\Pedido.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Pedido.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Pedido.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Pedido.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
        "sourceFileName": "Pedido.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/** Defino modelo de los datos */\nvar Pedido = _database.sequelize.define('pedido', {\n  ped_id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  ped_userid: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  ped_deliveryid: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  ped_total: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  ped_envio: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  ped_direccioninicio: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  ped_direcciondestino: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  ped_latitudinicio: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  ped_longitudinicio: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  ped_latituddestino: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  ped_longituddestino: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  ped_descripcion: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  ped_estado: {\n    type: _sequelize[\"default\"].INTEGER\n  }\n});\n\nvar _default = Pedido;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBlZGlkby5qcyJdLCJuYW1lcyI6WyJQZWRpZG8iLCJzZXF1ZWxpemUiLCJkZWZpbmUiLCJwZWRfaWQiLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJwZWRfdXNlcmlkIiwicGVkX2RlbGl2ZXJ5aWQiLCJwZWRfdG90YWwiLCJwZWRfZW52aW8iLCJwZWRfZGlyZWNjaW9uaW5pY2lvIiwiVEVYVCIsInBlZF9kaXJlY2Npb25kZXN0aW5vIiwicGVkX2xhdGl0dWRpbmljaW8iLCJET1VCTEUiLCJwZWRfbG9uZ2l0dWRpbmljaW8iLCJwZWRfbGF0aXR1ZGRlc3Rpbm8iLCJwZWRfbG9uZ2l0dWRkZXN0aW5vIiwicGVkX2Rlc2NyaXBjaW9uIiwicGVkX2VzdGFkbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUE7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFVQyxNQUFWLENBQWlCLFFBQWpCLEVBQTBCO0FBRXJDQyxFQUFBQSxNQUFNLEVBQUM7QUFDSEMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEYjtBQUVIQyxJQUFBQSxVQUFVLEVBQUU7QUFGVCxHQUY4QjtBQU9yQ0MsRUFBQUEsVUFBVSxFQUFDO0FBQ1BKLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRFQsR0FQMEI7QUFVckNHLEVBQUFBLGNBQWMsRUFBQztBQUNYTCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURMLEdBVnNCO0FBYXJDSSxFQUFBQSxTQUFTLEVBQUM7QUFDTk4sSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEVixHQWIyQjtBQWdCckNLLEVBQUFBLFNBQVMsRUFBQztBQUNOUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURWLEdBaEIyQjtBQW1CckNNLEVBQUFBLG1CQUFtQixFQUFDO0FBQ2pCUixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVUTtBQURDLEdBbkJpQjtBQXNCckNDLEVBQUFBLG9CQUFvQixFQUFDO0FBQ2JWLElBQUFBLElBQUksRUFBRUMsc0JBQVVRO0FBREgsR0F0QmdCO0FBeUJyQ0UsRUFBQUEsaUJBQWlCLEVBQUM7QUFDZFgsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVVc7QUFERixHQXpCbUI7QUE0QnJDQyxFQUFBQSxrQkFBa0IsRUFBQztBQUNmYixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVVztBQURELEdBNUJrQjtBQStCckNFLEVBQUFBLGtCQUFrQixFQUFDO0FBQ2ZkLElBQUFBLElBQUksRUFBRUMsc0JBQVVXO0FBREQsR0EvQmtCO0FBa0NyQ0csRUFBQUEsbUJBQW1CLEVBQUM7QUFDaEJmLElBQUFBLElBQUksRUFBRUMsc0JBQVVXO0FBREEsR0FsQ2lCO0FBcUNyQ0ksRUFBQUEsZUFBZSxFQUFDO0FBQ1poQixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVUTtBQURKLEdBckNxQjtBQXdDckNRLEVBQUFBLFVBQVUsRUFBRTtBQUNSakIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEUjtBQXhDeUIsQ0FBMUIsQ0FBZjs7ZUE2Q2VOLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxEaWVnb1xcRG9jdW1lbnRzXFxHaXRIdWJcXFNlcnZcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xyXG5pbXBvcnQge3NlcXVlbGl6ZX0gZnJvbSAnLi4vZGF0YWJhc2UvZGF0YWJhc2UnO1xyXG5cclxuLyoqIERlZmlubyBtb2RlbG8gZGUgbG9zIGRhdG9zICovXHJcblxyXG5jb25zdCBQZWRpZG8gPSBzZXF1ZWxpemUuZGVmaW5lKCdwZWRpZG8nLHtcclxuXHJcbiAgICBwZWRfaWQ6e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWVcclxuICAgIH0sXHJcblxyXG4gICAgcGVkX3VzZXJpZDp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH0sXHJcbiAgICBwZWRfZGVsaXZlcnlpZDp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH0sXHJcbiAgICBwZWRfdG90YWw6e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICB9LFxyXG4gICAgcGVkX2VudmlvOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuICAgIHBlZF9kaXJlY2Npb25pbmljaW86e1xyXG4gICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBwZWRfZGlyZWNjaW9uZGVzdGlubzp7XHJcbiAgICAgICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LCAgIFxyXG4gICAgcGVkX2xhdGl0dWRpbmljaW86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5ET1VCTEVcclxuICAgIH0sXHJcbiAgICBwZWRfbG9uZ2l0dWRpbmljaW86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5ET1VCTEVcclxuICAgIH0sXHJcbiAgICBwZWRfbGF0aXR1ZGRlc3Rpbm86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5ET1VCTEVcclxuICAgIH0sXHJcbiAgICBwZWRfbG9uZ2l0dWRkZXN0aW5vOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuRE9VQkxFXHJcbiAgICB9LFxyXG4gICAgcGVkX2Rlc2NyaXBjaW9uOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIHBlZF9lc3RhZG8gOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfVxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBlZGlkbzsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Pedido.js"
      ],
      "names": [
        "Pedido",
        "sequelize",
        "define",
        "ped_id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "ped_userid",
        "ped_deliveryid",
        "ped_total",
        "ped_envio",
        "ped_direccioninicio",
        "TEXT",
        "ped_direcciondestino",
        "ped_latitudinicio",
        "DOUBLE",
        "ped_longitudinicio",
        "ped_latituddestino",
        "ped_longituddestino",
        "ped_descripcion",
        "ped_estado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;AAEA,IAAMA,MAAM,GAAGC,oBAAUC,MAAV,CAAiB,QAAjB,EAA0B;AAErCC,EAAAA,MAAM,EAAC;AACHC,IAAAA,IAAI,EAAEC,sBAAUC,OADb;AAEHC,IAAAA,UAAU,EAAE;AAFT,GAF8B;AAOrCC,EAAAA,UAAU,EAAC;AACPJ,IAAAA,IAAI,EAAEC,sBAAUC;AADT,GAP0B;AAUrCG,EAAAA,cAAc,EAAC;AACXL,IAAAA,IAAI,EAAEC,sBAAUC;AADL,GAVsB;AAarCI,EAAAA,SAAS,EAAC;AACNN,IAAAA,IAAI,EAAEC,sBAAUC;AADV,GAb2B;AAgBrCK,EAAAA,SAAS,EAAC;AACNP,IAAAA,IAAI,EAAEC,sBAAUC;AADV,GAhB2B;AAmBrCM,EAAAA,mBAAmB,EAAC;AACjBR,IAAAA,IAAI,EAAEC,sBAAUQ;AADC,GAnBiB;AAsBrCC,EAAAA,oBAAoB,EAAC;AACbV,IAAAA,IAAI,EAAEC,sBAAUQ;AADH,GAtBgB;AAyBrCE,EAAAA,iBAAiB,EAAC;AACdX,IAAAA,IAAI,EAAEC,sBAAUW;AADF,GAzBmB;AA4BrCC,EAAAA,kBAAkB,EAAC;AACfb,IAAAA,IAAI,EAAEC,sBAAUW;AADD,GA5BkB;AA+BrCE,EAAAA,kBAAkB,EAAC;AACfd,IAAAA,IAAI,EAAEC,sBAAUW;AADD,GA/BkB;AAkCrCG,EAAAA,mBAAmB,EAAC;AAChBf,IAAAA,IAAI,EAAEC,sBAAUW;AADA,GAlCiB;AAqCrCI,EAAAA,eAAe,EAAC;AACZhB,IAAAA,IAAI,EAAEC,sBAAUQ;AADJ,GArCqB;AAwCrCQ,EAAAA,UAAU,EAAE;AACRjB,IAAAA,IAAI,EAAEC,sBAAUC;AADR;AAxCyB,CAA1B,CAAf;;eA6CeN,M",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../database/database';\r\n\r\n/** Defino modelo de los datos */\r\n\r\nconst Pedido = sequelize.define('pedido',{\r\n\r\n    ped_id:{\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n\r\n    ped_userid:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    ped_deliveryid:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    ped_total:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    ped_envio:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    ped_direccioninicio:{\r\n       type: Sequelize.TEXT\r\n    },\r\n    ped_direcciondestino:{\r\n            type: Sequelize.TEXT\r\n    },   \r\n    ped_latitudinicio:{\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    ped_longitudinicio:{\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    ped_latituddestino:{\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    ped_longituddestino:{\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    ped_descripcion:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    ped_estado :{\r\n        type: Sequelize.INTEGER\r\n    }\r\n});\r\n\r\nexport default Pedido;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570042567837
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\service\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\service\\\\Service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\service",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\service\\Service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\service\\Service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\service\\Service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\service",
        "sourceFileName": "Service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPrecioEnvioPorReglas = getPrecioEnvioPorReglas;\nexports.getPorcentajeEnvioPorReglas = getPorcentajeEnvioPorReglas;\nexports.getKilometros = getKilometros;\n\nvar _nools = _interopRequireDefault(require(\"nools\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar flowUser = _nools[\"default\"].compile(require.resolve('../res/user_reglas.nools'));\n\nvar UserDatos = flowUser.getDefined('UsuarioDatos');\n\nvar flowDelivery = _nools[\"default\"].compile(require.resolve('../res/delivery_reglas.nools'));\n\nvar DeliveryDatos = flowDelivery.getDefined('DeliveryDatos');\n\nfunction getPrecioEnvioPorReglas(ndia, hora, envio, kms, cantPedidos, nivel, points) {\n  var usersData = [new UserDatos({\n    envio: envio,\n    kms: kms,\n    cantidadPedidos: cantPedidos,\n    ndia: ndia,\n    hora: hora,\n    nivel: nivel,\n    puntos: points\n  })];\n  var session = flowUser.getSession.apply(flowUser, usersData);\n  var r = 0;\n  session.match();\n\n  for (var i = 0; i < usersData.length; i++) {\n    r += usersData[i].envio;\n  }\n\n  session.dispose();\n  return r;\n}\n\nfunction getPorcentajeEnvioPorReglas(ndia, hora, envio, cantidadEnviosDia, nivel, points) {\n  var deliveryData = [new DeliveryDatos({\n    envio: envio,\n    cantidadEnviosDia: cantidadEnviosDia,\n    ndia: ndia,\n    hora: hora,\n    nivel: nivel,\n    puntos: points\n  })];\n  var session = flowDelivery.getSession.apply(flowDelivery, deliveryData);\n  var r = 0;\n  session.match();\n\n  for (var i = 0; i < deliveryData.length; i++) {\n    r += deliveryData[i].resultado;\n  }\n\n  session.dispose();\n  return r;\n} //devuelve los kms entre dos posiciones\n\n\nfunction getKilometros(lat1, lon1, lat2, lon2) {\n  //local\n  function rad(x) {\n    return x * Math.PI / 180;\n  } //radio de la tierra en km\n\n\n  var R = 6.378137;\n  var dLat = rad(lat2 - lat1);\n  var dLong = rad(lon2 - lon1);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(rad(lat1)) * Math.cos(rad(lat2)) * Math.sin(dLong / 2) * Math.sin(dLong / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c; //retorna tres decimales\n\n  return d.toFixed(3);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlcnZpY2UuanMiXSwibmFtZXMiOlsiZmxvd1VzZXIiLCJub29scyIsImNvbXBpbGUiLCJyZXF1aXJlIiwicmVzb2x2ZSIsIlVzZXJEYXRvcyIsImdldERlZmluZWQiLCJmbG93RGVsaXZlcnkiLCJEZWxpdmVyeURhdG9zIiwiZ2V0UHJlY2lvRW52aW9Qb3JSZWdsYXMiLCJuZGlhIiwiaG9yYSIsImVudmlvIiwia21zIiwiY2FudFBlZGlkb3MiLCJuaXZlbCIsInBvaW50cyIsInVzZXJzRGF0YSIsImNhbnRpZGFkUGVkaWRvcyIsInB1bnRvcyIsInNlc3Npb24iLCJnZXRTZXNzaW9uIiwiYXBwbHkiLCJyIiwibWF0Y2giLCJpIiwibGVuZ3RoIiwiZGlzcG9zZSIsImdldFBvcmNlbnRhamVFbnZpb1BvclJlZ2xhcyIsImNhbnRpZGFkRW52aW9zRGlhIiwiZGVsaXZlcnlEYXRhIiwicmVzdWx0YWRvIiwiZ2V0S2lsb21ldHJvcyIsImxhdDEiLCJsb24xIiwibGF0MiIsImxvbjIiLCJyYWQiLCJ4IiwiTWF0aCIsIlBJIiwiUiIsImRMYXQiLCJkTG9uZyIsImEiLCJzaW4iLCJjb3MiLCJjIiwiYXRhbjIiLCJzcXJ0IiwiZCIsInRvRml4ZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUNBOzs7O0FBQ0EsSUFBTUEsUUFBUSxHQUFHQyxrQkFBTUMsT0FBTixDQUFjQyxPQUFPLENBQUNDLE9BQVIsQ0FBZ0IsMEJBQWhCLENBQWQsQ0FBakI7O0FBQ0EsSUFBTUMsU0FBUyxHQUFHTCxRQUFRLENBQUNNLFVBQVQsQ0FBb0IsY0FBcEIsQ0FBbEI7O0FBRUEsSUFBTUMsWUFBWSxHQUFHTixrQkFBTUMsT0FBTixDQUFjQyxPQUFPLENBQUNDLE9BQVIsQ0FBZ0IsOEJBQWhCLENBQWQsQ0FBckI7O0FBQ0EsSUFBTUksYUFBYSxHQUFHRCxZQUFZLENBQUNELFVBQWIsQ0FBd0IsZUFBeEIsQ0FBdEI7O0FBRU8sU0FBU0csdUJBQVQsQ0FBaUNDLElBQWpDLEVBQXVDQyxJQUF2QyxFQUE2Q0MsS0FBN0MsRUFBb0RDLEdBQXBELEVBQXlEQyxXQUF6RCxFQUFxRUMsS0FBckUsRUFBNEVDLE1BQTVFLEVBQ1A7QUFDSSxNQUFJQyxTQUFTLEdBQUksQ0FBRSxJQUFLWixTQUFMLENBQWU7QUFBQ08sSUFBQUEsS0FBSyxFQUFFQSxLQUFSO0FBQWVDLElBQUFBLEdBQUcsRUFBRUEsR0FBcEI7QUFBeUJLLElBQUFBLGVBQWUsRUFBRUosV0FBMUM7QUFBdURKLElBQUFBLElBQUksRUFBQ0EsSUFBNUQ7QUFBbUVDLElBQUFBLElBQUksRUFBRUEsSUFBekU7QUFBK0VJLElBQUFBLEtBQUssRUFBQ0EsS0FBckY7QUFBNEZJLElBQUFBLE1BQU0sRUFBRUg7QUFBcEcsR0FBZixDQUFGLENBQWpCO0FBQ0EsTUFBSUksT0FBTyxHQUFHcEIsUUFBUSxDQUFDcUIsVUFBVCxDQUFvQkMsS0FBcEIsQ0FBMEJ0QixRQUExQixFQUFvQ2lCLFNBQXBDLENBQWQ7QUFFRSxNQUFJTSxDQUFDLEdBQUMsQ0FBTjtBQUVESCxFQUFBQSxPQUFPLENBQUNJLEtBQVI7O0FBRUMsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHUixTQUFTLENBQUNTLE1BQTlCLEVBQXNDRCxDQUFDLEVBQXZDLEVBQTJDO0FBQzFDRixJQUFBQSxDQUFDLElBQUVOLFNBQVMsQ0FBQ1EsQ0FBRCxDQUFULENBQWFiLEtBQWhCO0FBQ0E7O0FBQ0RRLEVBQUFBLE9BQU8sQ0FBQ08sT0FBUjtBQUVBLFNBQU9KLENBQVA7QUFDTDs7QUFHTSxTQUFTSywyQkFBVCxDQUFxQ2xCLElBQXJDLEVBQTJDQyxJQUEzQyxFQUFpREMsS0FBakQsRUFBd0RpQixpQkFBeEQsRUFBMEVkLEtBQTFFLEVBQWlGQyxNQUFqRixFQUNQO0FBQ0ksTUFBSWMsWUFBWSxHQUFJLENBQUUsSUFBS3RCLGFBQUwsQ0FBbUI7QUFBQ0ksSUFBQUEsS0FBSyxFQUFFQSxLQUFSO0FBQWVpQixJQUFBQSxpQkFBaUIsRUFBRUEsaUJBQWxDO0FBQXFEbkIsSUFBQUEsSUFBSSxFQUFDQSxJQUExRDtBQUFpRUMsSUFBQUEsSUFBSSxFQUFFQSxJQUF2RTtBQUE2RUksSUFBQUEsS0FBSyxFQUFDQSxLQUFuRjtBQUEwRkksSUFBQUEsTUFBTSxFQUFFSDtBQUFsRyxHQUFuQixDQUFGLENBQXBCO0FBQ0EsTUFBSUksT0FBTyxHQUFHYixZQUFZLENBQUNjLFVBQWIsQ0FBd0JDLEtBQXhCLENBQThCZixZQUE5QixFQUE0Q3VCLFlBQTVDLENBQWQ7QUFDQyxNQUFJUCxDQUFDLEdBQUMsQ0FBTjtBQUVBSCxFQUFBQSxPQUFPLENBQUNJLEtBQVI7O0FBRUMsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSyxZQUFZLENBQUNKLE1BQWpDLEVBQXlDRCxDQUFDLEVBQTFDLEVBQThDO0FBQzdDRixJQUFBQSxDQUFDLElBQUVPLFlBQVksQ0FBQ0wsQ0FBRCxDQUFaLENBQWdCTSxTQUFuQjtBQUNBOztBQUNEWCxFQUFBQSxPQUFPLENBQUNPLE9BQVI7QUFFQSxTQUFPSixDQUFQO0FBRUMsQyxDQVVQOzs7QUFDTyxTQUFTUyxhQUFULENBQXdCQyxJQUF4QixFQUErQkMsSUFBL0IsRUFBcUNDLElBQXJDLEVBQTJDQyxJQUEzQyxFQUNQO0FBQ0E7QUFDQSxXQUFTQyxHQUFULENBQWVDLENBQWYsRUFBa0I7QUFBQyxXQUFPQSxDQUFDLEdBQUNDLElBQUksQ0FBQ0MsRUFBUCxHQUFVLEdBQWpCO0FBQXNCLEdBRnpDLENBR0M7OztBQUNELE1BQUlDLENBQUMsR0FBRyxRQUFSO0FBQ0EsTUFBSUMsSUFBSSxHQUFHTCxHQUFHLENBQUVGLElBQUksR0FBR0YsSUFBVCxDQUFkO0FBQ0EsTUFBSVUsS0FBSyxHQUFHTixHQUFHLENBQUVELElBQUksR0FBR0YsSUFBVCxDQUFmO0FBRUEsTUFBSVUsQ0FBQyxHQUFHTCxJQUFJLENBQUNNLEdBQUwsQ0FBU0gsSUFBSSxHQUFDLENBQWQsSUFBbUJILElBQUksQ0FBQ00sR0FBTCxDQUFTSCxJQUFJLEdBQUMsQ0FBZCxDQUFuQixHQUFzQ0gsSUFBSSxDQUFDTyxHQUFMLENBQVNULEdBQUcsQ0FBQ0osSUFBRCxDQUFaLElBQXNCTSxJQUFJLENBQUNPLEdBQUwsQ0FBU1QsR0FBRyxDQUFDRixJQUFELENBQVosQ0FBdEIsR0FBNENJLElBQUksQ0FBQ00sR0FBTCxDQUFTRixLQUFLLEdBQUMsQ0FBZixDQUE1QyxHQUFnRUosSUFBSSxDQUFDTSxHQUFMLENBQVNGLEtBQUssR0FBQyxDQUFmLENBQTlHO0FBQ0EsTUFBSUksQ0FBQyxHQUFHLElBQUlSLElBQUksQ0FBQ1MsS0FBTCxDQUFXVCxJQUFJLENBQUNVLElBQUwsQ0FBVUwsQ0FBVixDQUFYLEVBQXlCTCxJQUFJLENBQUNVLElBQUwsQ0FBVSxJQUFFTCxDQUFaLENBQXpCLENBQVo7QUFDQSxNQUFJTSxDQUFDLEdBQUdULENBQUMsR0FBR00sQ0FBWixDQVZBLENBWUE7O0FBQ0EsU0FBT0csQ0FBQyxDQUFDQyxPQUFGLENBQVUsQ0FBVixDQUFQO0FBQ0MiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxEaWVnb1xcRG9jdW1lbnRzXFxHaXRIdWJcXFNlcnZcXHNyY1xcc2VydmljZSIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgbm9vbHMgIGZyb20gJ25vb2xzJztcclxuY29uc3QgZmxvd1VzZXIgPSBub29scy5jb21waWxlKHJlcXVpcmUucmVzb2x2ZSgnLi4vcmVzL3VzZXJfcmVnbGFzLm5vb2xzJykpO1xyXG5jb25zdCBVc2VyRGF0b3MgPSBmbG93VXNlci5nZXREZWZpbmVkKCdVc3VhcmlvRGF0b3MnKTtcclxuXHJcbmNvbnN0IGZsb3dEZWxpdmVyeSA9IG5vb2xzLmNvbXBpbGUocmVxdWlyZS5yZXNvbHZlKCcuLi9yZXMvZGVsaXZlcnlfcmVnbGFzLm5vb2xzJykpO1xyXG5jb25zdCBEZWxpdmVyeURhdG9zID0gZmxvd0RlbGl2ZXJ5LmdldERlZmluZWQoJ0RlbGl2ZXJ5RGF0b3MnKTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRQcmVjaW9FbnZpb1BvclJlZ2xhcyhuZGlhLCBob3JhLCBlbnZpbywga21zLCBjYW50UGVkaWRvcyxuaXZlbCwgcG9pbnRzKVxyXG57XHJcbiAgICB2YXIgdXNlcnNEYXRhICA9IFsgbmV3ICBVc2VyRGF0b3Moe2VudmlvOiBlbnZpbywga21zOiBrbXMsIGNhbnRpZGFkUGVkaWRvczogY2FudFBlZGlkb3MsIG5kaWE6bmRpYSAsIGhvcmE6IGhvcmEsIG5pdmVsOm5pdmVsLCBwdW50b3M6IHBvaW50c30pIF07XHJcbiAgICB2YXIgc2Vzc2lvbiA9IGZsb3dVc2VyLmdldFNlc3Npb24uYXBwbHkoZmxvd1VzZXIsIHVzZXJzRGF0YSk7XHJcbiAgIFxyXG4gICAgICB2YXIgcj0wO1xyXG4gICAgIFxyXG4gICAgIHNlc3Npb24ubWF0Y2goKTtcclxuICAgIFxyXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHVzZXJzRGF0YS5sZW5ndGg7IGkrKykgeyBcclxuICAgICAgIHIrPXVzZXJzRGF0YVtpXS5lbnZpbztcclxuICAgICAgfVxyXG4gICAgICBzZXNzaW9uLmRpc3Bvc2UoKTtcclxuICBcclxuICAgICAgcmV0dXJuIHI7XHJcbn1cclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0UG9yY2VudGFqZUVudmlvUG9yUmVnbGFzKG5kaWEsIGhvcmEsIGVudmlvLCBjYW50aWRhZEVudmlvc0RpYSxuaXZlbCwgcG9pbnRzKVxyXG57XHJcbiAgICB2YXIgZGVsaXZlcnlEYXRhICA9IFsgbmV3ICBEZWxpdmVyeURhdG9zKHtlbnZpbzogZW52aW8sIGNhbnRpZGFkRW52aW9zRGlhOiBjYW50aWRhZEVudmlvc0RpYSwgbmRpYTpuZGlhICwgaG9yYTogaG9yYSwgbml2ZWw6bml2ZWwsIHB1bnRvczogcG9pbnRzfSkgXTtcclxuICAgIHZhciBzZXNzaW9uID0gZmxvd0RlbGl2ZXJ5LmdldFNlc3Npb24uYXBwbHkoZmxvd0RlbGl2ZXJ5LCBkZWxpdmVyeURhdGEpO1xyXG4gICAgIHZhciByPTA7XHJcblxyXG4gICAgIHNlc3Npb24ubWF0Y2goKTtcclxuICAgIFxyXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRlbGl2ZXJ5RGF0YS5sZW5ndGg7IGkrKykgeyBcclxuICAgICAgIHIrPWRlbGl2ZXJ5RGF0YVtpXS5yZXN1bHRhZG87XHJcbiAgICAgIH1cclxuICAgICAgc2Vzc2lvbi5kaXNwb3NlKCk7XHJcbiAgXHJcbiAgICAgIHJldHVybiByO1xyXG4gIFxyXG4gICAgICB9XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vZGV2dWVsdmUgbG9zIGttcyBlbnRyZSBkb3MgcG9zaWNpb25lc1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0S2lsb21ldHJvcyAobGF0MSAsIGxvbjEsIGxhdDIsIGxvbjIpXHJcbntcclxuLy9sb2NhbFxyXG5mdW5jdGlvbiByYWQgICh4KSB7cmV0dXJuIHgqTWF0aC5QSS8xODA7fVxyXG4gLy9yYWRpbyBkZSBsYSB0aWVycmEgZW4ga21cclxudmFyIFIgPSA2LjM3ODEzNztcclxudmFyIGRMYXQgPSByYWQoIGxhdDIgLSBsYXQxICk7XHJcbnZhciBkTG9uZyA9IHJhZCggbG9uMiAtIGxvbjEgKTtcclxuXHJcbnZhciBhID0gTWF0aC5zaW4oZExhdC8yKSAqIE1hdGguc2luKGRMYXQvMikgKyBNYXRoLmNvcyhyYWQobGF0MSkpICogTWF0aC5jb3MocmFkKGxhdDIpKSAqIE1hdGguc2luKGRMb25nLzIpICogTWF0aC5zaW4oZExvbmcvMik7XHJcbnZhciBjID0gMiAqIE1hdGguYXRhbjIoTWF0aC5zcXJ0KGEpLCBNYXRoLnNxcnQoMS1hKSk7XHJcbnZhciBkID0gUiAqIGM7XHJcblxyXG4vL3JldG9ybmEgdHJlcyBkZWNpbWFsZXNcclxucmV0dXJuIGQudG9GaXhlZCgzKTtcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Service.js"
      ],
      "names": [
        "flowUser",
        "nools",
        "compile",
        "require",
        "resolve",
        "UserDatos",
        "getDefined",
        "flowDelivery",
        "DeliveryDatos",
        "getPrecioEnvioPorReglas",
        "ndia",
        "hora",
        "envio",
        "kms",
        "cantPedidos",
        "nivel",
        "points",
        "usersData",
        "cantidadPedidos",
        "puntos",
        "session",
        "getSession",
        "apply",
        "r",
        "match",
        "i",
        "length",
        "dispose",
        "getPorcentajeEnvioPorReglas",
        "cantidadEnviosDia",
        "deliveryData",
        "resultado",
        "getKilometros",
        "lat1",
        "lon1",
        "lat2",
        "lon2",
        "rad",
        "x",
        "Math",
        "PI",
        "R",
        "dLat",
        "dLong",
        "a",
        "sin",
        "cos",
        "c",
        "atan2",
        "sqrt",
        "d",
        "toFixed"
      ],
      "mappings": ";;;;;;;;;AACA;;;;AACA,IAAMA,QAAQ,GAAGC,kBAAMC,OAAN,CAAcC,OAAO,CAACC,OAAR,CAAgB,0BAAhB,CAAd,CAAjB;;AACA,IAAMC,SAAS,GAAGL,QAAQ,CAACM,UAAT,CAAoB,cAApB,CAAlB;;AAEA,IAAMC,YAAY,GAAGN,kBAAMC,OAAN,CAAcC,OAAO,CAACC,OAAR,CAAgB,8BAAhB,CAAd,CAArB;;AACA,IAAMI,aAAa,GAAGD,YAAY,CAACD,UAAb,CAAwB,eAAxB,CAAtB;;AAEO,SAASG,uBAAT,CAAiCC,IAAjC,EAAuCC,IAAvC,EAA6CC,KAA7C,EAAoDC,GAApD,EAAyDC,WAAzD,EAAqEC,KAArE,EAA4EC,MAA5E,EACP;AACI,MAAIC,SAAS,GAAI,CAAE,IAAKZ,SAAL,CAAe;AAACO,IAAAA,KAAK,EAAEA,KAAR;AAAeC,IAAAA,GAAG,EAAEA,GAApB;AAAyBK,IAAAA,eAAe,EAAEJ,WAA1C;AAAuDJ,IAAAA,IAAI,EAACA,IAA5D;AAAmEC,IAAAA,IAAI,EAAEA,IAAzE;AAA+EI,IAAAA,KAAK,EAACA,KAArF;AAA4FI,IAAAA,MAAM,EAAEH;AAApG,GAAf,CAAF,CAAjB;AACA,MAAII,OAAO,GAAGpB,QAAQ,CAACqB,UAAT,CAAoBC,KAApB,CAA0BtB,QAA1B,EAAoCiB,SAApC,CAAd;AAEE,MAAIM,CAAC,GAAC,CAAN;AAEDH,EAAAA,OAAO,CAACI,KAAR;;AAEC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,SAAS,CAACS,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AAC1CF,IAAAA,CAAC,IAAEN,SAAS,CAACQ,CAAD,CAAT,CAAab,KAAhB;AACA;;AACDQ,EAAAA,OAAO,CAACO,OAAR;AAEA,SAAOJ,CAAP;AACL;;AAGM,SAASK,2BAAT,CAAqClB,IAArC,EAA2CC,IAA3C,EAAiDC,KAAjD,EAAwDiB,iBAAxD,EAA0Ed,KAA1E,EAAiFC,MAAjF,EACP;AACI,MAAIc,YAAY,GAAI,CAAE,IAAKtB,aAAL,CAAmB;AAACI,IAAAA,KAAK,EAAEA,KAAR;AAAeiB,IAAAA,iBAAiB,EAAEA,iBAAlC;AAAqDnB,IAAAA,IAAI,EAACA,IAA1D;AAAiEC,IAAAA,IAAI,EAAEA,IAAvE;AAA6EI,IAAAA,KAAK,EAACA,KAAnF;AAA0FI,IAAAA,MAAM,EAAEH;AAAlG,GAAnB,CAAF,CAApB;AACA,MAAII,OAAO,GAAGb,YAAY,CAACc,UAAb,CAAwBC,KAAxB,CAA8Bf,YAA9B,EAA4CuB,YAA5C,CAAd;AACC,MAAIP,CAAC,GAAC,CAAN;AAEAH,EAAAA,OAAO,CAACI,KAAR;;AAEC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,YAAY,CAACJ,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC7CF,IAAAA,CAAC,IAAEO,YAAY,CAACL,CAAD,CAAZ,CAAgBM,SAAnB;AACA;;AACDX,EAAAA,OAAO,CAACO,OAAR;AAEA,SAAOJ,CAAP;AAEC,C,CAUP;;;AACO,SAASS,aAAT,CAAwBC,IAAxB,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,IAA3C,EACP;AACA;AACA,WAASC,GAAT,CAAeC,CAAf,EAAkB;AAAC,WAAOA,CAAC,GAACC,IAAI,CAACC,EAAP,GAAU,GAAjB;AAAsB,GAFzC,CAGC;;;AACD,MAAIC,CAAC,GAAG,QAAR;AACA,MAAIC,IAAI,GAAGL,GAAG,CAAEF,IAAI,GAAGF,IAAT,CAAd;AACA,MAAIU,KAAK,GAAGN,GAAG,CAAED,IAAI,GAAGF,IAAT,CAAf;AAEA,MAAIU,CAAC,GAAGL,IAAI,CAACM,GAAL,CAASH,IAAI,GAAC,CAAd,IAAmBH,IAAI,CAACM,GAAL,CAASH,IAAI,GAAC,CAAd,CAAnB,GAAsCH,IAAI,CAACO,GAAL,CAAST,GAAG,CAACJ,IAAD,CAAZ,IAAsBM,IAAI,CAACO,GAAL,CAAST,GAAG,CAACF,IAAD,CAAZ,CAAtB,GAA4CI,IAAI,CAACM,GAAL,CAASF,KAAK,GAAC,CAAf,CAA5C,GAAgEJ,IAAI,CAACM,GAAL,CAASF,KAAK,GAAC,CAAf,CAA9G;AACA,MAAII,CAAC,GAAG,IAAIR,IAAI,CAACS,KAAL,CAAWT,IAAI,CAACU,IAAL,CAAUL,CAAV,CAAX,EAAyBL,IAAI,CAACU,IAAL,CAAU,IAAEL,CAAZ,CAAzB,CAAZ;AACA,MAAIM,CAAC,GAAGT,CAAC,GAAGM,CAAZ,CAVA,CAYA;;AACA,SAAOG,CAAC,CAACC,OAAF,CAAU,CAAV,CAAP;AACC",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\service",
      "sourcesContent": [
        "\r\nimport nools  from 'nools';\r\nconst flowUser = nools.compile(require.resolve('../res/user_reglas.nools'));\r\nconst UserDatos = flowUser.getDefined('UsuarioDatos');\r\n\r\nconst flowDelivery = nools.compile(require.resolve('../res/delivery_reglas.nools'));\r\nconst DeliveryDatos = flowDelivery.getDefined('DeliveryDatos');\r\n\r\nexport function getPrecioEnvioPorReglas(ndia, hora, envio, kms, cantPedidos,nivel, points)\r\n{\r\n    var usersData  = [ new  UserDatos({envio: envio, kms: kms, cantidadPedidos: cantPedidos, ndia:ndia , hora: hora, nivel:nivel, puntos: points}) ];\r\n    var session = flowUser.getSession.apply(flowUser, usersData);\r\n   \r\n      var r=0;\r\n     \r\n     session.match();\r\n    \r\n      for (var i = 0; i < usersData.length; i++) { \r\n       r+=usersData[i].envio;\r\n      }\r\n      session.dispose();\r\n  \r\n      return r;\r\n}\r\n\r\n\r\nexport function getPorcentajeEnvioPorReglas(ndia, hora, envio, cantidadEnviosDia,nivel, points)\r\n{\r\n    var deliveryData  = [ new  DeliveryDatos({envio: envio, cantidadEnviosDia: cantidadEnviosDia, ndia:ndia , hora: hora, nivel:nivel, puntos: points}) ];\r\n    var session = flowDelivery.getSession.apply(flowDelivery, deliveryData);\r\n     var r=0;\r\n\r\n     session.match();\r\n    \r\n      for (var i = 0; i < deliveryData.length; i++) { \r\n       r+=deliveryData[i].resultado;\r\n      }\r\n      session.dispose();\r\n  \r\n      return r;\r\n  \r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//devuelve los kms entre dos posiciones\r\nexport function getKilometros (lat1 , lon1, lat2, lon2)\r\n{\r\n//local\r\nfunction rad  (x) {return x*Math.PI/180;}\r\n //radio de la tierra en km\r\nvar R = 6.378137;\r\nvar dLat = rad( lat2 - lat1 );\r\nvar dLong = rad( lon2 - lon1 );\r\n\r\nvar a = Math.sin(dLat/2) * Math.sin(dLat/2) + Math.cos(rad(lat1)) * Math.cos(rad(lat2)) * Math.sin(dLong/2) * Math.sin(dLong/2);\r\nvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\nvar d = R * c;\r\n\r\n//retorna tres decimales\r\nreturn d.toFixed(3);\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1570555871585
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\\\\Conversation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Conversation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Conversation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Conversation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
        "sourceFileName": "Conversation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar Op = _sequelize[\"default\"].Op;\n\nvar Conversation = _database.sequelize.define('conversation', {});\n\nConversation.findOrCreateConversation = function (user1Id, user2Id) {\n  return Conversation.findAll({\n    where: {\n      user1Id: _defineProperty({}, Op.or, [user1Id, user2Id]),\n      user2Id: _defineProperty({}, Op.or, [user1Id, user2Id])\n    },\n    include: [_database.sequelize.models.message],\n    order: [[_database.sequelize.models.message, 'createdAt', 'DESC']]\n  }).then(function (conversation) {\n    if (conversation) {\n      return conversation;\n    } else {\n      return Conversation.create({\n        user1Id: user1Id,\n        user2Id: user2Id\n      }, {\n        include: [conn.models.message],\n        order: [[conn.models.message, 'createdAt', 'DESC']]\n      });\n    }\n  });\n};\n\nmodule.exports = Conversation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbnZlcnNhdGlvbi5qcyJdLCJuYW1lcyI6WyJPcCIsIlNlcXVlbGl6ZSIsIkNvbnZlcnNhdGlvbiIsInNlcXVlbGl6ZSIsImRlZmluZSIsImZpbmRPckNyZWF0ZUNvbnZlcnNhdGlvbiIsInVzZXIxSWQiLCJ1c2VyMklkIiwiZmluZEFsbCIsIndoZXJlIiwib3IiLCJpbmNsdWRlIiwibW9kZWxzIiwibWVzc2FnZSIsIm9yZGVyIiwidGhlbiIsImNvbnZlcnNhdGlvbiIsImNyZWF0ZSIsImNvbm4iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7Ozs7SUFDUUEsRSxHQUFPQyxxQixDQUFQRCxFOztBQUVSLElBQU1FLFlBQVksR0FBR0Msb0JBQVVDLE1BQVYsQ0FBaUIsY0FBakIsRUFBaUMsRUFBakMsQ0FBckI7O0FBS0FGLFlBQVksQ0FBQ0csd0JBQWIsR0FBd0MsVUFBU0MsT0FBVCxFQUFrQkMsT0FBbEIsRUFBMkI7QUFDL0QsU0FBT0wsWUFBWSxDQUFDTSxPQUFiLENBQXFCO0FBQzFCQyxJQUFBQSxLQUFLLEVBQUU7QUFDTEgsTUFBQUEsT0FBTyxzQkFDSk4sRUFBRSxDQUFDVSxFQURDLEVBQ0ksQ0FBQ0osT0FBRCxFQUFVQyxPQUFWLENBREosQ0FERjtBQUlMQSxNQUFBQSxPQUFPLHNCQUNKUCxFQUFFLENBQUNVLEVBREMsRUFDSSxDQUFDSixPQUFELEVBQVVDLE9BQVYsQ0FESjtBQUpGLEtBRG1CO0FBUzFCSSxJQUFBQSxPQUFPLEVBQUUsQ0FBRVIsb0JBQVVTLE1BQVYsQ0FBaUJDLE9BQW5CLENBVGlCO0FBVTFCQyxJQUFBQSxLQUFLLEVBQUUsQ0FBQyxDQUFFWCxvQkFBVVMsTUFBVixDQUFpQkMsT0FBbkIsRUFBNEIsV0FBNUIsRUFBeUMsTUFBekMsQ0FBRDtBQVZtQixHQUFyQixFQVlKRSxJQVpJLENBWUMsVUFBQUMsWUFBWSxFQUFJO0FBQ3BCLFFBQUdBLFlBQUgsRUFBaUI7QUFDZixhQUFPQSxZQUFQO0FBQ0QsS0FGRCxNQUVPO0FBQ0wsYUFBT2QsWUFBWSxDQUFDZSxNQUFiLENBQW9CO0FBQ3pCWCxRQUFBQSxPQUFPLEVBQUVBLE9BRGdCO0FBRXpCQyxRQUFBQSxPQUFPLEVBQUVBO0FBRmdCLE9BQXBCLEVBR0o7QUFDREksUUFBQUEsT0FBTyxFQUFFLENBQUVPLElBQUksQ0FBQ04sTUFBTCxDQUFZQyxPQUFkLENBRFI7QUFFREMsUUFBQUEsS0FBSyxFQUFFLENBQUMsQ0FBRUksSUFBSSxDQUFDTixNQUFMLENBQVlDLE9BQWQsRUFBdUIsV0FBdkIsRUFBb0MsTUFBcEMsQ0FBRDtBQUZOLE9BSEksQ0FBUDtBQU9EO0FBQ0YsR0F4QkksQ0FBUDtBQXlCRCxDQTFCSDs7QUE0QkFNLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmxCLFlBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGllZ29cXERvY3VtZW50c1xcR2l0SHViXFxTZXJ2XFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuaW1wb3J0IHtzZXF1ZWxpemV9IGZyb20gJy4uL2RhdGFiYXNlL2RhdGFiYXNlJztcclxuY29uc3QgeyBPcCB9ID0gU2VxdWVsaXplO1xyXG5cclxuY29uc3QgQ29udmVyc2F0aW9uID0gc2VxdWVsaXplLmRlZmluZSgnY29udmVyc2F0aW9uJywge1xyXG5cclxufSk7XHJcblxyXG5cclxuQ29udmVyc2F0aW9uLmZpbmRPckNyZWF0ZUNvbnZlcnNhdGlvbiA9IGZ1bmN0aW9uKHVzZXIxSWQsIHVzZXIySWQpIHtcclxuICAgIHJldHVybiBDb252ZXJzYXRpb24uZmluZEFsbCh7XHJcbiAgICAgIHdoZXJlOiB7XHJcbiAgICAgICAgdXNlcjFJZDoge1xyXG4gICAgICAgICAgW09wLm9yXTogW3VzZXIxSWQsIHVzZXIySWRdXHJcbiAgICAgICAgfSxcclxuICAgICAgICB1c2VyMklkOiB7XHJcbiAgICAgICAgICBbT3Aub3JdOiBbdXNlcjFJZCwgdXNlcjJJZF1cclxuICAgICAgICB9XHJcbiAgICAgIH0sXHJcbiAgICAgIGluY2x1ZGU6IFsgc2VxdWVsaXplLm1vZGVscy5tZXNzYWdlIF0sXHJcbiAgICAgIG9yZGVyOiBbWyBzZXF1ZWxpemUubW9kZWxzLm1lc3NhZ2UsICdjcmVhdGVkQXQnLCAnREVTQycgXV1cclxuICAgIH0pXHJcbiAgICAgIC50aGVuKGNvbnZlcnNhdGlvbiA9PiB7XHJcbiAgICAgICAgaWYoY29udmVyc2F0aW9uKSB7XHJcbiAgICAgICAgICByZXR1cm4gY29udmVyc2F0aW9uO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICByZXR1cm4gQ29udmVyc2F0aW9uLmNyZWF0ZSh7XHJcbiAgICAgICAgICAgIHVzZXIxSWQ6IHVzZXIxSWQsXHJcbiAgICAgICAgICAgIHVzZXIySWQ6IHVzZXIySWRcclxuICAgICAgICAgIH0sIHtcclxuICAgICAgICAgICAgaW5jbHVkZTogWyBjb25uLm1vZGVscy5tZXNzYWdlIF0sXHJcbiAgICAgICAgICAgIG9yZGVyOiBbWyBjb25uLm1vZGVscy5tZXNzYWdlLCAnY3JlYXRlZEF0JywgJ0RFU0MnIF1dXHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pO1xyXG4gIH07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IENvbnZlcnNhdGlvbjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Conversation.js"
      ],
      "names": [
        "Op",
        "Sequelize",
        "Conversation",
        "sequelize",
        "define",
        "findOrCreateConversation",
        "user1Id",
        "user2Id",
        "findAll",
        "where",
        "or",
        "include",
        "models",
        "message",
        "order",
        "then",
        "conversation",
        "create",
        "conn",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;;;;;IACQA,E,GAAOC,qB,CAAPD,E;;AAER,IAAME,YAAY,GAAGC,oBAAUC,MAAV,CAAiB,cAAjB,EAAiC,EAAjC,CAArB;;AAKAF,YAAY,CAACG,wBAAb,GAAwC,UAASC,OAAT,EAAkBC,OAAlB,EAA2B;AAC/D,SAAOL,YAAY,CAACM,OAAb,CAAqB;AAC1BC,IAAAA,KAAK,EAAE;AACLH,MAAAA,OAAO,sBACJN,EAAE,CAACU,EADC,EACI,CAACJ,OAAD,EAAUC,OAAV,CADJ,CADF;AAILA,MAAAA,OAAO,sBACJP,EAAE,CAACU,EADC,EACI,CAACJ,OAAD,EAAUC,OAAV,CADJ;AAJF,KADmB;AAS1BI,IAAAA,OAAO,EAAE,CAAER,oBAAUS,MAAV,CAAiBC,OAAnB,CATiB;AAU1BC,IAAAA,KAAK,EAAE,CAAC,CAAEX,oBAAUS,MAAV,CAAiBC,OAAnB,EAA4B,WAA5B,EAAyC,MAAzC,CAAD;AAVmB,GAArB,EAYJE,IAZI,CAYC,UAAAC,YAAY,EAAI;AACpB,QAAGA,YAAH,EAAiB;AACf,aAAOA,YAAP;AACD,KAFD,MAEO;AACL,aAAOd,YAAY,CAACe,MAAb,CAAoB;AACzBX,QAAAA,OAAO,EAAEA,OADgB;AAEzBC,QAAAA,OAAO,EAAEA;AAFgB,OAApB,EAGJ;AACDI,QAAAA,OAAO,EAAE,CAAEO,IAAI,CAACN,MAAL,CAAYC,OAAd,CADR;AAEDC,QAAAA,KAAK,EAAE,CAAC,CAAEI,IAAI,CAACN,MAAL,CAAYC,OAAd,EAAuB,WAAvB,EAAoC,MAApC,CAAD;AAFN,OAHI,CAAP;AAOD;AACF,GAxBI,CAAP;AAyBD,CA1BH;;AA4BAM,MAAM,CAACC,OAAP,GAAiBlB,YAAjB",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../database/database';\r\nconst { Op } = Sequelize;\r\n\r\nconst Conversation = sequelize.define('conversation', {\r\n\r\n});\r\n\r\n\r\nConversation.findOrCreateConversation = function(user1Id, user2Id) {\r\n    return Conversation.findAll({\r\n      where: {\r\n        user1Id: {\r\n          [Op.or]: [user1Id, user2Id]\r\n        },\r\n        user2Id: {\r\n          [Op.or]: [user1Id, user2Id]\r\n        }\r\n      },\r\n      include: [ sequelize.models.message ],\r\n      order: [[ sequelize.models.message, 'createdAt', 'DESC' ]]\r\n    })\r\n      .then(conversation => {\r\n        if(conversation) {\r\n          return conversation;\r\n        } else {\r\n          return Conversation.create({\r\n            user1Id: user1Id,\r\n            user2Id: user2Id\r\n          }, {\r\n            include: [ conn.models.message ],\r\n            order: [[ conn.models.message, 'createdAt', 'DESC' ]]\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\nmodule.exports = Conversation;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570039486664
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\rutas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\rutas\\\\mensajes.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\mensajes.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\mensajes.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas\\mensajes.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
        "sourceFileName": "mensajes.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _mensajeController = require(\"../controllers/mensajeController\");\n\nvar _userController = require(\"../controllers/userController\");\n\nvar router = (0, _express.Router)();\n/** Controladores */\n\n/** Rutas */\n\n/** Obtener todos los productos */\nrouter.get('/all', _userController.ensureToken, _userController.chequeoToken, _mensajeController.getAll);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnNhamVzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImdldCIsImVuc3VyZVRva2VuIiwiY2hlcXVlb1Rva2VuIiwiZ2V0QWxsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBTUE7O0FBSUE7O0FBUkEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBRUk7O0FBV0o7O0FBQ0E7QUFDQUEsTUFBTSxDQUFDQyxHQUFQLENBQVcsTUFBWCxFQUFtQkMsMkJBQW5CLEVBQStCQyw0QkFBL0IsRUFBNENDLHlCQUE1QztlQUdlSixNIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGllZ29cXERvY3VtZW50c1xcR2l0SHViXFxTZXJ2XFxzcmNcXHJ1dGFzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSb3V0ZXJ9IGZyb20gJ2V4cHJlc3MnXHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKVxyXG5cclxuICAgIC8qKiBDb250cm9sYWRvcmVzICovXHJcblxyXG5pbXBvcnQgeyAgXHJcbiAgICBnZXRBbGwgfSBmcm9tICcuLi9jb250cm9sbGVycy9tZW5zYWplQ29udHJvbGxlcic7XHJcblxyXG5cclxuaW1wb3J0IHsgXHJcbiAgICAgZW5zdXJlVG9rZW4sY2hlcXVlb1Rva2VuXHJcbiAgICB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXJDb250cm9sbGVyJztcclxuXHJcblxyXG4vKiogUnV0YXMgKi9cclxuLyoqIE9idGVuZXIgdG9kb3MgbG9zIHByb2R1Y3RvcyAqL1xyXG5yb3V0ZXIuZ2V0KCcvYWxsJywgZW5zdXJlVG9rZW4sY2hlcXVlb1Rva2VuLGdldEFsbCApO1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlciJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "mensajes.js"
      ],
      "names": [
        "router",
        "get",
        "ensureToken",
        "chequeoToken",
        "getAll"
      ],
      "mappings": ";;;;;;;AAAA;;AAMA;;AAIA;;AARA,IAAMA,MAAM,GAAG,sBAAf;AAEI;;AAWJ;;AACA;AACAA,MAAM,CAACC,GAAP,CAAW,MAAX,EAAmBC,2BAAnB,EAA+BC,4BAA/B,EAA4CC,yBAA5C;eAGeJ,M",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\rutas",
      "sourcesContent": [
        "import {Router} from 'express'\r\n\r\nconst router = Router()\r\n\r\n    /** Controladores */\r\n\r\nimport {  \r\n    getAll } from '../controllers/mensajeController';\r\n\r\n\r\nimport { \r\n     ensureToken,chequeoToken\r\n    } from '../controllers/userController';\r\n\r\n\r\n/** Rutas */\r\n/** Obtener todos los productos */\r\nrouter.get('/all', ensureToken,chequeoToken,getAll );\r\n\r\n\r\nexport default router"
      ]
    },
    "sourceType": "script",
    "mtime": 1570043968276
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\controllers\\\\mensajeController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\mensajeController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\mensajeController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers\\mensajeController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
        "sourceFileName": "mensajeController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAll = getAll;\n\nvar _Mensaje = _interopRequireDefault(require(\"../models/Mensaje\"));\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction getAll(_x, _x2) {\n  return _getAll.apply(this, arguments);\n}\n\nfunction _getAll() {\n  _getAll = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var mensajes;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _Mensaje[\"default\"].findAll();\n\n          case 3:\n            mensajes = _context.sent;\n\n            if (mensajes) {\n              res.json(mensajes); //res.json(['John', 'Betty', 'Hal']);\n            } else {\n              res.status(500).json({\n                message: 'No se encontro mensajes.'\n              });\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'algo salio mal obteniendo los mensajes',\n              data: {\n                error: _context.t0\n              }\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _getAll.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnNhamVDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImdldEFsbCIsInJlcSIsInJlcyIsIk1lbnNhamUiLCJmaW5kQWxsIiwibWVuc2FqZXMiLCJqc29uIiwic3RhdHVzIiwibWVzc2FnZSIsImRhdGEiLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7U0FJc0JBLE07Ozs7Ozs7MEJBQWYsaUJBQXNCQyxHQUF0QixFQUEwQkMsR0FBMUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQVNzQkMsb0JBQVFDLE9BQVIsRUFUdEI7O0FBQUE7QUFTS0MsWUFBQUEsUUFUTDs7QUFXQyxnQkFBR0EsUUFBSCxFQUFZO0FBRVZILGNBQUFBLEdBQUcsQ0FBQ0ksSUFBSixDQUFTRCxRQUFULEVBRlUsQ0FHUjtBQUNILGFBSkQsTUFLSTtBQUNBSCxjQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCRCxJQUFoQixDQUFxQjtBQUNqQkUsZ0JBQUFBLE9BQU8sRUFBQztBQURTLGVBQXJCO0FBR0g7O0FBcEJGO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBeUJHTixZQUFBQSxHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCRCxJQUFoQixDQUFxQjtBQUNqQkUsY0FBQUEsT0FBTyxFQUFDLHdDQURTO0FBRWpCQyxjQUFBQSxJQUFJLEVBQUM7QUFBQ0MsZ0JBQUFBLEtBQUs7QUFBTjtBQUZZLGFBQXJCOztBQXpCSDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcRGllZ29cXERvY3VtZW50c1xcR2l0SHViXFxTZXJ2XFxzcmNcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1lbnNhamUgZnJvbSAnLi4vbW9kZWxzL01lbnNhamUnO1xyXG5pbXBvcnQgZXhwcmVzcyAsIHsganNvbiB9IGZyb20gJ2V4cHJlc3MnXHJcblxyXG5cclxuLyoqIE9idGVuZXIgdG9kb3MgbG9zIGNvbWVyY2lvcyAqL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsKHJlcSxyZXMpe1xyXG5cclxuIHRyeSB7XHJcbiAgICAgICAgIFxyXG5cclxuXHJcblxyXG5cclxuXHJcbiAgICAgICAgbGV0IG1lbnNhamVzID0gYXdhaXQgTWVuc2FqZS5maW5kQWxsKCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYobWVuc2FqZXMpe1xyXG5cclxuICAgICAgICAgIHJlcy5qc29uKG1lbnNhamVzKTtcclxuICAgICAgICAgICAgLy9yZXMuanNvbihbJ0pvaG4nLCAnQmV0dHknLCAnSGFsJ10pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOidObyBzZSBlbmNvbnRybyBtZW5zYWplcy4nICAgICAgXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgXHJcbiAgICAgICBcclxuICBcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICBtZXNzYWdlOidhbGdvIHNhbGlvIG1hbCBvYnRlbmllbmRvIGxvcyBtZW5zYWplcycsXHJcbiAgICAgICAgICAgICAgZGF0YTp7ZXJyb3J9XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgfSBcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "mensajeController.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Mensaje",
        "findAll",
        "mensajes",
        "json",
        "status",
        "message",
        "data",
        "error"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;SAIsBA,M;;;;;;;0BAAf,iBAAsBC,GAAtB,EAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASsBC,oBAAQC,OAAR,EATtB;;AAAA;AASKC,YAAAA,QATL;;AAWC,gBAAGA,QAAH,EAAY;AAEVH,cAAAA,GAAG,CAACI,IAAJ,CAASD,QAAT,EAFU,CAGR;AACH,aAJD,MAKI;AACAH,cAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AACjBE,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AApBF;AAAA;;AAAA;AAAA;AAAA;AAyBGN,YAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AACjBE,cAAAA,OAAO,EAAC,wCADS;AAEjBC,cAAAA,IAAI,EAAC;AAACC,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AAzBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\controllers",
      "sourcesContent": [
        "import Mensaje from '../models/Mensaje';\r\nimport express , { json } from 'express'\r\n\r\n\r\n/** Obtener todos los comercios */\r\nexport async function getAll(req,res){\r\n\r\n try {\r\n         \r\n\r\n\r\n\r\n\r\n\r\n        let mensajes = await Mensaje.findAll();\r\n        \r\n        if(mensajes){\r\n\r\n          res.json(mensajes);\r\n            //res.json(['John', 'Betty', 'Hal']);\r\n        }\r\n        else{\r\n            res.status(500).json({\r\n                message:'No se encontro mensajes.'      \r\n            })\r\n        }\r\n       \r\n       \r\n  \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'algo salio mal obteniendo los mensajes',\r\n              data:{error}\r\n          });\r\n      } \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1570046019416
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"filename\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\\\\src\\\\models\\\\Mensaje.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Diego\\\\Documents\\\\GitHub\\\\Serv\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Mensaje.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Diego\\Documents\\GitHub\\Serv",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Mensaje.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models\\Mensaje.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
        "sourceFileName": "Mensaje.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Mensaje = _database.sequelize.define('mensajes', {\n  men_id: {\n    type: _sequelize[\"default\"].UUID,\n    defaultValue: _sequelize[\"default\"].UUIDV4,\n    primaryKey: true\n  },\n  men_user_idSent: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  men_user_idRec: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  men_texto: {\n    type: _sequelize[\"default\"].TEXT\n  }\n});\n\nmodule.exports = Mensaje;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk1lbnNhamUuanMiXSwibmFtZXMiOlsiTWVuc2FqZSIsInNlcXVlbGl6ZSIsImRlZmluZSIsIm1lbl9pZCIsInR5cGUiLCJTZXF1ZWxpemUiLCJVVUlEIiwiZGVmYXVsdFZhbHVlIiwiVVVJRFY0IiwicHJpbWFyeUtleSIsIm1lbl91c2VyX2lkU2VudCIsIklOVEVHRVIiLCJtZW5fdXNlcl9pZFJlYyIsIm1lbl90ZXh0byIsIlRFWFQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOzs7O0FBRUEsSUFBTUEsT0FBTyxHQUFHQyxvQkFBVUMsTUFBVixDQUFpQixVQUFqQixFQUE2QjtBQUV6Q0MsRUFBQUEsTUFBTSxFQUFDO0FBQ0pDLElBQUFBLElBQUksRUFBRUMsc0JBQVVDLElBRFo7QUFFSkMsSUFBQUEsWUFBWSxFQUFFRixzQkFBVUcsTUFGcEI7QUFHSkMsSUFBQUEsVUFBVSxFQUFFO0FBSFIsR0FGa0M7QUFRekNDLEVBQUFBLGVBQWUsRUFDZjtBQUNFTixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVTTtBQURsQixHQVR5QztBQWF6Q0MsRUFBQUEsY0FBYyxFQUNkO0FBQ0VSLElBQUFBLElBQUksRUFBRUMsc0JBQVVNO0FBRGxCLEdBZHlDO0FBbUJ6Q0UsRUFBQUEsU0FBUyxFQUFDO0FBQ05ULElBQUFBLElBQUksRUFBRUMsc0JBQVVTO0FBRFY7QUFuQitCLENBQTdCLENBQWhCOztBQTJCQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCaEIsT0FBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxEaWVnb1xcRG9jdW1lbnRzXFxHaXRIdWJcXFNlcnZcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xyXG5pbXBvcnQge3NlcXVlbGl6ZX0gZnJvbSAnLi4vZGF0YWJhc2UvZGF0YWJhc2UnO1xyXG5cclxuY29uc3QgTWVuc2FqZSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ21lbnNhamVzJywge1xyXG4gIFxyXG4gICAgbWVuX2lkOntcclxuICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5VVUlELFxyXG4gICAgICAgZGVmYXVsdFZhbHVlOiBTZXF1ZWxpemUuVVVJRFY0LFxyXG4gICAgICAgcHJpbWFyeUtleTogdHJ1ZVxyXG4gICAgfSxcclxuXHJcbiAgICBtZW5fdXNlcl9pZFNlbnQ6XHJcbiAgICB7XHJcbiAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICB9LFxyXG5cclxuICAgIG1lbl91c2VyX2lkUmVjOlxyXG4gICAge1xyXG4gICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgbWVuX3RleHRvOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfVxyXG4gICAgXHJcblxyXG4gIFxyXG4gICAgXHJcbn0pO1xyXG5tb2R1bGUuZXhwb3J0cyA9IE1lbnNhamU7Il19",
    "map": {
      "version": 3,
      "sources": [
        "Mensaje.js"
      ],
      "names": [
        "Mensaje",
        "sequelize",
        "define",
        "men_id",
        "type",
        "Sequelize",
        "UUID",
        "defaultValue",
        "UUIDV4",
        "primaryKey",
        "men_user_idSent",
        "INTEGER",
        "men_user_idRec",
        "men_texto",
        "TEXT",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAEA,IAAMA,OAAO,GAAGC,oBAAUC,MAAV,CAAiB,UAAjB,EAA6B;AAEzCC,EAAAA,MAAM,EAAC;AACJC,IAAAA,IAAI,EAAEC,sBAAUC,IADZ;AAEJC,IAAAA,YAAY,EAAEF,sBAAUG,MAFpB;AAGJC,IAAAA,UAAU,EAAE;AAHR,GAFkC;AAQzCC,EAAAA,eAAe,EACf;AACEN,IAAAA,IAAI,EAAEC,sBAAUM;AADlB,GATyC;AAazCC,EAAAA,cAAc,EACd;AACER,IAAAA,IAAI,EAAEC,sBAAUM;AADlB,GAdyC;AAmBzCE,EAAAA,SAAS,EAAC;AACNT,IAAAA,IAAI,EAAEC,sBAAUS;AADV;AAnB+B,CAA7B,CAAhB;;AA2BAC,MAAM,CAACC,OAAP,GAAiBhB,OAAjB",
      "sourceRoot": "C:\\Users\\Diego\\Documents\\GitHub\\Serv\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../database/database';\r\n\r\nconst Mensaje = sequelize.define('mensajes', {\r\n  \r\n    men_id:{\r\n       type: Sequelize.UUID,\r\n       defaultValue: Sequelize.UUIDV4,\r\n       primaryKey: true\r\n    },\r\n\r\n    men_user_idSent:\r\n    {\r\n      type: Sequelize.INTEGER\r\n    },\r\n\r\n    men_user_idRec:\r\n    {\r\n      type: Sequelize.INTEGER\r\n    },\r\n\r\n\r\n    men_texto:{\r\n        type: Sequelize.TEXT\r\n    }\r\n    \r\n\r\n  \r\n    \r\n});\r\nmodule.exports = Mensaje;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570042567837
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _server = _interopRequireDefault(require(\"./server\"));\n\nrequire(\"@babel/polyfill\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction main() {\n  return _main.apply(this, arguments);\n}\n\nfunction _main() {\n  _main = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _server[\"default\"].listen(9999);\n\n          case 2:\n            console.log('Escuchando en puerto 9999');\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _main.apply(this, arguments);\n}\n\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1haW4iLCJhcHAiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUNBOztBQUNBOzs7Ozs7OztTQUVlQSxJOzs7Ozs7OzBCQUFmO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNVQyxtQkFBSUMsTUFBSixDQUFXLElBQVgsQ0FEVjs7QUFBQTtBQUVJQyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwyQkFBWjs7QUFGSjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O0FBS0FKLElBQUkiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxHaW92YVxcRGVza3RvcFxcUmVwb1RhbGxlcjJcXHNlcnZlcjJcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBJbmljaW8gZGUgbGEgQXBsaWNhY2lvbiAgKi9cclxuaW1wb3J0IGFwcCBmcm9tICcuL3NlcnZlcidcclxuaW1wb3J0ICdAYmFiZWwvcG9seWZpbGwnXHJcblxyXG5hc3luYyBmdW5jdGlvbiBtYWluKCl7XHJcbiAgICBhd2FpdCBhcHAubGlzdGVuKDk5OTkpO1xyXG4gICAgY29uc29sZS5sb2coJ0VzY3VjaGFuZG8gZW4gcHVlcnRvIDk5OTknKVxyXG59XHJcblxyXG5tYWluKCkiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "main",
        "app",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AACA;;AACA;;;;;;;;SAEeA,I;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUC,mBAAIC,MAAJ,CAAW,IAAX,CADV;;AAAA;AAEIC,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKAJ,IAAI",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src",
      "sourcesContent": [
        "/** Inicio de la Aplicacion  */\r\nimport app from './server'\r\nimport '@babel/polyfill'\r\n\r\nasync function main(){\r\n    await app.listen(9999);\r\n    console.log('Escuchando en puerto 9999')\r\n}\r\n\r\nmain()"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415571
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _usuarios = _interopRequireDefault(require(\"./rutas/usuarios\"));\n\nvar _productos = _interopRequireDefault(require(\"./rutas/productos\"));\n\nvar _pedidos = _interopRequireDefault(require(\"./rutas/pedidos\"));\n\nvar _comercios = _interopRequireDefault(require(\"./rutas/comercios\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/** Configuracion del servidor */\n//import bodyParser from 'body-parser';\n\n/** Inicializacion */\nvar app = (0, _express[\"default\"])();\n/** Middlewares */\n//app.use(express.bodyParser())\n\napp.use((0, _morgan[\"default\"])('dev'));\napp.use((0, _express.json)()); //.get('/', getAll );\n\n/** Rutas */\n\napp.use('/api/user', _usuarios[\"default\"]);\napp.use('/api/producto', _productos[\"default\"]);\napp.use('/api/pedido', _pedidos[\"default\"]);\napp.use('/api/comercio', _comercios[\"default\"]); //app.use('/api/mensajes',rutasMensajes)\n\n/** Exporto */\n\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJ1c2UiLCJydXRhc1VzdWFyaW8iLCJydXRhc1Byb2R1Y3RvcyIsInJ1dGFzUGVkaWRvcyIsInJ1dGFzQ29tZXJjaW9zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBS0E7O0FBR0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBWkE7QUFRQTs7QUFPQTtBQUNBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUlBO0FBQ0E7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFTLHdCQUFPLEtBQVAsQ0FBVDtBQUNBRCxHQUFHLENBQUNDLEdBQUosQ0FBUyxvQkFBVCxFLENBS0E7O0FBR0E7O0FBQ0FELEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFdBQVIsRUFBb0JDLG9CQUFwQjtBQUNBRixHQUFHLENBQUNDLEdBQUosQ0FBUSxlQUFSLEVBQXdCRSxxQkFBeEI7QUFDQUgsR0FBRyxDQUFDQyxHQUFKLENBQVEsYUFBUixFQUFzQkcsbUJBQXRCO0FBQ0FKLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGVBQVIsRUFBd0JJLHFCQUF4QixFLENBQ0E7O0FBSUE7O2VBQ2VMLEciLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxHaW92YVxcRGVza3RvcFxcUmVwb1RhbGxlcjJcXHNlcnZlcjJcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBDb25maWd1cmFjaW9uIGRlbCBzZXJ2aWRvciAqL1xyXG5pbXBvcnQgZXhwcmVzcyAsIHsganNvbiB9IGZyb20gJ2V4cHJlc3MnXHJcbi8vaW1wb3J0IGh0dHAgZnJvbSAnaHR0cCdcclxuLy9pbXBvcnQgc29ja2V0ICAgIGZyb20gJ3NvY2tldC5pbydcclxuXHJcblxyXG5pbXBvcnQgbW9yZ2FuIGZyb20gJ21vcmdhbidcclxuXHJcbi8vaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xyXG5pbXBvcnQgcnV0YXNVc3VhcmlvIGZyb20gJy4vcnV0YXMvdXN1YXJpb3MnXHJcbmltcG9ydCBydXRhc1Byb2R1Y3RvcyBmcm9tICcuL3J1dGFzL3Byb2R1Y3RvcydcclxuaW1wb3J0IHJ1dGFzUGVkaWRvcyBmcm9tICcuL3J1dGFzL3BlZGlkb3MnXHJcbmltcG9ydCBydXRhc0NvbWVyY2lvcyBmcm9tICcuL3J1dGFzL2NvbWVyY2lvcydcclxuXHJcblxyXG4vKiogSW5pY2lhbGl6YWNpb24gKi9cclxuY29uc3QgYXBwID0gZXhwcmVzcygpXHJcblxyXG5cclxuXHJcbi8qKiBNaWRkbGV3YXJlcyAqL1xyXG4vL2FwcC51c2UoZXhwcmVzcy5ib2R5UGFyc2VyKCkpXHJcbmFwcC51c2UoIG1vcmdhbignZGV2JykgKVxyXG5hcHAudXNlKCBqc29uKCkgKVxyXG5cclxuXHJcblxyXG5cclxuLy8uZ2V0KCcvJywgZ2V0QWxsICk7XHJcblxyXG5cclxuLyoqIFJ1dGFzICovXHJcbmFwcC51c2UoJy9hcGkvdXNlcicscnV0YXNVc3VhcmlvKVxyXG5hcHAudXNlKCcvYXBpL3Byb2R1Y3RvJyxydXRhc1Byb2R1Y3RvcylcclxuYXBwLnVzZSgnL2FwaS9wZWRpZG8nLHJ1dGFzUGVkaWRvcylcclxuYXBwLnVzZSgnL2FwaS9jb21lcmNpbycscnV0YXNDb21lcmNpb3MpXHJcbi8vYXBwLnVzZSgnL2FwaS9tZW5zYWplcycscnV0YXNNZW5zYWplcylcclxuXHJcblxyXG5cclxuLyoqIEV4cG9ydG8gKi9cclxuZXhwb3J0IGRlZmF1bHQgYXBwIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "rutasUsuario",
        "rutasProductos",
        "rutasPedidos",
        "rutasComercios"
      ],
      "mappings": ";;;;;;;AACA;;AAKA;;AAGA;;AACA;;AACA;;AACA;;;;;;;;AAZA;AAQA;;AAOA;AACA,IAAMA,GAAG,GAAG,0BAAZ;AAIA;AACA;;AACAA,GAAG,CAACC,GAAJ,CAAS,wBAAO,KAAP,CAAT;AACAD,GAAG,CAACC,GAAJ,CAAS,oBAAT,E,CAKA;;AAGA;;AACAD,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAoBC,oBAApB;AACAF,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAwBE,qBAAxB;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAsBG,mBAAtB;AACAJ,GAAG,CAACC,GAAJ,CAAQ,eAAR,EAAwBI,qBAAxB,E,CACA;;AAIA;;eACeL,G",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src",
      "sourcesContent": [
        "/** Configuracion del servidor */\r\nimport express , { json } from 'express'\r\n//import http from 'http'\r\n//import socket    from 'socket.io'\r\n\r\n\r\nimport morgan from 'morgan'\r\n\r\n//import bodyParser from 'body-parser';\r\nimport rutasUsuario from './rutas/usuarios'\r\nimport rutasProductos from './rutas/productos'\r\nimport rutasPedidos from './rutas/pedidos'\r\nimport rutasComercios from './rutas/comercios'\r\n\r\n\r\n/** Inicializacion */\r\nconst app = express()\r\n\r\n\r\n\r\n/** Middlewares */\r\n//app.use(express.bodyParser())\r\napp.use( morgan('dev') )\r\napp.use( json() )\r\n\r\n\r\n\r\n\r\n//.get('/', getAll );\r\n\r\n\r\n/** Rutas */\r\napp.use('/api/user',rutasUsuario)\r\napp.use('/api/producto',rutasProductos)\r\napp.use('/api/pedido',rutasPedidos)\r\napp.use('/api/comercio',rutasComercios)\r\n//app.use('/api/mensajes',rutasMensajes)\r\n\r\n\r\n\r\n/** Exporto */\r\nexport default app"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415606
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\rutas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\rutas\\\\usuarios.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas\\usuarios.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas\\usuarios.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas\\usuarios.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas",
        "sourceFileName": "usuarios.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _userController = require(\"../controllers/userController\");\n\n/** Rutas de test */\nvar router = (0, _express.Router)();\n/** Controladores */\n\n/** Rutas */\n\n/** Obtener todos los usuarios */\nrouter.get('/', _userController.getAll);\n/** Obtener usuario por id */\n\nrouter.get('/:id', _userController.getOne);\n/** registrar usuarios */\n\nrouter.post('/register', _userController.register);\n/** login usuarios */\n\nrouter.post('/login', _userController.login);\n/** consultar perfil */\n\nrouter.get('/consulta', _userController.ensureToken, _userController.consultaPerfil);\n/** consultar usuarios deliverys de pedidos por userid */\n\nrouter.get('/getDeliverysPorUsuario/:iduser', _userController.ensureToken, _userController.chequeoToken, _userController.getDeliverysPorUsuario);\n/** consultar usuarios deliverys de pedidos por deliveryid */\n\nrouter.get('/getUsuariosPorDelivery/:iddelivery', _userController.ensureToken, _userController.chequeoToken, _userController.getUsuariosPorDelivery);\n/** Exporto */\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzdWFyaW9zLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImdldCIsImdldEFsbCIsImdldE9uZSIsInBvc3QiLCJyZWdpc3RlciIsImxvZ2luIiwiZW5zdXJlVG9rZW4iLCJjb25zdWx0YVBlcmZpbCIsImNoZXF1ZW9Ub2tlbiIsImdldERlbGl2ZXJ5c1BvclVzdWFyaW8iLCJnZXRVc3Vhcmlvc1BvckRlbGl2ZXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBR0E7O0FBTUE7O0FBUkc7QUFJSCxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFSTs7QUFjQTs7QUFFSjtBQUNBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxzQkFBaEI7QUFFQTs7QUFDQUYsTUFBTSxDQUFDQyxHQUFQLENBQVcsTUFBWCxFQUFtQkUsc0JBQW5CO0FBRUE7O0FBQ0FILE1BQU0sQ0FBQ0ksSUFBUCxDQUFZLFdBQVosRUFBeUJDLHdCQUF6QjtBQUVBOztBQUNBTCxNQUFNLENBQUNJLElBQVAsQ0FBWSxRQUFaLEVBQXNCRSxxQkFBdEI7QUFFQTs7QUFDQU4sTUFBTSxDQUFDQyxHQUFQLENBQVcsV0FBWCxFQUF1Qk0sMkJBQXZCLEVBQW1DQyw4QkFBbkM7QUFHQTs7QUFDQVIsTUFBTSxDQUFDQyxHQUFQLENBQVcsaUNBQVgsRUFBNkNNLDJCQUE3QyxFQUF5REUsNEJBQXpELEVBQXVFQyxzQ0FBdkU7QUFFQTs7QUFDQVYsTUFBTSxDQUFDQyxHQUFQLENBQVcscUNBQVgsRUFBaURNLDJCQUFqRCxFQUE2REUsNEJBQTdELEVBQTJFRSxzQ0FBM0U7QUFJQTs7ZUFFZVgsTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEdpb3ZhXFxEZXNrdG9wXFxSZXBvVGFsbGVyMlxcc2VydmVyMlxcc3JjXFxydXRhcyIsInNvdXJjZXNDb250ZW50IjpbIiAgIFxyXG4gICAvKiogUnV0YXMgZGUgdGVzdCAqL1xyXG5cclxuaW1wb3J0IHtSb3V0ZXJ9IGZyb20gJ2V4cHJlc3MnXHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKVxyXG5cclxuICAgIC8qKiBDb250cm9sYWRvcmVzICovXHJcblxyXG5pbXBvcnQgeyAgXHJcbiAgICBnZXRBbGwsXHJcbiAgICByZWdpc3RlcixcclxuICAgIGxvZ2luLFxyXG4gICAgY29uc3VsdGFQZXJmaWwsXHJcbiAgICBlbnN1cmVUb2tlbixcclxuICAgIGdldE9uZSxcclxuICAgIGNoZXF1ZW9Ub2tlbixcclxuICAgIGdldERlbGl2ZXJ5c1BvclVzdWFyaW8sXHJcbiAgICBnZXRVc3Vhcmlvc1BvckRlbGl2ZXJ5XHJcbiAgICB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXJDb250cm9sbGVyJztcclxuXHJcbiAgICAvKiogUnV0YXMgKi9cclxuXHJcbi8qKiBPYnRlbmVyIHRvZG9zIGxvcyB1c3VhcmlvcyAqL1xyXG5yb3V0ZXIuZ2V0KCcvJywgZ2V0QWxsICk7XHJcblxyXG4vKiogT2J0ZW5lciB1c3VhcmlvIHBvciBpZCAqL1xyXG5yb3V0ZXIuZ2V0KCcvOmlkJywgZ2V0T25lICk7XHJcblxyXG4vKiogcmVnaXN0cmFyIHVzdWFyaW9zICovXHJcbnJvdXRlci5wb3N0KCcvcmVnaXN0ZXInLCByZWdpc3RlciApO1xyXG5cclxuLyoqIGxvZ2luIHVzdWFyaW9zICovXHJcbnJvdXRlci5wb3N0KCcvbG9naW4nLCBsb2dpbiApO1xyXG5cclxuLyoqIGNvbnN1bHRhciBwZXJmaWwgKi9cclxucm91dGVyLmdldCgnL2NvbnN1bHRhJyxlbnN1cmVUb2tlbixjb25zdWx0YVBlcmZpbCk7XHJcblxyXG5cclxuLyoqIGNvbnN1bHRhciB1c3VhcmlvcyBkZWxpdmVyeXMgZGUgcGVkaWRvcyBwb3IgdXNlcmlkICovXHJcbnJvdXRlci5nZXQoJy9nZXREZWxpdmVyeXNQb3JVc3VhcmlvLzppZHVzZXInLGVuc3VyZVRva2VuLGNoZXF1ZW9Ub2tlbiwgZ2V0RGVsaXZlcnlzUG9yVXN1YXJpbyk7XHJcblxyXG4vKiogY29uc3VsdGFyIHVzdWFyaW9zIGRlbGl2ZXJ5cyBkZSBwZWRpZG9zIHBvciBkZWxpdmVyeWlkICovXHJcbnJvdXRlci5nZXQoJy9nZXRVc3Vhcmlvc1BvckRlbGl2ZXJ5LzppZGRlbGl2ZXJ5JyxlbnN1cmVUb2tlbixjaGVxdWVvVG9rZW4sIGdldFVzdWFyaW9zUG9yRGVsaXZlcnkpO1xyXG5cclxuXHJcblxyXG4vKiogRXhwb3J0byAqL1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "usuarios.js"
      ],
      "names": [
        "router",
        "get",
        "getAll",
        "getOne",
        "post",
        "register",
        "login",
        "ensureToken",
        "consultaPerfil",
        "chequeoToken",
        "getDeliverysPorUsuario",
        "getUsuariosPorDelivery"
      ],
      "mappings": ";;;;;;;AAGA;;AAMA;;AARG;AAIH,IAAMA,MAAM,GAAG,sBAAf;AAEI;;AAcA;;AAEJ;AACAA,MAAM,CAACC,GAAP,CAAW,GAAX,EAAgBC,sBAAhB;AAEA;;AACAF,MAAM,CAACC,GAAP,CAAW,MAAX,EAAmBE,sBAAnB;AAEA;;AACAH,MAAM,CAACI,IAAP,CAAY,WAAZ,EAAyBC,wBAAzB;AAEA;;AACAL,MAAM,CAACI,IAAP,CAAY,QAAZ,EAAsBE,qBAAtB;AAEA;;AACAN,MAAM,CAACC,GAAP,CAAW,WAAX,EAAuBM,2BAAvB,EAAmCC,8BAAnC;AAGA;;AACAR,MAAM,CAACC,GAAP,CAAW,iCAAX,EAA6CM,2BAA7C,EAAyDE,4BAAzD,EAAuEC,sCAAvE;AAEA;;AACAV,MAAM,CAACC,GAAP,CAAW,qCAAX,EAAiDM,2BAAjD,EAA6DE,4BAA7D,EAA2EE,sCAA3E;AAIA;;eAEeX,M",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas",
      "sourcesContent": [
        "   \r\n   /** Rutas de test */\r\n\r\nimport {Router} from 'express'\r\n\r\nconst router = Router()\r\n\r\n    /** Controladores */\r\n\r\nimport {  \r\n    getAll,\r\n    register,\r\n    login,\r\n    consultaPerfil,\r\n    ensureToken,\r\n    getOne,\r\n    chequeoToken,\r\n    getDeliverysPorUsuario,\r\n    getUsuariosPorDelivery\r\n    } from '../controllers/userController';\r\n\r\n    /** Rutas */\r\n\r\n/** Obtener todos los usuarios */\r\nrouter.get('/', getAll );\r\n\r\n/** Obtener usuario por id */\r\nrouter.get('/:id', getOne );\r\n\r\n/** registrar usuarios */\r\nrouter.post('/register', register );\r\n\r\n/** login usuarios */\r\nrouter.post('/login', login );\r\n\r\n/** consultar perfil */\r\nrouter.get('/consulta',ensureToken,consultaPerfil);\r\n\r\n\r\n/** consultar usuarios deliverys de pedidos por userid */\r\nrouter.get('/getDeliverysPorUsuario/:iduser',ensureToken,chequeoToken, getDeliverysPorUsuario);\r\n\r\n/** consultar usuarios deliverys de pedidos por deliveryid */\r\nrouter.get('/getUsuariosPorDelivery/:iddelivery',ensureToken,chequeoToken, getUsuariosPorDelivery);\r\n\r\n\r\n\r\n/** Exporto */\r\n\r\nexport default router"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415605
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\controllers\\\\userController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers\\userController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers\\userController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers\\userController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers",
        "sourceFileName": "userController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAll = getAll;\nexports.register = register;\nexports.login = login;\nexports.consultaPerfil = consultaPerfil;\nexports.chequeoToken = chequeoToken;\nexports.ensureToken = ensureToken;\nexports.getOne = getOne;\nexports.getDeliverysPorUsuario = getDeliverysPorUsuario;\nexports.getUsuariosPorDelivery = getUsuariosPorDelivery;\n\nvar _User = _interopRequireDefault(require(\"../models/User\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/** Obtener todos los Usuarios */\nfunction getAll(_x, _x2) {\n  return _getAll.apply(this, arguments);\n}\n/** Crear nuevo Usuario */\n\n\nfunction _getAll() {\n  _getAll = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var tests;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _User[\"default\"].findAll();\n\n          case 3:\n            tests = _context.sent;\n\n            if (tests) {\n              res.json({\n                message: 'Todos los usuarios registrados son:',\n                data: tests\n              }); //res.json(['John', 'Betty', 'Hal']);\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'Something goes wrong on getAll patch',\n              data: {\n                error: _context.t0\n              }\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _getAll.apply(this, arguments);\n}\n\nfunction register(_x3, _x4) {\n  return _register.apply(this, arguments);\n}\n/** Login Usuarios */\n\n\nfunction _register() {\n  _register = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, nombre, mail, pass, nuevoUsuario;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body = req.body, nombre = _req$body.nombre, mail = _req$body.mail, pass = _req$body.pass;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _User[\"default\"].create({\n              nombre: nombre,\n              mail: mail,\n              pass: pass\n            }, {\n              fields: ['nombre', 'mail', 'pass']\n            });\n\n          case 4:\n            nuevoUsuario = _context2.sent;\n\n            if (!nuevoUsuario) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.json({\n              message: 'Usuario creado.',\n              data: nuevoUsuario\n            }));\n\n          case 7:\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](1);\n            res.status(500).json({\n              message: 'Ocurrio un Error al crear usuario',\n              data: {\n                nombre: nombre,\n                mail: mail,\n                pass: pass\n              },\n              error: _context2.t0\n            });\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 9]]);\n  }));\n  return _register.apply(this, arguments);\n}\n\nfunction login(_x5, _x6) {\n  return _login.apply(this, arguments);\n}\n/** Rutas protegidas */\n\n\nfunction _login() {\n  _login = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, mail, pass, userFound, token;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body2 = req.body, mail = _req$body2.mail, pass = _req$body2.pass;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _User[\"default\"].findOne({\n              where: {\n                mail: mail,\n                pass: pass\n              },\n              attributes: ['id', 'nombre', 'mail', 'pass']\n            });\n\n          case 4:\n            userFound = _context3.sent;\n\n            if (userFound) {\n              token = _jsonwebtoken[\"default\"].sign({\n                userFound: userFound\n              }, 'key');\n              res.json({\n                message: 'Login Success.',\n                data: userFound,\n                token: token\n              });\n            } else {\n              res.json({\n                message: 'No se encuentra registrado el usuario.'\n              });\n            }\n\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.status(500).json({\n              message: 'Something goes wrong222',\n              data: _context3.t0\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 8]]);\n  }));\n  return _login.apply(this, arguments);\n}\n\nfunction consultaPerfil(_x7, _x8) {\n  return _consultaPerfil.apply(this, arguments);\n}\n\nfunction _consultaPerfil() {\n  _consultaPerfil = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _jsonwebtoken[\"default\"].verify(req.token, 'key', function (err, data) {\n              if (err) {\n                res.json({\n                  message: 'Acceso Denegado.'\n                });\n              } else {\n                res.json({\n                  message: 'Acceso a consulta de Perfil',\n                  data: data //Son los datos del que se esta logeando\n\n                });\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _consultaPerfil.apply(this, arguments);\n}\n\nfunction chequeoToken(_x9, _x10, _x11) {\n  return _chequeoToken.apply(this, arguments);\n}\n/** Verificacion token */\n\n\nfunction _chequeoToken() {\n  _chequeoToken = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res, next) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _jsonwebtoken[\"default\"].verify(req.token, 'key', function (err, data) {\n              if (err) {\n                res.json({\n                  message: 'Acceso Denegado.'\n                });\n              } else {\n                next();\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _chequeoToken.apply(this, arguments);\n}\n\nfunction ensureToken(_x12, _x13, _x14) {\n  return _ensureToken.apply(this, arguments);\n}\n/** Obtener usuario por id */\n\n\nfunction _ensureToken() {\n  _ensureToken = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(req, res, next) {\n    var bearerHeader, bearer, bearerToken;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            bearerHeader = req.headers['authorization'];\n\n            if (typeof bearerHeader !== 'undefined') {\n              bearer = bearerHeader.split(\" \");\n              bearerToken = bearer[1];\n              req.token = bearerToken;\n              next();\n            } else {\n              res.json({\n                message: 'Token null error'\n              });\n            }\n\n          case 2:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _ensureToken.apply(this, arguments);\n}\n\nfunction getOne(_x15, _x16, _x17) {\n  return _getOne.apply(this, arguments);\n}\n/*todos los usuarios delivery para chatear de un usuario en pedido*/\n\n\nfunction _getOne() {\n  _getOne = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee7(req, res, next) {\n    var id, userFound;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            id = req.params.id;\n            _context7.prev = 1;\n            _context7.next = 4;\n            return _User[\"default\"].findOne({\n              where: {\n                id: id\n              },\n              attributes: ['id', 'nombre', 'mail', 'pass']\n            });\n\n          case 4:\n            userFound = _context7.sent;\n\n            if (userFound) {\n              res.json(userFound);\n            } else {\n              res.json({\n                message: 'No se encuentra registrado el usuario.'\n              });\n            }\n\n            _context7.next = 11;\n            break;\n\n          case 8:\n            _context7.prev = 8;\n            _context7.t0 = _context7[\"catch\"](1);\n            res.status(500).json({\n              message: 'Something goes wrong ',\n              data: {\n                error: _context7.t0\n              }\n            });\n\n          case 11:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[1, 8]]);\n  }));\n  return _getOne.apply(this, arguments);\n}\n\nfunction getDeliverysPorUsuario(_x18, _x19) {\n  return _getDeliverysPorUsuario.apply(this, arguments);\n}\n/*todos los usuarios para chatear de un pedido de un delivery*/\n\n\nfunction _getDeliverysPorUsuario() {\n  _getDeliverysPorUsuario = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee8(req, res) {\n    var iduser, sqlquery, usuarios;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            iduser = req.params.iduser;\n            _context8.prev = 1;\n            sqlquery = 'select Distinct(users.*) from users, pedidos where pedidos.ped_deliveryid=users.id and pedidos.ped_userid='.concat(iduser).concat(' ORDER BY users.nombre '); //res.json(sqlquery);\n\n            _context8.next = 5;\n            return _database.sequelize.query(sqlquery, {\n              type: _database.sequelize.QueryTypes.SELECT\n            });\n\n          case 5:\n            usuarios = _context8.sent;\n\n            if (usuarios) {\n              res.json({\n                message: 'todos los usuarios delivery para chatear',\n                usuarios: usuarios\n              });\n            } else {\n              res.status(500).json({\n                message: 'No se encontro registros.'\n              });\n            }\n\n            _context8.next = 12;\n            break;\n\n          case 9:\n            _context8.prev = 9;\n            _context8.t0 = _context8[\"catch\"](1);\n            res.status(500).json({\n              message: 'hubo un error',\n              data: {\n                error: _context8.t0\n              }\n            });\n\n          case 12:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[1, 9]]);\n  }));\n  return _getDeliverysPorUsuario.apply(this, arguments);\n}\n\nfunction getUsuariosPorDelivery(_x20, _x21) {\n  return _getUsuariosPorDelivery.apply(this, arguments);\n}\n\nfunction _getUsuariosPorDelivery() {\n  _getUsuariosPorDelivery = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee9(req, res) {\n    var iddelivery, sqlquery, usuarios;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            iddelivery = req.params.iddelivery;\n            _context9.prev = 1;\n            sqlquery = 'select Distinct(users.*) from users, pedidos where pedidos.ped_userid=users.id and pedidos.ped_deliveryid='.concat(iddelivery).concat(' ORDER BY users.nombre ');\n            _context9.next = 5;\n            return _database.sequelize.query(sqlquery, {\n              type: _database.sequelize.QueryTypes.SELECT\n            });\n\n          case 5:\n            usuarios = _context9.sent;\n\n            if (usuarios) {\n              res.json({\n                message: 'todos los usuarios para chatear',\n                usuarios: usuarios\n              });\n            } else {\n              res.status(500).json({\n                message: 'No se encontro registros.'\n              });\n            }\n\n            _context9.next = 12;\n            break;\n\n          case 9:\n            _context9.prev = 9;\n            _context9.t0 = _context9[\"catch\"](1);\n            res.status(500).json({\n              message: 'hubo un error',\n              data: {\n                error: _context9.t0\n              }\n            });\n\n          case 12:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[1, 9]]);\n  }));\n  return _getUsuariosPorDelivery.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "userController.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Test",
        "findAll",
        "tests",
        "json",
        "message",
        "data",
        "status",
        "error",
        "register",
        "body",
        "nombre",
        "mail",
        "pass",
        "create",
        "fields",
        "nuevoUsuario",
        "login",
        "findOne",
        "where",
        "attributes",
        "userFound",
        "token",
        "jwt",
        "sign",
        "consultaPerfil",
        "verify",
        "err",
        "chequeoToken",
        "next",
        "ensureToken",
        "bearerHeader",
        "headers",
        "bearer",
        "split",
        "bearerToken",
        "getOne",
        "id",
        "params",
        "getDeliverysPorUsuario",
        "iduser",
        "sqlquery",
        "concat",
        "sequelize",
        "query",
        "type",
        "QueryTypes",
        "SELECT",
        "usuarios",
        "getUsuariosPorDelivery",
        "iddelivery"
      ],
      "mappings": ";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAGA;SACsBA,M;;;AA2BtB;;;;;;0BA3BO,iBAAsBC,GAAtB,EAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIqBC,iBAAKC,OAAL,EAJrB;;AAAA;AAIOC,YAAAA,KAJP;;AAMC,gBAAGA,KAAH,EAAS;AAENH,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAEJC,gBAAAA,OAAO,EAAC,qCAFJ;AAGJC,gBAAAA,IAAI,EAACH;AAHD,eAAT,EAFM,CASL;AACH;;AAhBF;AAAA;;AAAA;AAAA;AAAA;AAoBGH,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,sCADS;AAEjBC,cAAAA,IAAI,EAAC;AAACE,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA4BeC,Q;;;AAwCtB;;;;;;0BAxCO,kBAAwBV,GAAxB,EAA4BC,GAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAE0BD,GAAG,CAACW,IAF9B,EAEKC,MAFL,aAEKA,MAFL,EAEYC,IAFZ,aAEYA,IAFZ,EAEiBC,IAFjB,aAEiBA,IAFjB;AAAA;AAAA;AAAA,mBAM0BZ,iBAAKa,MAAL,CAAY;AAEjCH,cAAAA,MAAM,EAAEA,MAFyB;AAGjCC,cAAAA,IAAI,EAACA,IAH4B;AAIjCC,cAAAA,IAAI,EAACA;AAJ4B,aAAZ,EAOrB;AACIE,cAAAA,MAAM,EAAC,CAEH,QAFG,EAGH,MAHG,EAIH,MAJG;AADX,aAPqB,CAN1B;;AAAA;AAMKC,YAAAA,YANL;;AAAA,iBAuBIA,YAvBJ;AAAA;AAAA;AAAA;;AAAA,8CAyBYhB,GAAG,CAACI,IAAJ,CAAS;AACZC,cAAAA,OAAO,EAAE,iBADG;AAEZC,cAAAA,IAAI,EAAEU;AAFM,aAAT,CAzBZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAgCChB,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,mCADS;AAEjBC,cAAAA,IAAI,EAAC;AAACK,gBAAAA,MAAM,EAANA,MAAD;AAAQC,gBAAAA,IAAI,EAAJA,IAAR;AAAaC,gBAAAA,IAAI,EAAJA;AAAb,eAFY;AAGjBL,cAAAA,KAAK;AAHY,aAArB;;AAhCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAyCeS,K;;;AAqCtB;;;;;;0BArCO,kBAAqBlB,GAArB,EAAyBC,GAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBD,GAAG,CAACW,IAFvB,EAEKE,IAFL,cAEKA,IAFL,EAEUC,IAFV,cAEUA,IAFV;AAAA;AAAA;AAAA,mBAMyBZ,iBAAKiB,OAAL,CAAa;AACjCC,cAAAA,KAAK,EAAE;AACHP,gBAAAA,IAAI,EAACA,IADF;AAEHC,gBAAAA,IAAI,EAACA;AAFF,eAD0B;AAKjCO,cAAAA,UAAU,EAAE,CAAC,IAAD,EAAM,QAAN,EAAe,MAAf,EAAsB,MAAtB;AALqB,aAAb,CANzB;;AAAA;AAMOC,YAAAA,SANP;;AAcC,gBAAGA,SAAH,EAAa;AAEJC,cAAAA,KAFI,GAEIC,yBAAIC,IAAJ,CAAS;AAACH,gBAAAA,SAAS,EAATA;AAAD,eAAT,EAAsB,KAAtB,CAFJ;AAITrB,cAAAA,GAAG,CAACI,IAAJ,CAAS;AACLC,gBAAAA,OAAO,EAAC,gBADH;AAELC,gBAAAA,IAAI,EAACe,SAFA;AAGLC,gBAAAA,KAAK,EAAGA;AAHH,eAAT;AAMH,aAVD,MAUK;AACDtB,cAAAA,GAAG,CAACI,IAAJ,CAAS;AACLC,gBAAAA,OAAO,EAAC;AADH,eAAT;AAGH;;AA5BF;AAAA;;AAAA;AAAA;AAAA;AA+BCL,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,yBADS;AAEjBC,cAAAA,IAAI;AAFa,aAArB;;AA/BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAsCemB,c;;;;;;;0BAAf,kBAA8B1B,GAA9B,EAAkCC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAEHuB,qCAAIG,MAAJ,CAAW3B,GAAG,CAACuB,KAAf,EAAsB,KAAtB,EAA8B,UAACK,GAAD,EAAKrB,IAAL,EAAY;AACtC,kBAAGqB,GAAH,EAAO;AACH3B,gBAAAA,GAAG,CAACI,IAAJ,CAAS;AACLC,kBAAAA,OAAO,EAAC;AADH,iBAAT;AAGH,eAJD,MAIK;AACOL,gBAAAA,GAAG,CAACI,IAAJ,CAAS;AACbC,kBAAAA,OAAO,EAAC,6BADK;AAEbC,kBAAAA,IAAI,EAACA,IAFQ,CAEH;;AAFG,iBAAT;AAIX;AACJ,aAXD;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAgBesB,Y;;;AActB;;;;;;0BAdO,kBAA4B7B,GAA5B,EAAgCC,GAAhC,EAAoC6B,IAApC;AAAA;AAAA;AAAA;AAAA;AAEHN,qCAAIG,MAAJ,CAAW3B,GAAG,CAACuB,KAAf,EAAsB,KAAtB,EAA8B,UAACK,GAAD,EAAKrB,IAAL,EAAY;AACtC,kBAAGqB,GAAH,EAAO;AACH3B,gBAAAA,GAAG,CAACI,IAAJ,CAAS;AACLC,kBAAAA,OAAO,EAAC;AADH,iBAAT;AAGH,eAJD,MAIK;AACDwB,gBAAAA,IAAI;AACP;AACJ,aARD;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAeeC,W;;;AAkBtB;;;;;;0BAlBO,kBAA2B/B,GAA3B,EAA+BC,GAA/B,EAAmC6B,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEGE,YAAAA,YAFH,GAEkBhC,GAAG,CAACiC,OAAJ,CAAY,eAAZ,CAFlB;;AAIH,gBAAI,OAAOD,YAAP,KAAwB,WAA5B,EAAyC;AAE/BE,cAAAA,MAF+B,GAEtBF,YAAY,CAACG,KAAb,CAAmB,GAAnB,CAFsB;AAG/BC,cAAAA,WAH+B,GAGjBF,MAAM,CAAC,CAAD,CAHW;AAIrClC,cAAAA,GAAG,CAACuB,KAAJ,GAAYa,WAAZ;AACAN,cAAAA,IAAI;AAEP,aAPD,MAOM;AACF7B,cAAAA,GAAG,CAACI,IAAJ,CAAS;AACLC,gBAAAA,OAAO,EAAC;AADH,eAAT;AAGH;;AAfE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAmBe+B,M;;;AAgCtB;;;;;;0BAhCO,kBAAsBrC,GAAtB,EAA0BC,GAA1B,EAA8B6B,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAGIQ,YAAAA,EAHJ,GAGWtC,GAAG,CAACuC,MAHf,CAGID,EAHJ;AAAA;AAAA;AAAA,mBAOyBpC,iBAAKiB,OAAL,CAAa;AACjCC,cAAAA,KAAK,EAAE;AACHkB,gBAAAA,EAAE,EAACA;AADA,eAD0B;AAIjCjB,cAAAA,UAAU,EAAE,CAAC,IAAD,EAAM,QAAN,EAAe,MAAf,EAAsB,MAAtB;AAJqB,aAAb,CAPzB;;AAAA;AAOOC,YAAAA,SAPP;;AAcC,gBAAGA,SAAH,EAAa;AAETrB,cAAAA,GAAG,CAACI,IAAJ,CAASiB,SAAT;AAEH,aAJD,MAIK;AACDrB,cAAAA,GAAG,CAACI,IAAJ,CAAS;AACLC,gBAAAA,OAAO,EAAC;AADH,eAAT;AAGH;;AAtBF;AAAA;;AAAA;AAAA;AAAA;AAyBCL,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,uBADS;AAEjBC,cAAAA,IAAI,EAAC;AAACE,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AAzBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAiCe+B,sB;;;AAkCtB;;;;;;0BAlCO,kBAAsCxC,GAAtC,EAA0CC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFwC,YAAAA,MAFE,GAEQzC,GAAG,CAACuC,MAFZ,CAEFE,MAFE;AAAA;AAKHC,YAAAA,QALG,GAKO,6GAA6GC,MAA7G,CAAoHF,MAApH,EAA4HE,MAA5H,CAAmI,yBAAnI,CALP,EAMP;;AANO;AAAA,mBAOgBC,oBAAUC,KAAV,CAAgBH,QAAhB,EAA0B;AAAEI,cAAAA,IAAI,EAAEF,oBAAUG,UAAV,CAAqBC;AAA7B,aAA1B,CAPhB;;AAAA;AAOFC,YAAAA,QAPE;;AASP,gBAAGA,QAAH,EAAY;AAEDhD,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAEJC,gBAAAA,OAAO,EAAC,0CAFJ;AAGJ2C,gBAAAA,QAAQ,EAARA;AAHI,eAAT;AAMF,aART,MASY;AACAhD,cAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AAtBF;AAAA;;AAAA;AAAA;AAAA;AA0BGL,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,eADS;AAEjBC,cAAAA,IAAI,EAAC;AAACE,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AA1BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAmCeyC,sB;;;;;;;0BAAf,kBAAsClD,GAAtC,EAA0CC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFkD,YAAAA,UAFE,GAEYnD,GAAG,CAACuC,MAFhB,CAEFY,UAFE;AAAA;AAKHT,YAAAA,QALG,GAKO,6GAA6GC,MAA7G,CAAoHQ,UAApH,EAAgIR,MAAhI,CAAuI,yBAAvI,CALP;AAAA;AAAA,mBAOgBC,oBAAUC,KAAV,CAAgBH,QAAhB,EAA0B;AAAEI,cAAAA,IAAI,EAAEF,oBAAUG,UAAV,CAAqBC;AAA7B,aAA1B,CAPhB;;AAAA;AAOFC,YAAAA,QAPE;;AASP,gBAAGA,QAAH,EAAY;AAEDhD,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAEJC,gBAAAA,OAAO,EAAC,iCAFJ;AAGJ2C,gBAAAA,QAAQ,EAARA;AAHI,eAAT;AAMF,aART,MASY;AACAhD,cAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AAtBF;AAAA;;AAAA;AAAA;AAAA;AA0BGL,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,eADS;AAEjBC,cAAAA,IAAI,EAAC;AAACE,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AA1BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers",
      "sourcesContent": [
        "import Test from '../models/User'\r\nimport jwt from 'jsonwebtoken'\r\nimport {sequelize} from '../database/database';\r\n\r\n\r\n/** Obtener todos los Usuarios */\r\nexport async function getAll(req,res){\r\n\r\n    try {\r\n\r\n        const tests = await Test.findAll();\r\n        \r\n        if(tests){\r\n\r\n           res.json({\r\n\r\n                message:'Todos los usuarios registrados son:',\r\n                data:tests\r\n\r\n            });\r\n\r\n            //res.json(['John', 'Betty', 'Hal']);\r\n        }\r\n       \r\n  \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'Something goes wrong on getAll patch',\r\n              data:{error}\r\n          });\r\n      } \r\n}\r\n\r\n/** Crear nuevo Usuario */\r\nexport async function register(req,res){\r\n\r\n    const { nombre,mail,pass } = req.body;\r\n\r\n    try {\r\n\r\n        let nuevoUsuario = await Test.create({\r\n\r\n            nombre: nombre,\r\n            mail:mail,\r\n            pass:pass\r\n\r\n            },\r\n            {\r\n                fields:[\r\n                    \r\n                    'nombre',\r\n                    'mail',\r\n                    'pass',\r\n\r\n                ]\r\n            });\r\n            \r\n        if(nuevoUsuario){\r\n\r\n           return  res.json({\r\n                message: 'Usuario creado.',\r\n                data: nuevoUsuario\r\n            });\r\n        }\r\n        \r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message:'Ocurrio un Error al crear usuario',\r\n            data:{nombre,mail,pass},\r\n            error:error\r\n        });\r\n    } \r\n}\r\n\r\n/** Login Usuarios */\r\nexport async function login(req,res){\r\n\r\n    const { mail,pass } = req.body;\r\n    \r\n    try {\r\n\r\n        const userFound = await Test.findOne({\r\n            where: {\r\n                mail:mail,\r\n                pass:pass\r\n            },\r\n            attributes: ['id','nombre','mail','pass']\r\n        });\r\n    \r\n        if(userFound){\r\n    \r\n           const token = jwt.sign({userFound}, 'key' );\r\n    \r\n            res.json({\r\n                message:'Login Success.',\r\n                data:userFound,\r\n                token : token\r\n            })\r\n\r\n        }else{\r\n            res.json({\r\n                message:'No se encuentra registrado el usuario.'      \r\n            })\r\n        }\r\n     \r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message:'Something goes wrong222',\r\n            data:error\r\n        });\r\n    }}\r\n\r\n/** Rutas protegidas */\r\nexport async function consultaPerfil(req,res){\r\n\r\n    jwt.verify(req.token, 'key' , (err,data)=>{\r\n        if(err){\r\n            res.json({\r\n                message:'Acceso Denegado.'\r\n            });\r\n        }else{\r\n                    res.json({\r\n                message:'Acceso a consulta de Perfil',\r\n                data:data //Son los datos del que se esta logeando\r\n                     });\r\n        }\r\n    });\r\n}\r\n\r\nexport async function chequeoToken(req,res,next){\r\n\r\n    jwt.verify(req.token, 'key' , (err,data)=>{\r\n        if(err){\r\n            res.json({\r\n                message:'Acceso Denegado.'\r\n            });\r\n        }else{\r\n            next();\r\n        }\r\n    });\r\n}\r\n\r\n\r\n/** Verificacion token */\r\nexport async function ensureToken(req,res,next){\r\n    \r\n    const bearerHeader = req.headers['authorization'];\r\n    \r\n    if( typeof bearerHeader !== 'undefined' ){\r\n\r\n        const bearer = bearerHeader.split(\" \");\r\n        const bearerToken = bearer[1];\r\n        req.token = bearerToken;\r\n        next();\r\n\r\n    }else {\r\n        res.json({\r\n            message:'Token null error'\r\n        });\r\n    }\r\n}\r\n\r\n/** Obtener usuario por id */\r\nexport async function getOne(req,res,next)\r\n{\r\n    \r\n    const {id } = req.params;\r\n        \r\n    try {\r\n\r\n        const userFound = await Test.findOne({\r\n            where: {\r\n                id:id\r\n            },\r\n            attributes: ['id','nombre','mail','pass']\r\n        });\r\n\r\n        if(userFound){\r\n    \r\n            res.json(userFound);\r\n\r\n        }else{\r\n            res.json({\r\n                message:'No se encuentra registrado el usuario.'      \r\n            })\r\n        }\r\n        \r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message:'Something goes wrong ',\r\n            data:{error}\r\n        });\r\n    }\r\n}\r\n\r\n/*todos los usuarios delivery para chatear de un usuario en pedido*/\r\nexport async function getDeliverysPorUsuario(req,res)\r\n{\r\nvar {iduser} = req.params;\r\ntry{\r\n\r\nvar sqlquery= 'select Distinct(users.*) from users, pedidos where pedidos.ped_deliveryid=users.id and pedidos.ped_userid='.concat(iduser).concat(' ORDER BY users.nombre ');\r\n//res.json(sqlquery);\r\nvar  usuarios =  await sequelize.query(sqlquery ,{ type: sequelize.QueryTypes.SELECT});\r\n\r\nif(usuarios){\r\n\r\n           res.json({\r\n\r\n                message:'todos los usuarios delivery para chatear',\r\n                usuarios\r\n\r\n            });\r\n        }\r\n        else{\r\n            res.status(500).json({\r\n                message:'No se encontro registros.'      \r\n            })\r\n        }\r\n       \r\n  \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'hubo un error',\r\n              data:{error}\r\n          });\r\n      } \r\n \r\n    }\r\n\r\n/*todos los usuarios para chatear de un pedido de un delivery*/\r\nexport async function getUsuariosPorDelivery(req,res)\r\n{\r\nvar {iddelivery} = req.params;\r\ntry{\r\n\r\nvar sqlquery= 'select Distinct(users.*) from users, pedidos where pedidos.ped_userid=users.id and pedidos.ped_deliveryid='.concat(iddelivery).concat(' ORDER BY users.nombre ');\r\n\r\nvar  usuarios =  await sequelize.query(sqlquery ,{ type: sequelize.QueryTypes.SELECT});\r\n\r\nif(usuarios){\r\n\r\n           res.json({\r\n\r\n                message:'todos los usuarios para chatear',\r\n                usuarios\r\n\r\n            });\r\n        }\r\n        else{\r\n            res.status(500).json({\r\n                message:'No se encontro registros.'      \r\n            })\r\n        }\r\n       \r\n  \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'hubo un error',\r\n              data:{error}\r\n          });\r\n      } \r\n }\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415539
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\models\\\\User.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\User.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\User.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\User.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
        "sourceFileName": "User.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/** Defino modelo de los datos */\nvar Test = _database.sequelize.define('users', {\n  id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  pass: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  mail: {\n    type: _sequelize[\"default\"].TEXT\n  }\n});\n\nvar _default = Test;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXIuanMiXSwibmFtZXMiOlsiVGVzdCIsInNlcXVlbGl6ZSIsImRlZmluZSIsImlkIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJwcmltYXJ5S2V5Iiwibm9tYnJlIiwiVEVYVCIsInBhc3MiLCJtYWlsIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQTtBQUNBLElBQU1BLElBQUksR0FBR0Msb0JBQVVDLE1BQVYsQ0FBaUIsT0FBakIsRUFBeUI7QUFFbENDLEVBQUFBLEVBQUUsRUFBQztBQUNDQyxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQURqQjtBQUVDQyxJQUFBQSxVQUFVLEVBQUU7QUFGYixHQUYrQjtBQU1sQ0MsRUFBQUEsTUFBTSxFQUFDO0FBQ0hKLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRGIsR0FOMkI7QUFTbENDLEVBQUFBLElBQUksRUFBQztBQUNETixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURmLEdBVDZCO0FBWWxDRSxFQUFBQSxJQUFJLEVBQUM7QUFDRFAsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFEZjtBQVo2QixDQUF6QixDQUFiOztlQWtCZVQsSSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEdpb3ZhXFxEZXNrdG9wXFxSZXBvVGFsbGVyMlxcc2VydmVyMlxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XHJcbmltcG9ydCB7c2VxdWVsaXplfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZSc7XHJcblxyXG4vKiogRGVmaW5vIG1vZGVsbyBkZSBsb3MgZGF0b3MgKi9cclxuY29uc3QgVGVzdCA9IHNlcXVlbGl6ZS5kZWZpbmUoJ3VzZXJzJyx7XHJcblxyXG4gICAgaWQ6e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWVcclxuICAgIH0sXHJcbiAgICBub21icmU6e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgcGFzczp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBtYWlsOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfVxyXG5cclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUZXN0OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "User.js"
      ],
      "names": [
        "Test",
        "sequelize",
        "define",
        "id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "nombre",
        "TEXT",
        "pass",
        "mail"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;AACA,IAAMA,IAAI,GAAGC,oBAAUC,MAAV,CAAiB,OAAjB,EAAyB;AAElCC,EAAAA,EAAE,EAAC;AACCC,IAAAA,IAAI,EAAEC,sBAAUC,OADjB;AAECC,IAAAA,UAAU,EAAE;AAFb,GAF+B;AAMlCC,EAAAA,MAAM,EAAC;AACHJ,IAAAA,IAAI,EAAEC,sBAAUI;AADb,GAN2B;AASlCC,EAAAA,IAAI,EAAC;AACDN,IAAAA,IAAI,EAAEC,sBAAUI;AADf,GAT6B;AAYlCE,EAAAA,IAAI,EAAC;AACDP,IAAAA,IAAI,EAAEC,sBAAUI;AADf;AAZ6B,CAAzB,CAAb;;eAkBeT,I",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../database/database';\r\n\r\n/** Defino modelo de los datos */\r\nconst Test = sequelize.define('users',{\r\n\r\n    id:{\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n    nombre:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    pass:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    mail:{\r\n        type: Sequelize.TEXT\r\n    }\r\n\r\n});\r\n\r\nexport default Test;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415600
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\database\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\database\\\\database.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\database",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\database\\database.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\database\\database.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\database\\database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\database",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sequelize = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*const Sequelize = require('sequelize');\r\n\r\n// Option 2: Passing a connection URI\r\nexport const sequelize = new Sequelize(\r\n    \r\n    'postgres://idxehuofzgahva:6764ce04510121abfd240c5966331f997a38eebf9f963a77fa749f7a7e6825d4@ec2-54-83-9-36.compute-1.amazonaws.com:5432/d8sjqqcpb870to',\r\n     {\r\n        dialect: 'postgres',\r\n        dialectOptions: {\r\n            ssl: true\r\n        },\r\n        define: {\r\n            timestamps: false\r\n        },\r\n        pool: {\r\n            max:5,\r\n            min:0,\r\n            require:30000,\r\n            idle:10000\r\n        }\r\n     }\r\n     \r\n);\r\n\r\nsequelize\r\n  .authenticate()\r\n  .then(() => {\r\n    console.log('Connection has been established successfully.');\r\n  })\r\n  .catch(err => {\r\n    console.error('Unable to connect to the database:', err);\r\n  });*/\nvar sequelize = new _sequelize[\"default\"]('postgres', 'postgres', '152645109', {\n  host: 'localhost',\n  dialect: 'postgres',\n  define: {\n    timestamps: false\n  },\n  pool: {\n    max: 5,\n    min: 0,\n    require: 30000,\n    idle: 10000\n  },\n  logging: false\n});\nexports.sequelize = sequelize;\nsequelize.authenticate()[\"catch\"](function (err) {\n  console.error('no se pudo realizar la conexion a la base de datos:', err);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImhvc3QiLCJkaWFsZWN0IiwiZGVmaW5lIiwidGltZXN0YW1wcyIsInBvb2wiLCJtYXgiLCJtaW4iLCJyZXF1aXJlIiwiaWRsZSIsImxvZ2dpbmciLCJhdXRoZW50aWNhdGUiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFpQ0U7Ozs7QUFqQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUNTLElBQU1BLFNBQVMsR0FBRyxJQUFJQyxxQkFBSixDQUNqQixVQURpQixFQUVqQixVQUZpQixFQUdqQixXQUhpQixFQUlqQjtBQUNJQyxFQUFBQSxJQUFJLEVBQUUsV0FEVjtBQUVJQyxFQUFBQSxPQUFPLEVBQUUsVUFGYjtBQUdJQyxFQUFBQSxNQUFNLEVBQUU7QUFDSkMsSUFBQUEsVUFBVSxFQUFFO0FBRFIsR0FIWjtBQU1JQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsR0FBRyxFQUFDLENBREY7QUFFRkMsSUFBQUEsR0FBRyxFQUFDLENBRkY7QUFHRkMsSUFBQUEsT0FBTyxFQUFDLEtBSE47QUFJRkMsSUFBQUEsSUFBSSxFQUFDO0FBSkgsR0FOVjtBQVlJQyxFQUFBQSxPQUFPLEVBQUM7QUFaWixDQUppQixDQUFsQjs7QUFtQlBYLFNBQVMsQ0FDUlksWUFERCxZQUVPLFVBQUFDLEdBQUcsRUFBSTtBQUNaQyxFQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBYyxxREFBZCxFQUFxRUYsR0FBckU7QUFDRCxDQUpEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcR2lvdmFcXERlc2t0b3BcXFJlcG9UYWxsZXIyXFxzZXJ2ZXIyXFxzcmNcXGRhdGFiYXNlIiwic291cmNlc0NvbnRlbnQiOlsiLypjb25zdCBTZXF1ZWxpemUgPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcclxuXHJcbi8vIE9wdGlvbiAyOiBQYXNzaW5nIGEgY29ubmVjdGlvbiBVUklcclxuZXhwb3J0IGNvbnN0IHNlcXVlbGl6ZSA9IG5ldyBTZXF1ZWxpemUoXHJcbiAgICBcclxuICAgICdwb3N0Z3JlczovL2lkeGVodW9memdhaHZhOjY3NjRjZTA0NTEwMTIxYWJmZDI0MGM1OTY2MzMxZjk5N2EzOGVlYmY5Zjk2M2E3N2ZhNzQ5ZjdhN2U2ODI1ZDRAZWMyLTU0LTgzLTktMzYuY29tcHV0ZS0xLmFtYXpvbmF3cy5jb206NTQzMi9kOHNqcXFjcGI4NzB0bycsXHJcbiAgICAge1xyXG4gICAgICAgIGRpYWxlY3Q6ICdwb3N0Z3JlcycsXHJcbiAgICAgICAgZGlhbGVjdE9wdGlvbnM6IHtcclxuICAgICAgICAgICAgc3NsOiB0cnVlXHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZWZpbmU6IHtcclxuICAgICAgICAgICAgdGltZXN0YW1wczogZmFsc2VcclxuICAgICAgICB9LFxyXG4gICAgICAgIHBvb2w6IHtcclxuICAgICAgICAgICAgbWF4OjUsXHJcbiAgICAgICAgICAgIG1pbjowLFxyXG4gICAgICAgICAgICByZXF1aXJlOjMwMDAwLFxyXG4gICAgICAgICAgICBpZGxlOjEwMDAwXHJcbiAgICAgICAgfVxyXG4gICAgIH1cclxuICAgICBcclxuKTtcclxuXHJcbnNlcXVlbGl6ZVxyXG4gIC5hdXRoZW50aWNhdGUoKVxyXG4gIC50aGVuKCgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdDb25uZWN0aW9uIGhhcyBiZWVuIGVzdGFibGlzaGVkIHN1Y2Nlc3NmdWxseS4nKTtcclxuICB9KVxyXG4gIC5jYXRjaChlcnIgPT4ge1xyXG4gICAgY29uc29sZS5lcnJvcignVW5hYmxlIHRvIGNvbm5lY3QgdG8gdGhlIGRhdGFiYXNlOicsIGVycik7XHJcbiAgfSk7Ki9cclxuXHJcbiAgaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xyXG5cclxuICBleHBvcnQgY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShcclxuICAgICAgICAgICdwb3N0Z3JlcycsXHJcbiAgICAgICAgICAncG9zdGdyZXMnLFxyXG4gICAgICAgICAgJzE1MjY0NTEwOScsXHJcbiAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgaG9zdDogJ2xvY2FsaG9zdCcsXHJcbiAgICAgICAgICAgICAgZGlhbGVjdDogJ3Bvc3RncmVzJyxcclxuICAgICAgICAgICAgICBkZWZpbmU6IHtcclxuICAgICAgICAgICAgICAgICAgdGltZXN0YW1wczogZmFsc2VcclxuICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgIHBvb2w6IHtcclxuICAgICAgICAgICAgICAgICAgbWF4OjUsXHJcbiAgICAgICAgICAgICAgICAgIG1pbjowLFxyXG4gICAgICAgICAgICAgICAgICByZXF1aXJlOjMwMDAwLFxyXG4gICAgICAgICAgICAgICAgICBpZGxlOjEwMDAwXHJcbiAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICBsb2dnaW5nOmZhbHNlXHJcbiAgICAgICAgICB9XHJcbiAgKTtcclxuICBzZXF1ZWxpemVcclxuICAuYXV0aGVudGljYXRlKClcclxuICAuY2F0Y2goZXJyID0+IHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ25vIHNlIHB1ZG8gcmVhbGl6YXIgbGEgY29uZXhpb24gYSBsYSBiYXNlIGRlIGRhdG9zOicsIGVycik7XHJcbiAgfSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "define",
        "timestamps",
        "pool",
        "max",
        "min",
        "require",
        "idle",
        "logging",
        "authenticate",
        "err",
        "console",
        "error"
      ],
      "mappings": ";;;;;;;AAiCE;;;;AAjCF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCS,IAAMA,SAAS,GAAG,IAAIC,qBAAJ,CACjB,UADiB,EAEjB,UAFiB,EAGjB,WAHiB,EAIjB;AACIC,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,OAAO,EAAE,UAFb;AAGIC,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAE;AADR,GAHZ;AAMIC,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAC,CADF;AAEFC,IAAAA,GAAG,EAAC,CAFF;AAGFC,IAAAA,OAAO,EAAC,KAHN;AAIFC,IAAAA,IAAI,EAAC;AAJH,GANV;AAYIC,EAAAA,OAAO,EAAC;AAZZ,CAJiB,CAAlB;;AAmBPX,SAAS,CACRY,YADD,YAEO,UAAAC,GAAG,EAAI;AACZC,EAAAA,OAAO,CAACC,KAAR,CAAc,qDAAd,EAAqEF,GAArE;AACD,CAJD",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\database",
      "sourcesContent": [
        "/*const Sequelize = require('sequelize');\r\n\r\n// Option 2: Passing a connection URI\r\nexport const sequelize = new Sequelize(\r\n    \r\n    'postgres://idxehuofzgahva:6764ce04510121abfd240c5966331f997a38eebf9f963a77fa749f7a7e6825d4@ec2-54-83-9-36.compute-1.amazonaws.com:5432/d8sjqqcpb870to',\r\n     {\r\n        dialect: 'postgres',\r\n        dialectOptions: {\r\n            ssl: true\r\n        },\r\n        define: {\r\n            timestamps: false\r\n        },\r\n        pool: {\r\n            max:5,\r\n            min:0,\r\n            require:30000,\r\n            idle:10000\r\n        }\r\n     }\r\n     \r\n);\r\n\r\nsequelize\r\n  .authenticate()\r\n  .then(() => {\r\n    console.log('Connection has been established successfully.');\r\n  })\r\n  .catch(err => {\r\n    console.error('Unable to connect to the database:', err);\r\n  });*/\r\n\r\n  import Sequelize from 'sequelize';\r\n\r\n  export const sequelize = new Sequelize(\r\n          'postgres',\r\n          'postgres',\r\n          '152645109',\r\n          {\r\n              host: 'localhost',\r\n              dialect: 'postgres',\r\n              define: {\r\n                  timestamps: false\r\n              },\r\n              pool: {\r\n                  max:5,\r\n                  min:0,\r\n                  require:30000,\r\n                  idle:10000\r\n              },\r\n              logging:false\r\n          }\r\n  );\r\n  sequelize\r\n  .authenticate()\r\n  .catch(err => {\r\n    console.error('no se pudo realizar la conexion a la base de datos:', err);\r\n  });"
      ]
    },
    "sourceType": "script",
    "mtime": 1570713578662
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\rutas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\rutas\\\\productos.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas\\productos.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas\\productos.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas\\productos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas",
        "sourceFileName": "productos.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _productoController = require(\"../controllers/productoController\");\n\nvar _userController = require(\"../controllers/userController\");\n\n/** Rutas de test */\nvar router = (0, _express.Router)();\n/** Controladores */\n\n/** Rutas */\n\n/** Obtener todos los productos */\nrouter.get('/all', _userController.ensureToken, _userController.chequeoToken, _productoController.getAll);\n/* Obtengo los productos de un idcomercio*/\n\nrouter.get('/productosPorComercio/:idcomercio', _userController.ensureToken, _userController.chequeoToken, _productoController.getProductosPorComercio);\n/* Obtengo los productos de un idpedido*/\n\nrouter.get('/productosPorPedido/:idpedido', _userController.ensureToken, _userController.chequeoToken, _productoController.getProductosPorPedido);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3Rvcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJlbnN1cmVUb2tlbiIsImNoZXF1ZW9Ub2tlbiIsImdldEFsbCIsImdldFByb2R1Y3Rvc1BvckNvbWVyY2lvIiwiZ2V0UHJvZHVjdG9zUG9yUGVkaWRvIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRUc7O0FBTUE7O0FBT0E7O0FBZkE7QUFJQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFFSTs7QUFjUDs7QUFDRztBQUNBQSxNQUFNLENBQUNDLEdBQVAsQ0FBVyxNQUFYLEVBQW1CQywyQkFBbkIsRUFBK0JDLDRCQUEvQixFQUE0Q0MsMEJBQTVDO0FBRUE7O0FBQ0FKLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLG1DQUFYLEVBQStDQywyQkFBL0MsRUFBMkRDLDRCQUEzRCxFQUF5RUUsMkNBQXpFO0FBRUE7O0FBQ0FMLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLCtCQUFYLEVBQTJDQywyQkFBM0MsRUFBdURDLDRCQUF2RCxFQUFxRUcseUNBQXJFO2VBR2VOLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxHaW92YVxcRGVza3RvcFxcUmVwb1RhbGxlcjJcXHNlcnZlcjJcXHNyY1xccnV0YXMiLCJzb3VyY2VzQ29udGVudCI6WyIgICAvKiogUnV0YXMgZGUgdGVzdCAqL1xyXG5cclxuICAgaW1wb3J0IHtSb3V0ZXJ9IGZyb20gJ2V4cHJlc3MnXHJcblxyXG4gICBjb25zdCByb3V0ZXIgPSBSb3V0ZXIoKVxyXG4gICBcclxuICAgICAgIC8qKiBDb250cm9sYWRvcmVzICovXHJcbiAgIFxyXG4gICBpbXBvcnQgeyAgXHJcbiAgICAgICBnZXRBbGwsXHJcbiAgICAgICBnZXRQcm9kdWN0b3NQb3JDb21lcmNpbyxcclxuICAgICAgIGdldFByb2R1Y3Rvc1BvclBlZGlkb1xyXG4gICAgICAgfSBmcm9tICcuLi9jb250cm9sbGVycy9wcm9kdWN0b0NvbnRyb2xsZXInO1xyXG4gICBcclxuICAgXHJcbiAgIGltcG9ydCB7IFxyXG5cdCAgICBlbnN1cmVUb2tlbixjaGVxdWVvVG9rZW5cclxuXHQgICB9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3VzZXJDb250cm9sbGVyJztcclxuXHJcblxyXG4vKiogUnV0YXMgKi9cclxuICAgLyoqIE9idGVuZXIgdG9kb3MgbG9zIHByb2R1Y3RvcyAqL1xyXG4gICByb3V0ZXIuZ2V0KCcvYWxsJywgZW5zdXJlVG9rZW4sY2hlcXVlb1Rva2VuLGdldEFsbCApO1xyXG4gICBcclxuICAgLyogT2J0ZW5nbyBsb3MgcHJvZHVjdG9zIGRlIHVuIGlkY29tZXJjaW8qL1xyXG4gICByb3V0ZXIuZ2V0KCcvcHJvZHVjdG9zUG9yQ29tZXJjaW8vOmlkY29tZXJjaW8nLGVuc3VyZVRva2VuLGNoZXF1ZW9Ub2tlbiwgZ2V0UHJvZHVjdG9zUG9yQ29tZXJjaW8pO1xyXG4gICBcclxuICAgLyogT2J0ZW5nbyBsb3MgcHJvZHVjdG9zIGRlIHVuIGlkcGVkaWRvKi9cclxuICAgcm91dGVyLmdldCgnL3Byb2R1Y3Rvc1BvclBlZGlkby86aWRwZWRpZG8nLGVuc3VyZVRva2VuLGNoZXF1ZW9Ub2tlbiwgZ2V0UHJvZHVjdG9zUG9yUGVkaWRvKTtcclxuICAgXHJcblxyXG4gICBleHBvcnQgZGVmYXVsdCByb3V0ZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "productos.js"
      ],
      "names": [
        "router",
        "get",
        "ensureToken",
        "chequeoToken",
        "getAll",
        "getProductosPorComercio",
        "getProductosPorPedido"
      ],
      "mappings": ";;;;;;;AAEG;;AAMA;;AAOA;;AAfA;AAIA,IAAMA,MAAM,GAAG,sBAAf;AAEI;;AAcP;;AACG;AACAA,MAAM,CAACC,GAAP,CAAW,MAAX,EAAmBC,2BAAnB,EAA+BC,4BAA/B,EAA4CC,0BAA5C;AAEA;;AACAJ,MAAM,CAACC,GAAP,CAAW,mCAAX,EAA+CC,2BAA/C,EAA2DC,4BAA3D,EAAyEE,2CAAzE;AAEA;;AACAL,MAAM,CAACC,GAAP,CAAW,+BAAX,EAA2CC,2BAA3C,EAAuDC,4BAAvD,EAAqEG,yCAArE;eAGeN,M",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas",
      "sourcesContent": [
        "   /** Rutas de test */\r\n\r\n   import {Router} from 'express'\r\n\r\n   const router = Router()\r\n   \r\n       /** Controladores */\r\n   \r\n   import {  \r\n       getAll,\r\n       getProductosPorComercio,\r\n       getProductosPorPedido\r\n       } from '../controllers/productoController';\r\n   \r\n   \r\n   import { \r\n\t    ensureToken,chequeoToken\r\n\t   } from '../controllers/userController';\r\n\r\n\r\n/** Rutas */\r\n   /** Obtener todos los productos */\r\n   router.get('/all', ensureToken,chequeoToken,getAll );\r\n   \r\n   /* Obtengo los productos de un idcomercio*/\r\n   router.get('/productosPorComercio/:idcomercio',ensureToken,chequeoToken, getProductosPorComercio);\r\n   \r\n   /* Obtengo los productos de un idpedido*/\r\n   router.get('/productosPorPedido/:idpedido',ensureToken,chequeoToken, getProductosPorPedido);\r\n   \r\n\r\n   export default router"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415605
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\controllers\\\\productoController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers\\productoController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers\\productoController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers\\productoController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers",
        "sourceFileName": "productoController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getProductosPorComercio = getProductosPorComercio;\nexports.getAll = getAll;\nexports.getProductosPorPedido = getProductosPorPedido;\n\nvar _Producto = _interopRequireDefault(require(\"../models/Producto\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/*todos los productos de un comercio*/\nfunction getProductosPorComercio(_x, _x2) {\n  return _getProductosPorComercio.apply(this, arguments);\n}\n/** Obtener todos los productos */\n\n\nfunction _getProductosPorComercio() {\n  _getProductosPorComercio = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var idcomercio, productos;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            idcomercio = req.params.idcomercio;\n            _context.prev = 1;\n            _context.next = 4;\n            return _Producto[\"default\"].findAll({\n              where: {\n                prod_idcomercio: idcomercio\n              }\n            });\n\n          case 4:\n            productos = _context.sent;\n\n            if (productos) {\n              res.json({\n                message: 'todos los productos registrados del comercio',\n                productos: productos\n              });\n            } else {\n              res.status(500).json({\n                message: 'No se encontro registros de productos.'\n              });\n            }\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            res.status(500).json({\n              message: 'algo salio mal obteniendo los productos',\n              data: {\n                error: _context.t0\n              }\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n  return _getProductosPorComercio.apply(this, arguments);\n}\n\nfunction getAll(_x3, _x4) {\n  return _getAll.apply(this, arguments);\n}\n/*todos los productos de un pedido*/\n\n\nfunction _getAll() {\n  _getAll = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var productos;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _Producto[\"default\"].findAll();\n\n          case 3:\n            productos = _context2.sent;\n\n            if (productos) {\n              res.json({\n                message: 'todos los productos registrados',\n                productos: productos\n              });\n            } else {\n              res.status(500).json({\n                message: 'No se encontro registros de productos.'\n              });\n            }\n\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            res.status(500).json({\n              message: 'no se encontro ningun producto',\n              data: {\n                error: _context2.t0\n              }\n            });\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n  return _getAll.apply(this, arguments);\n}\n\nfunction getProductosPorPedido(_x5, _x6) {\n  return _getProductosPorPedido.apply(this, arguments);\n}\n\nfunction _getProductosPorPedido() {\n  _getProductosPorPedido = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var idpedido, sqlquery, productos;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            idpedido = req.params.idpedido;\n            _context3.prev = 1;\n            sqlquery = 'select productos.*  from items, productos where productos.prod_id=items.item_productoid and items.item_pedidoid='.concat(idpedido);\n            _context3.next = 5;\n            return _database.sequelize.query(sqlquery, {\n              type: _database.sequelize.QueryTypes.SELECT\n            });\n\n          case 5:\n            productos = _context3.sent;\n\n            if (productos) {\n              res.json({\n                message: 'todos los productos para el pedido',\n                productos: productos\n              });\n            } else {\n              res.status(500).json({\n                message: 'No se encontro registros de productos.'\n              });\n            }\n\n            _context3.next = 12;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.status(500).json({\n              message: 'surgio un error',\n              data: {\n                error: _context3.t0\n              }\n            });\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 9]]);\n  }));\n  return _getProductosPorPedido.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3RvQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRQcm9kdWN0b3NQb3JDb21lcmNpbyIsInJlcSIsInJlcyIsImlkY29tZXJjaW8iLCJwYXJhbXMiLCJQcm9kdWN0byIsImZpbmRBbGwiLCJ3aGVyZSIsInByb2RfaWRjb21lcmNpbyIsInByb2R1Y3RvcyIsImpzb24iLCJtZXNzYWdlIiwic3RhdHVzIiwiZGF0YSIsImVycm9yIiwiZ2V0QWxsIiwiZ2V0UHJvZHVjdG9zUG9yUGVkaWRvIiwiaWRwZWRpZG8iLCJzcWxxdWVyeSIsImNvbmNhdCIsInNlcXVlbGl6ZSIsInF1ZXJ5IiwidHlwZSIsIlF1ZXJ5VHlwZXMiLCJTRUxFQ1QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7OztBQUVBO1NBQ3NCQSx1Qjs7O0FBb0N0Qjs7Ozs7OzBCQXBDTyxpQkFBdUNDLEdBQXZDLEVBQTJDQyxHQUEzQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFRUMsWUFBQUEsVUFGRixHQUVnQkYsR0FBRyxDQUFDRyxNQUZwQixDQUVFRCxVQUZGO0FBQUE7QUFBQTtBQUFBLG1CQUt1QkUscUJBQVNDLE9BQVQsQ0FBaUI7QUFDbkNDLGNBQUFBLEtBQUssRUFBRTtBQUNFQyxnQkFBQUEsZUFBZSxFQUFDTDtBQURsQjtBQUQ0QixhQUFqQixDQUx2Qjs7QUFBQTtBQUtLTSxZQUFBQSxTQUxMOztBQVdDLGdCQUFHQSxTQUFILEVBQWE7QUFFVlAsY0FBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVM7QUFFSkMsZ0JBQUFBLE9BQU8sRUFBQyw4Q0FGSjtBQUdKRixnQkFBQUEsU0FBUyxFQUFUQTtBQUhJLGVBQVQ7QUFPRixhQVRELE1BVUk7QUFDQVAsY0FBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVcsR0FBWCxFQUFnQkYsSUFBaEIsQ0FBcUI7QUFDakJDLGdCQUFBQSxPQUFPLEVBQUM7QUFEUyxlQUFyQjtBQUdIOztBQXpCRjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQTZCR1QsWUFBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVcsR0FBWCxFQUFnQkYsSUFBaEIsQ0FBcUI7QUFDakJDLGNBQUFBLE9BQU8sRUFBQyx5Q0FEUztBQUVqQkUsY0FBQUEsSUFBSSxFQUFDO0FBQUNDLGdCQUFBQSxLQUFLO0FBQU47QUFGWSxhQUFyQjs7QUE3Qkg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRzs7OztTQXFDZUMsTTs7O0FBK0J0Qjs7Ozs7OzBCQS9CTyxrQkFBc0JkLEdBQXRCLEVBQTBCQyxHQUExQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBSXVCRyxxQkFBU0MsT0FBVCxFQUp2Qjs7QUFBQTtBQUlLRyxZQUFBQSxTQUpMOztBQU1DLGdCQUFJQSxTQUFKLEVBQWM7QUFFWFAsY0FBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVM7QUFFSkMsZ0JBQUFBLE9BQU8sRUFBQyxpQ0FGSjtBQUdKRixnQkFBQUEsU0FBUyxFQUFUQTtBQUhJLGVBQVQ7QUFNRixhQVJELE1BU0k7QUFDQVAsY0FBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVcsR0FBWCxFQUFnQkYsSUFBaEIsQ0FBcUI7QUFDakJDLGdCQUFBQSxPQUFPLEVBQUM7QUFEUyxlQUFyQjtBQUdIOztBQW5CRjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQXVCR1QsWUFBQUEsR0FBRyxDQUFDVSxNQUFKLENBQVcsR0FBWCxFQUFnQkYsSUFBaEIsQ0FBcUI7QUFDakJDLGNBQUFBLE9BQU8sRUFBQyxnQ0FEUztBQUVqQkUsY0FBQUEsSUFBSSxFQUFDO0FBQUNDLGdCQUFBQSxLQUFLO0FBQU47QUFGWSxhQUFyQjs7QUF2Qkg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRzs7OztTQWdDZUUscUI7Ozs7Ozs7MEJBQWYsa0JBQXFDZixHQUFyQyxFQUF5Q0MsR0FBekM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUZlLFlBQUFBLFFBRkUsR0FFVWhCLEdBQUcsQ0FBQ0csTUFGZCxDQUVGYSxRQUZFO0FBQUE7QUFJSEMsWUFBQUEsUUFKRyxHQUlPLG1IQUFtSEMsTUFBbkgsQ0FBMEhGLFFBQTFILENBSlA7QUFBQTtBQUFBLG1CQU1pQkcsb0JBQVVDLEtBQVYsQ0FBZ0JILFFBQWhCLEVBQTBCO0FBQUVJLGNBQUFBLElBQUksRUFBRUYsb0JBQVVHLFVBQVYsQ0FBcUJDO0FBQTdCLGFBQTFCLENBTmpCOztBQUFBO0FBTUhmLFlBQUFBLFNBTkc7O0FBUU4sZ0JBQUdBLFNBQUgsRUFBYTtBQUVIUCxjQUFBQSxHQUFHLENBQUNRLElBQUosQ0FBUztBQUVKQyxnQkFBQUEsT0FBTyxFQUFDLG9DQUZKO0FBR0pGLGdCQUFBQSxTQUFTLEVBQVRBO0FBSEksZUFBVDtBQU1GLGFBUlIsTUFTVztBQUNBUCxjQUFBQSxHQUFHLENBQUNVLE1BQUosQ0FBVyxHQUFYLEVBQWdCRixJQUFoQixDQUFxQjtBQUNqQkMsZ0JBQUFBLE9BQU8sRUFBQztBQURTLGVBQXJCO0FBR0g7O0FBckJGO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBeUJHVCxZQUFBQSxHQUFHLENBQUNVLE1BQUosQ0FBVyxHQUFYLEVBQWdCRixJQUFoQixDQUFxQjtBQUNqQkMsY0FBQUEsT0FBTyxFQUFDLGlCQURTO0FBRWpCRSxjQUFBQSxJQUFJLEVBQUM7QUFBQ0MsZ0JBQUFBLEtBQUs7QUFBTjtBQUZZLGFBQXJCOztBQXpCSDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcR2lvdmFcXERlc2t0b3BcXFJlcG9UYWxsZXIyXFxzZXJ2ZXIyXFxzcmNcXGNvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb2R1Y3RvIGZyb20gJy4uL21vZGVscy9Qcm9kdWN0byc7XHJcbmltcG9ydCB7c2VxdWVsaXplfSBmcm9tICcuLi9kYXRhYmFzZS9kYXRhYmFzZSc7XHJcblxyXG4vKnRvZG9zIGxvcyBwcm9kdWN0b3MgZGUgdW4gY29tZXJjaW8qL1xyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UHJvZHVjdG9zUG9yQ29tZXJjaW8ocmVxLHJlcylcclxue1xyXG4gICAgdmFyIHtpZGNvbWVyY2lvfSA9IHJlcS5wYXJhbXM7XHJcbnRyeSB7XHJcblxyXG4gICAgICAgIGxldCBwcm9kdWN0b3MgPSBhd2FpdCBQcm9kdWN0by5maW5kQWxsKHtcclxuICAgICAgICAgICAgd2hlcmU6IHtcclxuICAgICAgICAgICAgICAgICAgICAgcHJvZF9pZGNvbWVyY2lvOmlkY29tZXJjaW9cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgIH0pO1xyXG4gIFxyXG4gICAgICAgIGlmKHByb2R1Y3Rvcyl7XHJcblxyXG4gICAgICAgICAgIHJlcy5qc29uKHtcclxuXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOid0b2RvcyBsb3MgcHJvZHVjdG9zIHJlZ2lzdHJhZG9zIGRlbCBjb21lcmNpbycsXHJcbiAgICAgICAgICAgICAgICBwcm9kdWN0b3NcclxuXHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTonTm8gc2UgZW5jb250cm8gcmVnaXN0cm9zIGRlIHByb2R1Y3Rvcy4nICAgICAgXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgXHJcbiAgICAgXHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgbWVzc2FnZTonYWxnbyBzYWxpbyBtYWwgb2J0ZW5pZW5kbyBsb3MgcHJvZHVjdG9zJyxcclxuICAgICAgICAgICAgICBkYXRhOntlcnJvcn1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICB9XHJcbn1cclxuXHJcbi8qKiBPYnRlbmVyIHRvZG9zIGxvcyBwcm9kdWN0b3MgKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFsbChyZXEscmVzKXtcclxuXHJcbiAgICB0cnkge1xyXG5cclxuICAgICAgICBsZXQgcHJvZHVjdG9zID0gYXdhaXQgUHJvZHVjdG8uZmluZEFsbCgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmKCBwcm9kdWN0b3Mpe1xyXG5cclxuICAgICAgICAgICByZXMuanNvbih7XHJcblxyXG4gICAgICAgICAgICAgICAgbWVzc2FnZTondG9kb3MgbG9zIHByb2R1Y3RvcyByZWdpc3RyYWRvcycsXHJcbiAgICAgICAgICAgICAgICBwcm9kdWN0b3NcclxuXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOidObyBzZSBlbmNvbnRybyByZWdpc3Ryb3MgZGUgcHJvZHVjdG9zLicgICAgICBcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICAgICBcclxuICBcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICBtZXNzYWdlOidubyBzZSBlbmNvbnRybyBuaW5ndW4gcHJvZHVjdG8nLFxyXG4gICAgICAgICAgICAgIGRhdGE6e2Vycm9yfVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgIH0gXHJcbn1cclxuXHJcblxyXG4vKnRvZG9zIGxvcyBwcm9kdWN0b3MgZGUgdW4gcGVkaWRvKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFByb2R1Y3Rvc1BvclBlZGlkbyhyZXEscmVzKVxyXG57XHJcbnZhciB7aWRwZWRpZG99ID0gcmVxLnBhcmFtcztcclxudHJ5e1xyXG52YXIgc3FscXVlcnk9ICdzZWxlY3QgcHJvZHVjdG9zLiogIGZyb20gaXRlbXMsIHByb2R1Y3RvcyB3aGVyZSBwcm9kdWN0b3MucHJvZF9pZD1pdGVtcy5pdGVtX3Byb2R1Y3RvaWQgYW5kIGl0ZW1zLml0ZW1fcGVkaWRvaWQ9Jy5jb25jYXQoaWRwZWRpZG8pO1xyXG5cclxubGV0IHByb2R1Y3RvcyAgPSAgYXdhaXQgc2VxdWVsaXplLnF1ZXJ5KHNxbHF1ZXJ5ICx7IHR5cGU6IHNlcXVlbGl6ZS5RdWVyeVR5cGVzLlNFTEVDVH0pXHJcbiAgICBcclxuIGlmKHByb2R1Y3Rvcyl7XHJcblxyXG4gICAgICAgICAgIHJlcy5qc29uKHtcclxuXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOid0b2RvcyBsb3MgcHJvZHVjdG9zIHBhcmEgZWwgcGVkaWRvJyxcclxuICAgICAgICAgICAgICAgIHByb2R1Y3Rvc1xyXG5cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6J05vIHNlIGVuY29udHJvIHJlZ2lzdHJvcyBkZSBwcm9kdWN0b3MuJyAgICAgIFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgIFxyXG4gIFxyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xyXG4gICAgICAgICAgICAgIG1lc3NhZ2U6J3N1cmdpbyB1biBlcnJvcicsXHJcbiAgICAgICAgICAgICAgZGF0YTp7ZXJyb3J9XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgfSBcclxuXHJcbiB9XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "productoController.js"
      ],
      "names": [
        "getProductosPorComercio",
        "req",
        "res",
        "idcomercio",
        "params",
        "Producto",
        "findAll",
        "where",
        "prod_idcomercio",
        "productos",
        "json",
        "message",
        "status",
        "data",
        "error",
        "getAll",
        "getProductosPorPedido",
        "idpedido",
        "sqlquery",
        "concat",
        "sequelize",
        "query",
        "type",
        "QueryTypes",
        "SELECT"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;;;;;;;AAEA;SACsBA,uB;;;AAoCtB;;;;;;0BApCO,iBAAuCC,GAAvC,EAA2CC,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAEEC,YAAAA,UAFF,GAEgBF,GAAG,CAACG,MAFpB,CAEED,UAFF;AAAA;AAAA;AAAA,mBAKuBE,qBAASC,OAAT,CAAiB;AACnCC,cAAAA,KAAK,EAAE;AACEC,gBAAAA,eAAe,EAACL;AADlB;AAD4B,aAAjB,CALvB;;AAAA;AAKKM,YAAAA,SALL;;AAWC,gBAAGA,SAAH,EAAa;AAEVP,cAAAA,GAAG,CAACQ,IAAJ,CAAS;AAEJC,gBAAAA,OAAO,EAAC,8CAFJ;AAGJF,gBAAAA,SAAS,EAATA;AAHI,eAAT;AAOF,aATD,MAUI;AACAP,cAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AAzBF;AAAA;;AAAA;AAAA;AAAA;AA6BGT,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,yCADS;AAEjBE,cAAAA,IAAI,EAAC;AAACC,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AA7BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAqCeC,M;;;AA+BtB;;;;;;0BA/BO,kBAAsBd,GAAtB,EAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIuBG,qBAASC,OAAT,EAJvB;;AAAA;AAIKG,YAAAA,SAJL;;AAMC,gBAAIA,SAAJ,EAAc;AAEXP,cAAAA,GAAG,CAACQ,IAAJ,CAAS;AAEJC,gBAAAA,OAAO,EAAC,iCAFJ;AAGJF,gBAAAA,SAAS,EAATA;AAHI,eAAT;AAMF,aARD,MASI;AACAP,cAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AAnBF;AAAA;;AAAA;AAAA;AAAA;AAuBGT,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,gCADS;AAEjBE,cAAAA,IAAI,EAAC;AAACC,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AAvBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAgCeE,qB;;;;;;;0BAAf,kBAAqCf,GAArC,EAAyCC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFe,YAAAA,QAFE,GAEUhB,GAAG,CAACG,MAFd,CAEFa,QAFE;AAAA;AAIHC,YAAAA,QAJG,GAIO,mHAAmHC,MAAnH,CAA0HF,QAA1H,CAJP;AAAA;AAAA,mBAMiBG,oBAAUC,KAAV,CAAgBH,QAAhB,EAA0B;AAAEI,cAAAA,IAAI,EAAEF,oBAAUG,UAAV,CAAqBC;AAA7B,aAA1B,CANjB;;AAAA;AAMHf,YAAAA,SANG;;AAQN,gBAAGA,SAAH,EAAa;AAEHP,cAAAA,GAAG,CAACQ,IAAJ,CAAS;AAEJC,gBAAAA,OAAO,EAAC,oCAFJ;AAGJF,gBAAAA,SAAS,EAATA;AAHI,eAAT;AAMF,aARR,MASW;AACAP,cAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AArBF;AAAA;;AAAA;AAAA;AAAA;AAyBGT,YAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,iBADS;AAEjBE,cAAAA,IAAI,EAAC;AAACC,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AAzBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers",
      "sourcesContent": [
        "import Producto from '../models/Producto';\r\nimport {sequelize} from '../database/database';\r\n\r\n/*todos los productos de un comercio*/\r\nexport async function getProductosPorComercio(req,res)\r\n{\r\n    var {idcomercio} = req.params;\r\ntry {\r\n\r\n        let productos = await Producto.findAll({\r\n            where: {\r\n                     prod_idcomercio:idcomercio\r\n                    }\r\n                  });\r\n  \r\n        if(productos){\r\n\r\n           res.json({\r\n\r\n                message:'todos los productos registrados del comercio',\r\n                productos\r\n\r\n            });\r\n\r\n        }\r\n        else{\r\n            res.status(500).json({\r\n                message:'No se encontro registros de productos.'      \r\n            })\r\n        }\r\n       \r\n     \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'algo salio mal obteniendo los productos',\r\n              data:{error}\r\n          });\r\n      }\r\n}\r\n\r\n/** Obtener todos los productos */\r\nexport async function getAll(req,res){\r\n\r\n    try {\r\n\r\n        let productos = await Producto.findAll();\r\n        \r\n        if( productos){\r\n\r\n           res.json({\r\n\r\n                message:'todos los productos registrados',\r\n                productos\r\n\r\n            });\r\n        }\r\n        else{\r\n            res.status(500).json({\r\n                message:'No se encontro registros de productos.'      \r\n            })\r\n        }\r\n       \r\n  \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'no se encontro ningun producto',\r\n              data:{error}\r\n          });\r\n      } \r\n}\r\n\r\n\r\n/*todos los productos de un pedido*/\r\nexport async function getProductosPorPedido(req,res)\r\n{\r\nvar {idpedido} = req.params;\r\ntry{\r\nvar sqlquery= 'select productos.*  from items, productos where productos.prod_id=items.item_productoid and items.item_pedidoid='.concat(idpedido);\r\n\r\nlet productos  =  await sequelize.query(sqlquery ,{ type: sequelize.QueryTypes.SELECT})\r\n    \r\n if(productos){\r\n\r\n           res.json({\r\n\r\n                message:'todos los productos para el pedido',\r\n                productos\r\n\r\n            });\r\n        }\r\n        else{\r\n            res.status(500).json({\r\n                message:'No se encontro registros de productos.'      \r\n            })\r\n        }\r\n       \r\n  \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'surgio un error',\r\n              data:{error}\r\n          });\r\n      } \r\n\r\n }\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415538
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\models\\\\Producto.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\Producto.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\Producto.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\Producto.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
        "sourceFileName": "Producto.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* Defino modelo de los datos */\nvar Producto = _database.sequelize.define('productos', {\n  prod_id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  prod_value: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  prod_nombre: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  prod_idcomercio: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  prod_descripcion: {\n    type: _sequelize[\"default\"].TEXT\n  }\n});\n\nvar _default = Producto;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlByb2R1Y3RvLmpzIl0sIm5hbWVzIjpbIlByb2R1Y3RvIiwic2VxdWVsaXplIiwiZGVmaW5lIiwicHJvZF9pZCIsInR5cGUiLCJTZXF1ZWxpemUiLCJJTlRFR0VSIiwicHJpbWFyeUtleSIsInByb2RfdmFsdWUiLCJwcm9kX25vbWJyZSIsIlRFWFQiLCJwcm9kX2lkY29tZXJjaW8iLCJwcm9kX2Rlc2NyaXBjaW9uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQTtBQUNBLElBQU1BLFFBQVEsR0FBRUMsb0JBQVVDLE1BQVYsQ0FBaUIsV0FBakIsRUFBNkI7QUFFekNDLEVBQUFBLE9BQU8sRUFBQztBQUNKQyxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQURaO0FBRUpDLElBQUFBLFVBQVUsRUFBRTtBQUZSLEdBRmlDO0FBT3pDQyxFQUFBQSxVQUFVLEVBQUM7QUFDUEosSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEVCxHQVA4QjtBQVd6Q0csRUFBQUEsV0FBVyxFQUFDO0FBQ1JMLElBQUFBLElBQUksRUFBRUMsc0JBQVVLO0FBRFIsR0FYNkI7QUFlekNDLEVBQUFBLGVBQWUsRUFBQztBQUNaUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURKLEdBZnlCO0FBa0J6Q00sRUFBQUEsZ0JBQWdCLEVBQUM7QUFDYlIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUs7QUFESDtBQWxCd0IsQ0FBN0IsQ0FBaEI7O2VBdUJlVixRIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcR2lvdmFcXERlc2t0b3BcXFJlcG9UYWxsZXIyXFxzZXJ2ZXIyXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuaW1wb3J0IHtzZXF1ZWxpemV9IGZyb20gJy4uL2RhdGFiYXNlL2RhdGFiYXNlJztcclxuXHJcbi8qIERlZmlubyBtb2RlbG8gZGUgbG9zIGRhdG9zICovXHJcbmNvbnN0IFByb2R1Y3RvPSBzZXF1ZWxpemUuZGVmaW5lKCdwcm9kdWN0b3MnLHtcclxuXHJcbiAgICBwcm9kX2lkOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXHJcbiAgICB9LFxyXG5cclxuICAgIHByb2RfdmFsdWU6e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICAgIFxyXG4gICAgfSxcclxuICAgIHByb2Rfbm9tYnJlOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuXHJcbiAgICBwcm9kX2lkY29tZXJjaW86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICB9LFxyXG4gICAgcHJvZF9kZXNjcmlwY2lvbjp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH1cclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQcm9kdWN0bzsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Producto.js"
      ],
      "names": [
        "Producto",
        "sequelize",
        "define",
        "prod_id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "prod_value",
        "prod_nombre",
        "TEXT",
        "prod_idcomercio",
        "prod_descripcion"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;AACA,IAAMA,QAAQ,GAAEC,oBAAUC,MAAV,CAAiB,WAAjB,EAA6B;AAEzCC,EAAAA,OAAO,EAAC;AACJC,IAAAA,IAAI,EAAEC,sBAAUC,OADZ;AAEJC,IAAAA,UAAU,EAAE;AAFR,GAFiC;AAOzCC,EAAAA,UAAU,EAAC;AACPJ,IAAAA,IAAI,EAAEC,sBAAUC;AADT,GAP8B;AAWzCG,EAAAA,WAAW,EAAC;AACRL,IAAAA,IAAI,EAAEC,sBAAUK;AADR,GAX6B;AAezCC,EAAAA,eAAe,EAAC;AACZP,IAAAA,IAAI,EAAEC,sBAAUC;AADJ,GAfyB;AAkBzCM,EAAAA,gBAAgB,EAAC;AACbR,IAAAA,IAAI,EAAEC,sBAAUK;AADH;AAlBwB,CAA7B,CAAhB;;eAuBeV,Q",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../database/database';\r\n\r\n/* Defino modelo de los datos */\r\nconst Producto= sequelize.define('productos',{\r\n\r\n    prod_id:{\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n\r\n    prod_value:{\r\n        type: Sequelize.INTEGER\r\n      \r\n    },\r\n    prod_nombre:{\r\n        type: Sequelize.TEXT\r\n    },\r\n\r\n    prod_idcomercio:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    prod_descripcion:{\r\n        type: Sequelize.TEXT\r\n    }\r\n});\r\n\r\nexport default Producto;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415599
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\rutas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\rutas\\\\pedidos.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas\\pedidos.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas\\pedidos.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas\\pedidos.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas",
        "sourceFileName": "pedidos.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _pedidoController = require(\"../controllers/pedidoController\");\n\nvar _userController = require(\"../controllers/userController\");\n\nvar router = (0, _express.Router)();\n/* Controladores \r\nseguramente falten.\r\n*/\n\n/* Rutas */\n\n/*obtener todos los pedidos*/\nrouter.get('/all', _userController.ensureToken, _userController.chequeoToken, _pedidoController.all);\n/* Obtengo el precio del envio antes de dar el registro del mismo en pendiente*/\n\nrouter.get('/getPrecioEnvio', _userController.ensureToken, _userController.chequeoToken, _pedidoController.getPrecioEnvio);\n/* registrarPedido */\n\nrouter.post('/registrarPedido', _userController.ensureToken, _userController.chequeoToken, _pedidoController.registrarPedido);\n/* Obtener pedido por idUsuario */\n\nrouter.get('/getPedidosUsuario/:idUsuario', _userController.ensureToken, _userController.chequeoToken, _pedidoController.getPedidosUsuario);\n/* Obtener pedido por idDelivery */\n\nrouter.get('/getPedidosDelivery/:idDelivery', _userController.ensureToken, _userController.chequeoToken, _pedidoController.getPedidosDelivery);\n/* Obtener pedidos cercanos al Delivery */\n\nrouter.get('/getPedidosPendientesParaDelivery/', _userController.ensureToken, _userController.chequeoToken, _pedidoController.getPedidosPendientesParaDelivery);\n/* setear pedido tomad por idDelivery */\n\nrouter.post('/asignarPedidoADelivery/', _userController.ensureToken, _userController.chequeoToken, _pedidoController.asignarPedidoADelivery);\n/* Exporto */\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlZGlkb3MuanMiXSwibmFtZXMiOlsicm91dGVyIiwiZ2V0IiwiZW5zdXJlVG9rZW4iLCJjaGVxdWVvVG9rZW4iLCJhbGwiLCJnZXRQcmVjaW9FbnZpbyIsInBvc3QiLCJyZWdpc3RyYXJQZWRpZG8iLCJnZXRQZWRpZG9zVXN1YXJpbyIsImdldFBlZGlkb3NEZWxpdmVyeSIsImdldFBlZGlkb3NQZW5kaWVudGVzUGFyYURlbGl2ZXJ5IiwiYXNpZ25hclBlZGlkb0FEZWxpdmVyeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQVFBOztBQVNBOztBQWZBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUdDOzs7O0FBaUJEOztBQUNBO0FBQ0FBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLE1BQVgsRUFBa0JDLDJCQUFsQixFQUE4QkMsNEJBQTlCLEVBQTJDQyxxQkFBM0M7QUFFQTs7QUFDQUosTUFBTSxDQUFDQyxHQUFQLENBQVcsaUJBQVgsRUFBNkJDLDJCQUE3QixFQUF5Q0MsNEJBQXpDLEVBQXNERSxnQ0FBdEQ7QUFFQTs7QUFDQUwsTUFBTSxDQUFDTSxJQUFQLENBQVksa0JBQVosRUFBK0JKLDJCQUEvQixFQUEyQ0MsNEJBQTNDLEVBQXdESSxpQ0FBeEQ7QUFFQTs7QUFDQVAsTUFBTSxDQUFDQyxHQUFQLENBQVcsK0JBQVgsRUFBMkNDLDJCQUEzQyxFQUF1REMsNEJBQXZELEVBQXFFSyxtQ0FBckU7QUFFQTs7QUFDQVIsTUFBTSxDQUFDQyxHQUFQLENBQVcsaUNBQVgsRUFBNkNDLDJCQUE3QyxFQUF5REMsNEJBQXpELEVBQXVFTSxvQ0FBdkU7QUFFQTs7QUFDQVQsTUFBTSxDQUFDQyxHQUFQLENBQVcsb0NBQVgsRUFBZ0RDLDJCQUFoRCxFQUE0REMsNEJBQTVELEVBQTBFTyxrREFBMUU7QUFFQTs7QUFDQVYsTUFBTSxDQUFDTSxJQUFQLENBQVksMEJBQVosRUFBdUNKLDJCQUF2QyxFQUFtREMsNEJBQW5ELEVBQWlFUSx3Q0FBakU7QUFHQzs7ZUFDY1gsTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEdpb3ZhXFxEZXNrdG9wXFxSZXBvVGFsbGVyMlxcc2VydmVyMlxcc3JjXFxydXRhcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Um91dGVyfSBmcm9tICdleHByZXNzJ1xyXG5cclxuY29uc3Qgcm91dGVyID0gUm91dGVyKClcclxuICAgXHJcblxyXG4gLyogQ29udHJvbGFkb3JlcyBcclxuXHRzZWd1cmFtZW50ZSBmYWx0ZW4uXHJcbiovXHJcbmltcG9ydCB7IGFsbCxcclxuXHQgICAgIGdldFByZWNpb0VudmlvLFxyXG5cdFx0IHJlZ2lzdHJhclBlZGlkbyxcclxuXHRcdCBnZXRQZWRpZG9zVXN1YXJpbyxcclxuXHRcdCBnZXRQZWRpZG9zRGVsaXZlcnksXHJcblx0XHQgZ2V0UGVkaWRvc1BlbmRpZW50ZXNQYXJhRGVsaXZlcnksXHJcblx0XHQgYXNpZ25hclBlZGlkb0FEZWxpdmVyeVxyXG4gICAgICAgIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvcGVkaWRvQ29udHJvbGxlcic7XHJcblxyXG5pbXBvcnQgeyBcclxuXHQgICAgZW5zdXJlVG9rZW4sY2hlcXVlb1Rva2VuXHJcblx0ICAgfSBmcm9tICcuLi9jb250cm9sbGVycy91c2VyQ29udHJvbGxlcic7XHJcbiAgIFxyXG4gICBcclxuLyogUnV0YXMgKi9cclxuLypvYnRlbmVyIHRvZG9zIGxvcyBwZWRpZG9zKi9cclxucm91dGVyLmdldCgnL2FsbCcsZW5zdXJlVG9rZW4sY2hlcXVlb1Rva2VuLGFsbCk7XHJcblxyXG4vKiBPYnRlbmdvIGVsIHByZWNpbyBkZWwgZW52aW8gYW50ZXMgZGUgZGFyIGVsIHJlZ2lzdHJvIGRlbCBtaXNtbyBlbiBwZW5kaWVudGUqL1xyXG5yb3V0ZXIuZ2V0KCcvZ2V0UHJlY2lvRW52aW8nLGVuc3VyZVRva2VuLGNoZXF1ZW9Ub2tlbixnZXRQcmVjaW9FbnZpbyk7XHJcblxyXG4vKiByZWdpc3RyYXJQZWRpZG8gKi9cclxucm91dGVyLnBvc3QoJy9yZWdpc3RyYXJQZWRpZG8nLGVuc3VyZVRva2VuLGNoZXF1ZW9Ub2tlbixyZWdpc3RyYXJQZWRpZG8pO1xyXG5cclxuLyogT2J0ZW5lciBwZWRpZG8gcG9yIGlkVXN1YXJpbyAqL1xyXG5yb3V0ZXIuZ2V0KCcvZ2V0UGVkaWRvc1VzdWFyaW8vOmlkVXN1YXJpbycsZW5zdXJlVG9rZW4sY2hlcXVlb1Rva2VuLCBnZXRQZWRpZG9zVXN1YXJpbyk7XHJcblxyXG4vKiBPYnRlbmVyIHBlZGlkbyBwb3IgaWREZWxpdmVyeSAqL1xyXG5yb3V0ZXIuZ2V0KCcvZ2V0UGVkaWRvc0RlbGl2ZXJ5LzppZERlbGl2ZXJ5JyxlbnN1cmVUb2tlbixjaGVxdWVvVG9rZW4sIGdldFBlZGlkb3NEZWxpdmVyeSk7XHJcblxyXG4vKiBPYnRlbmVyIHBlZGlkb3MgY2VyY2Fub3MgYWwgRGVsaXZlcnkgKi9cclxucm91dGVyLmdldCgnL2dldFBlZGlkb3NQZW5kaWVudGVzUGFyYURlbGl2ZXJ5LycsZW5zdXJlVG9rZW4sY2hlcXVlb1Rva2VuLCBnZXRQZWRpZG9zUGVuZGllbnRlc1BhcmFEZWxpdmVyeSk7XHJcblxyXG4vKiBzZXRlYXIgcGVkaWRvIHRvbWFkIHBvciBpZERlbGl2ZXJ5ICovXHJcbnJvdXRlci5wb3N0KCcvYXNpZ25hclBlZGlkb0FEZWxpdmVyeS8nLGVuc3VyZVRva2VuLGNoZXF1ZW9Ub2tlbiwgYXNpZ25hclBlZGlkb0FEZWxpdmVyeSk7XHJcblxyXG5cclxuIC8qIEV4cG9ydG8gKi9cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyXHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "pedidos.js"
      ],
      "names": [
        "router",
        "get",
        "ensureToken",
        "chequeoToken",
        "all",
        "getPrecioEnvio",
        "post",
        "registrarPedido",
        "getPedidosUsuario",
        "getPedidosDelivery",
        "getPedidosPendientesParaDelivery",
        "asignarPedidoADelivery"
      ],
      "mappings": ";;;;;;;AAAA;;AAQA;;AASA;;AAfA,IAAMA,MAAM,GAAG,sBAAf;AAGC;;;;AAiBD;;AACA;AACAA,MAAM,CAACC,GAAP,CAAW,MAAX,EAAkBC,2BAAlB,EAA8BC,4BAA9B,EAA2CC,qBAA3C;AAEA;;AACAJ,MAAM,CAACC,GAAP,CAAW,iBAAX,EAA6BC,2BAA7B,EAAyCC,4BAAzC,EAAsDE,gCAAtD;AAEA;;AACAL,MAAM,CAACM,IAAP,CAAY,kBAAZ,EAA+BJ,2BAA/B,EAA2CC,4BAA3C,EAAwDI,iCAAxD;AAEA;;AACAP,MAAM,CAACC,GAAP,CAAW,+BAAX,EAA2CC,2BAA3C,EAAuDC,4BAAvD,EAAqEK,mCAArE;AAEA;;AACAR,MAAM,CAACC,GAAP,CAAW,iCAAX,EAA6CC,2BAA7C,EAAyDC,4BAAzD,EAAuEM,oCAAvE;AAEA;;AACAT,MAAM,CAACC,GAAP,CAAW,oCAAX,EAAgDC,2BAAhD,EAA4DC,4BAA5D,EAA0EO,kDAA1E;AAEA;;AACAV,MAAM,CAACM,IAAP,CAAY,0BAAZ,EAAuCJ,2BAAvC,EAAmDC,4BAAnD,EAAiEQ,wCAAjE;AAGC;;eACcX,M",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas",
      "sourcesContent": [
        "import {Router} from 'express'\r\n\r\nconst router = Router()\r\n   \r\n\r\n /* Controladores \r\n\tseguramente falten.\r\n*/\r\nimport { all,\r\n\t     getPrecioEnvio,\r\n\t\t registrarPedido,\r\n\t\t getPedidosUsuario,\r\n\t\t getPedidosDelivery,\r\n\t\t getPedidosPendientesParaDelivery,\r\n\t\t asignarPedidoADelivery\r\n        } from '../controllers/pedidoController';\r\n\r\nimport { \r\n\t    ensureToken,chequeoToken\r\n\t   } from '../controllers/userController';\r\n   \r\n   \r\n/* Rutas */\r\n/*obtener todos los pedidos*/\r\nrouter.get('/all',ensureToken,chequeoToken,all);\r\n\r\n/* Obtengo el precio del envio antes de dar el registro del mismo en pendiente*/\r\nrouter.get('/getPrecioEnvio',ensureToken,chequeoToken,getPrecioEnvio);\r\n\r\n/* registrarPedido */\r\nrouter.post('/registrarPedido',ensureToken,chequeoToken,registrarPedido);\r\n\r\n/* Obtener pedido por idUsuario */\r\nrouter.get('/getPedidosUsuario/:idUsuario',ensureToken,chequeoToken, getPedidosUsuario);\r\n\r\n/* Obtener pedido por idDelivery */\r\nrouter.get('/getPedidosDelivery/:idDelivery',ensureToken,chequeoToken, getPedidosDelivery);\r\n\r\n/* Obtener pedidos cercanos al Delivery */\r\nrouter.get('/getPedidosPendientesParaDelivery/',ensureToken,chequeoToken, getPedidosPendientesParaDelivery);\r\n\r\n/* setear pedido tomad por idDelivery */\r\nrouter.post('/asignarPedidoADelivery/',ensureToken,chequeoToken, asignarPedidoADelivery);\r\n\r\n\r\n /* Exporto */\r\nexport default router\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415604
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\controllers\\\\pedidoController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers\\pedidoController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers\\pedidoController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers\\pedidoController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers",
        "sourceFileName": "pedidoController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.all = all;\nexports.getPedidosUsuario = getPedidosUsuario;\nexports.getPedidosDelivery = getPedidosDelivery;\nexports.registrarPedido = registrarPedido;\nexports.getPedidosPendientesParaDelivery = getPedidosPendientesParaDelivery;\nexports.asignarPedidoADelivery = asignarPedidoADelivery;\nexports.getPrecioEnvio = getPrecioEnvio;\n\nvar _Pedido = _interopRequireDefault(require(\"../models/Pedido\"));\n\nvar _Producto = _interopRequireDefault(require(\"../models/Producto\"));\n\nvar _Item = _interopRequireDefault(require(\"../models/Item\"));\n\nvar _Service = require(\"../service/Service\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction all(_x, _x2) {\n  return _all.apply(this, arguments);\n} //obtengo los pedidos de usuario solicita pedido\n\n\nfunction _all() {\n  _all = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var pedidos;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _Pedido[\"default\"].findAll({\n              attributes: ['ped_id', 'ped_userid', 'ped_deliveryid']\n            });\n\n          case 3:\n            pedidos = _context.sent;\n\n            if (pedidos) {\n              res.json({\n                message: 'todos los pedidos registrados',\n                pedidos: pedidos\n              });\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'no se pudo obtener los pedidos',\n              data: _context.t0\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _all.apply(this, arguments);\n}\n\nfunction getPedidosUsuario(_x3, _x4) {\n  return _getPedidosUsuario.apply(this, arguments);\n} //obtengo los pedidos de usuario  delivery\n\n\nfunction _getPedidosUsuario() {\n  _getPedidosUsuario = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var idUsuario, pedidos;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            idUsuario = req.params.idUsuario;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _Pedido[\"default\"].findAll({\n              where: {\n                ped_userid: idUsuario\n              },\n              attributes: ['ped_id', 'ped_userid', 'ped_deliveryid', 'ped_total', 'ped_envio', 'ped_direccioninicio', 'ped_direcciondestino', 'ped_latitudinicio', 'ped_longitudinicio', 'ped_latituddestino', 'ped_longituddestino', 'ped_longituddestino', 'ped_estado']\n            });\n\n          case 4:\n            pedidos = _context2.sent;\n\n            if (pedidos) {\n              res.json({\n                message: 'pedidos del usuario',\n                pedidos: pedidos\n              });\n            } else {\n              res.json({\n                message: 'No se encontro registros de pedidos.'\n              });\n            }\n\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            res.status(500).json({\n              message: 'algo no funciono 1',\n              data: idusuario\n            });\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 8]]);\n  }));\n  return _getPedidosUsuario.apply(this, arguments);\n}\n\nfunction getPedidosDelivery(_x5, _x6) {\n  return _getPedidosDelivery.apply(this, arguments);\n} //registro el pedido pendiente\n\n\nfunction _getPedidosDelivery() {\n  _getPedidosDelivery = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var idDelivery, pedidos;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            idDelivery = req.params.idDelivery;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _Pedido[\"default\"].findAll({\n              where: {\n                ped_deliveryid: idDelivery\n              },\n              attributes: ['ped_id', 'ped_userid', 'ped_deliveryid', 'ped_total', 'ped_envio', 'ped_direccioninicio', 'ped_direcciondestino', 'ped_latitudinicio', 'ped_longitudinicio', 'ped_latituddestino', 'ped_longituddestino', 'ped_longituddestino', 'ped_estado']\n            });\n\n          case 4:\n            pedidos = _context3.sent;\n\n            if (pedidos) {\n              res.json({\n                message: 'pedidos del delivery',\n                pedidos: pedidos\n              });\n            } else {\n              res.json({\n                message: 'No se encontro registros de pedidos.'\n              });\n            }\n\n            _context3.next = 11;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            res.status(500).json({\n              message: 'algo no funciono',\n              data: idDelivery\n            });\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 8]]);\n  }));\n  return _getPedidosDelivery.apply(this, arguments);\n}\n\nfunction registrarPedido(_x7, _x8) {\n  return _registrarPedido.apply(this, arguments);\n} //obtengo los pedidos pendientes cercanos.\n\n\nfunction _registrarPedido() {\n  _registrarPedido = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body2, iduser, diri, dirf, lati, longi, latf, longf, items, pesoxkm, iddelivery, total, envio, estadopedido, idpedido, nuevoPedido, i, numItems, stringJson, idProducto, cantidad, productFound, nuevoitem, value, pedidoUpdate;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body2 = req.body, iduser = _req$body2.iduser, diri = _req$body2.diri, dirf = _req$body2.dirf, lati = _req$body2.lati, longi = _req$body2.longi, latf = _req$body2.latf, longf = _req$body2.longf, items = _req$body2.items;\n            pesoxkm = 1;\n            _context4.prev = 2;\n            iddelivery = 0;\n            total = 0;\n            envio = 0; //estadopedido=1 pendiente       \n\n            estadopedido = 1; //creo el pedido con total=0\n\n            idpedido = 0;\n            _context4.next = 10;\n            return _Pedido[\"default\"].create({\n              ped_userid: iduser,\n              ped_deliveryid: iddelivery,\n              ped_total: total,\n              ped_envio: envio,\n              ped_direccioninicio: diri,\n              ped_direcciondestino: dirf,\n              ped_latitudinicio: lati,\n              ped_longitudinicio: longi,\n              ped_latituddestino: latf,\n              ped_longituddestino: longf,\n              ped_estado: estadopedido\n            }, {\n              fields: ['ped_userid', 'ped_deliveryid', 'ped_total', 'ped_envio', 'ped_direccioninicio', 'ped_direcciondestino', 'ped_latitudinicio', 'ped_longitudinicio', 'ped_latituddestino', 'ped_longituddestino', 'ped_longituddestino', 'ped_estado']\n            });\n\n          case 10:\n            nuevoPedido = _context4.sent;\n\n            if (!nuevoPedido) {\n              _context4.next = 35;\n              break;\n            }\n\n            //obtengo el id pedido\n            idpedido = nuevoPedido.ped_id;\n            i = 0;\n            numItems = items.length; //saco todos los items\n\n          case 15:\n            if (!(i < numItems)) {\n              _context4.next = 30;\n              break;\n            }\n\n            //saco el string del json\n            stringJson = items[i]; //valores id y cantidad\n\n            idProducto = stringJson.id;\n            cantidad = stringJson.cantidad; //busco los datos del producto\n\n            _context4.next = 21;\n            return _Producto[\"default\"].findOne({\n              where: {\n                prod_id: idProducto\n              },\n              attributes: ['prod_value']\n            });\n\n          case 21:\n            productFound = _context4.sent;\n\n            if (!productFound) {\n              _context4.next = 27;\n              break;\n            }\n\n            _context4.next = 25;\n            return _Item[\"default\"].create({\n              item_pedidoid: idpedido,\n              item_productoid: idProducto,\n              item_cantidad: cantidad\n            }, {\n              fields: ['item_pedidoid', 'item_productoid', 'item_cantidad']\n            });\n\n          case 25:\n            nuevoitem = _context4.sent;\n\n            if (nuevoitem) {\n              value = productFound.prod_value;\n              total += value * cantidad;\n            }\n\n          case 27:\n            //incremento \n            i = i + 1;\n            _context4.next = 15;\n            break;\n\n          case 30:\n            envio = pesoxkm * parseInt((0, _Service.getKilometros)(latf, longf, lati, longi)); //hago el update del total del pedido  \n\n            _context4.next = 33;\n            return _Pedido[\"default\"].update({\n              ped_total: total,\n              ped_envio: envio\n            }, {\n              where: {\n                ped_id: idpedido\n              }\n            });\n\n          case 33:\n            pedidoUpdate = _context4.sent;\n\n            if (pedidoUpdate) {\n              //devuelvo el id pedido y el total\n              res.json({\n                message: 'pedido pendiente',\n                idpedido: idpedido,\n                total: total,\n                envio: envio\n              });\n            } else {\n              //devuelvo el id pedido y el total\n              res.status(500).json({\n                message: 'no se pudo hacer el update',\n                data: {\n                  error: error\n                }\n              });\n            }\n\n          case 35:\n            _context4.next = 40;\n            break;\n\n          case 37:\n            _context4.prev = 37;\n            _context4.t0 = _context4[\"catch\"](2);\n            res.status(500).json({\n              message: 'no se pudo registrar el pedido',\n              data: _context4.t0\n            });\n\n          case 40:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[2, 37]]);\n  }));\n  return _registrarPedido.apply(this, arguments);\n}\n\nfunction getPedidosPendientesParaDelivery(_x9, _x10) {\n  return _getPedidosPendientesParaDelivery.apply(this, arguments);\n} //asignacion de pedido a delivery\n\n\nfunction _getPedidosPendientesParaDelivery() {\n  _getPedidosPendientesParaDelivery = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    var _req$body3, lati, longi, estadopedido, maxkms, pedidos, pedidoscercanos;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _req$body3 = req.body, lati = _req$body3.lati, longi = _req$body3.longi;\n            estadopedido = 1;\n            maxkms = 20;\n            _context5.prev = 3;\n            _context5.next = 6;\n            return _Pedido[\"default\"].findAll({\n              where: {\n                ped_estado: estadopedido\n              },\n              attributes: ['ped_id', 'ped_userid', 'ped_deliveryid', 'ped_total', 'ped_envio', 'ped_direccioninicio', 'ped_direcciondestino', 'ped_latitudinicio', 'ped_longitudinicio', 'ped_latituddestino', 'ped_longituddestino', 'ped_longituddestino', 'ped_estado']\n            });\n\n          case 6:\n            pedidos = _context5.sent;\n\n            if (pedidos) {\n              //filtro los cercanos \n              pedidoscercanos = [];\n              pedidos.forEach(function (ped) {\n                var lat = ped.ped_latitudinicio;\n                var _long = ped.ped_longitudinicio;\n\n                if (parseInt((0, _Service.getKilometros)(lat, _long, lati, longi)) <= maxkms) {\n                  pedidoscercanos.push(ped);\n                }\n              });\n              res.json({\n                message: 'pedidos pendientes son:',\n                pedidoscercanos: pedidoscercanos\n              });\n            } else {\n              res.status(500).json({\n                message: 'No se encontro registros de pedidos.'\n              });\n            }\n\n            _context5.next = 13;\n            break;\n\n          case 10:\n            _context5.prev = 10;\n            _context5.t0 = _context5[\"catch\"](3);\n            res.status(500).json({\n              message: 'algo no funciono',\n              data: {\n                error: _context5.t0\n              }\n            });\n\n          case 13:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[3, 10]]);\n  }));\n  return _getPedidosPendientesParaDelivery.apply(this, arguments);\n}\n\nfunction asignarPedidoADelivery(_x11, _x12) {\n  return _asignarPedidoADelivery.apply(this, arguments);\n}\n/* obtengo el precio del envio antes de dar el ok o no al registro \r\npedido*/\n\n\nfunction _asignarPedidoADelivery() {\n  _asignarPedidoADelivery = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(req, res) {\n    var _req$body4, idpedido, iddelivery, estadoPendiente, estadoAsignado, pedidosSinAsignar, pedidoUpdate;\n\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _req$body4 = req.body, idpedido = _req$body4.idpedido, iddelivery = _req$body4.iddelivery;\n            estadoPendiente = 1;\n            estadoAsignado = 2;\n            _context6.prev = 3;\n            _context6.next = 6;\n            return _Pedido[\"default\"].count({\n              where: {\n                ped_id: idpedido,\n                ped_estado: estadoPendiente\n              }\n            });\n\n          case 6:\n            pedidosSinAsignar = _context6.sent;\n\n            if (!(pedidosSinAsignar > 0)) {\n              _context6.next = 14;\n              break;\n            }\n\n            _context6.next = 10;\n            return _Pedido[\"default\"].update({\n              ped_deliveryid: iddelivery,\n              ped_estado: estadoAsignado\n            }, {\n              where: {\n                ped_id: idpedido\n              }\n            });\n\n          case 10:\n            pedidoUpdate = _context6.sent;\n\n            if (pedidoUpdate) {\n              //devuelvo el id pedido y el delivery\n              res.json({\n                message: 'pedido asignado',\n                idpedido: idpedido,\n                iddelivery: iddelivery\n              });\n            } else {\n              res.status(500).json({\n                message: 'No se pudo asignar un pedido.'\n              });\n            }\n\n            _context6.next = 15;\n            break;\n\n          case 14:\n            res.status(500).json({\n              message: 'El pedido ya fue asignado.'\n            });\n\n          case 15:\n            _context6.next = 20;\n            break;\n\n          case 17:\n            _context6.prev = 17;\n            _context6.t0 = _context6[\"catch\"](3);\n            res.status(500).json({\n              message: 'algo no funciono',\n              data: {\n                error: _context6.t0\n              }\n            });\n\n          case 20:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[3, 17]]);\n  }));\n  return _asignarPedidoADelivery.apply(this, arguments);\n}\n\nfunction getPrecioEnvio(req, res) {\n  var _req$body = req.body,\n      lati = _req$body.lati,\n      longi = _req$body.longi,\n      latf = _req$body.latf,\n      longf = _req$body.longf;\n  var pesoxkm = 10;\n  var kms = (0, _Service.getKilometros)(latf, longf, lati, longi);\n  var envio = (0, _Service.getPrecioEnvioPorReglas)(1, 19, kms * pesoxkm, kms, 10, 1, 4343); //const re=  getPorcentajeEnvioPorReglas(0, 21, 500 ,11,1, 333);\n  //console.log(re);\n\n  res.json({\n    message: 'valor envio',\n    envio: envio\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "pedidoController.js"
      ],
      "names": [
        "all",
        "req",
        "res",
        "Pedido",
        "findAll",
        "attributes",
        "pedidos",
        "json",
        "message",
        "status",
        "data",
        "getPedidosUsuario",
        "idUsuario",
        "params",
        "where",
        "ped_userid",
        "idusuario",
        "getPedidosDelivery",
        "idDelivery",
        "ped_deliveryid",
        "registrarPedido",
        "body",
        "iduser",
        "diri",
        "dirf",
        "lati",
        "longi",
        "latf",
        "longf",
        "items",
        "pesoxkm",
        "iddelivery",
        "total",
        "envio",
        "estadopedido",
        "idpedido",
        "create",
        "ped_total",
        "ped_envio",
        "ped_direccioninicio",
        "ped_direcciondestino",
        "ped_latitudinicio",
        "ped_longitudinicio",
        "ped_latituddestino",
        "ped_longituddestino",
        "ped_estado",
        "fields",
        "nuevoPedido",
        "ped_id",
        "i",
        "numItems",
        "length",
        "stringJson",
        "idProducto",
        "id",
        "cantidad",
        "Producto",
        "findOne",
        "prod_id",
        "productFound",
        "Item",
        "item_pedidoid",
        "item_productoid",
        "item_cantidad",
        "nuevoitem",
        "value",
        "prod_value",
        "parseInt",
        "update",
        "pedidoUpdate",
        "error",
        "getPedidosPendientesParaDelivery",
        "maxkms",
        "pedidoscercanos",
        "forEach",
        "ped",
        "lat",
        "long",
        "push",
        "asignarPedidoADelivery",
        "estadoPendiente",
        "estadoAsignado",
        "count",
        "pedidosSinAsignar",
        "getPrecioEnvio",
        "kms"
      ],
      "mappings": ";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;SAKsBA,G;;EAyBtB;;;;;;0BAzBO,iBAAmBC,GAAnB,EAAwBC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAImBC,mBAAOC,OAAP,CAAe;AAAEC,cAAAA,UAAU,EAAE,CAAC,QAAD,EAAW,YAAX,EAAyB,gBAAzB;AAAd,aAAf,CAJnB;;AAAA;AAICC,YAAAA,OAJD;;AAMH,gBAAGA,OAAH,EACA;AACEJ,cAAAA,GAAG,CAACK,IAAJ,CAAS;AACLC,gBAAAA,OAAO,EAAC,+BADH;AAELF,gBAAAA,OAAO,EAAPA;AAFK,eAAT;AAKD;;AAbE;AAAA;;AAAA;AAAA;AAAA;AAiBLJ,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,gCADS;AAEjBE,cAAAA,IAAI;AAFa,aAArB;;AAjBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA0BeC,iB;;EAiDtB;;;;;;0BAjDO,kBAAiCV,GAAjC,EAAsCC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAGIU,YAAAA,SAHJ,GAGiBX,GAAG,CAACY,MAHrB,CAGID,SAHJ;AAAA;AAAA;AAAA,mBAOqBT,mBAAOC,OAAP,CAAe;AAC/BU,cAAAA,KAAK,EAAE;AACLC,gBAAAA,UAAU,EAACH;AADN,eADwB;AAI/BP,cAAAA,UAAU,EAAE,CACV,QADU,EAEV,YAFU,EAGV,gBAHU,EAIV,WAJU,EAKV,WALU,EAMV,qBANU,EAOV,sBAPU,EAQV,mBARU,EASV,oBATU,EAUV,oBAVU,EAWV,qBAXU,EAYV,qBAZU,EAaV,YAbU;AAJmB,aAAf,CAPrB;;AAAA;AAOKC,YAAAA,OAPL;;AA4BC,gBAAGA,OAAH,EAAW;AAEPJ,cAAAA,GAAG,CAACK,IAAJ,CAAS;AACPC,gBAAAA,OAAO,EAAC,qBADD;AAEPF,gBAAAA,OAAO,EAAPA;AAFO,eAAT;AAIH,aAND,MAMK;AACDJ,cAAAA,GAAG,CAACK,IAAJ,CAAS;AACLC,gBAAAA,OAAO,EAAC;AADH,eAAT;AAGH;;AAtCF;AAAA;;AAAA;AAAA;AAAA;AAyCCN,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,oBADS;AAEjBE,cAAAA,IAAI,EAACM;AAFY,aAArB;;AAzCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAkDeC,kB;;EAkDtB;;;;;;0BAlDO,kBAAkChB,GAAlC,EAAuCC,GAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAGIgB,YAAAA,UAHJ,GAGkBjB,GAAG,CAACY,MAHtB,CAGIK,UAHJ;AAAA;AAAA;AAAA,mBAOqBf,mBAAOC,OAAP,CAAe;AAC/BU,cAAAA,KAAK,EAAE;AACLK,gBAAAA,cAAc,EAACD;AADV,eADwB;AAI/Bb,cAAAA,UAAU,EAAE,CACV,QADU,EAEV,YAFU,EAGV,gBAHU,EAIV,WAJU,EAKV,WALU,EAMV,qBANU,EAOV,sBAPU,EAQV,mBARU,EASV,oBATU,EAUV,oBAVU,EAWV,qBAXU,EAYV,qBAZU,EAaV,YAbU;AAJmB,aAAf,CAPrB;;AAAA;AAOKC,YAAAA,OAPL;;AA4BC,gBAAGA,OAAH,EAAW;AAETJ,cAAAA,GAAG,CAACK,IAAJ,CAAS;AACPC,gBAAAA,OAAO,EAAC,sBADD;AAEPF,gBAAAA,OAAO,EAAPA;AAFO,eAAT;AAKD,aAPD,MAOK;AACDJ,cAAAA,GAAG,CAACK,IAAJ,CAAS;AACLC,gBAAAA,OAAO,EAAC;AADH,eAAT;AAGH;;AAvCF;AAAA;;AAAA;AAAA;AAAA;AA0CCN,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,kBADS;AAEjBE,cAAAA,IAAI,EAACQ;AAFY,aAArB;;AA1CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAmDeE,e;;EAuItB;;;;;;0BAvIO,kBAA+BnB,GAA/B,EAAoCC,GAApC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAE8CD,GAAG,CAACoB,IAFlD,EAEFC,MAFE,cAEFA,MAFE,EAEKC,IAFL,cAEKA,IAFL,EAEUC,IAFV,cAEUA,IAFV,EAEeC,IAFf,cAEeA,IAFf,EAEoBC,KAFpB,cAEoBA,KAFpB,EAE0BC,IAF1B,cAE0BA,IAF1B,EAE+BC,KAF/B,cAE+BA,KAF/B,EAEqCC,KAFrC,cAEqCA,KAFrC;AAGHC,YAAAA,OAHG,GAGK,CAHL;AAAA;AAMSC,YAAAA,UANT,GAMoB,CANpB;AAOSC,YAAAA,KAPT,GAOe,CAPf;AAQSC,YAAAA,KART,GAQe,CARf,EASK;;AACIC,YAAAA,YAVT,GAUsB,CAVtB,EAWK;;AACIC,YAAAA,QAZT,GAYkB,CAZlB;AAAA;AAAA,mBAc6BhC,mBAAOiC,MAAP,CAAc;AACtCrB,cAAAA,UAAU,EAAEO,MAD0B;AAEtCH,cAAAA,cAAc,EAAEY,UAFsB;AAGtCM,cAAAA,SAAS,EAAEL,KAH2B;AAItCM,cAAAA,SAAS,EAAEL,KAJ2B;AAKtCM,cAAAA,mBAAmB,EAAEhB,IALiB;AAMtCiB,cAAAA,oBAAoB,EAAEhB,IANgB;AAOtCiB,cAAAA,iBAAiB,EAAEhB,IAPmB;AAQtCiB,cAAAA,kBAAkB,EAAEhB,KARkB;AAStCiB,cAAAA,kBAAkB,EAAEhB,IATkB;AAUtCiB,cAAAA,mBAAmB,EAAEhB,KAViB;AAWtCiB,cAAAA,UAAU,EAACX;AAX2B,aAAd,EAc1B;AACAY,cAAAA,MAAM,EAAC,CACL,YADK,EAEL,gBAFK,EAGL,WAHK,EAIL,WAJK,EAKL,qBALK,EAML,sBANK,EAOL,mBAPK,EAQL,oBARK,EASL,oBATK,EAUL,qBAVK,EAWL,qBAXK,EAYL,YAZK;AADP,aAd0B,CAd7B;;AAAA;AAcSC,YAAAA,WAdT;;AAAA,iBA+CQA,WA/CR;AAAA;AAAA;AAAA;;AAiDK;AACAZ,YAAAA,QAAQ,GAAEY,WAAW,CAACC,MAAtB;AACIC,YAAAA,CAnDT,GAmDa,CAnDb;AAoDWC,YAAAA,QApDX,GAoDqBrB,KAAK,CAACsB,MApD3B,EAqDK;;AArDL;AAAA,kBAsDYF,CAAC,GAAGC,QAtDhB;AAAA;AAAA;AAAA;;AAwDO;AACIE,YAAAA,UAzDX,GAyDsBvB,KAAK,CAACoB,CAAD,CAzD3B,EA0DO;;AACMI,YAAAA,UA3Db,GA2DyBD,UAAU,CAACE,EA3DpC;AA4DaC,YAAAA,QA5Db,GA4DyBH,UAAU,CAACG,QA5DpC,EA6DO;;AA7DP;AAAA,mBA8DkCC,qBAASC,OAAT,CAAiB;AACtC3C,cAAAA,KAAK,EAAE;AACC4C,gBAAAA,OAAO,EAACL;AADT,eAD+B;AAItChD,cAAAA,UAAU,EAAE,CAAC,YAAD;AAJ0B,aAAjB,CA9DlC;;AAAA;AA8DasD,YAAAA,YA9Db;;AAAA,iBAqEUA,YArEV;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAuE+BC,iBAAKxB,MAAL,CAAY;AACpByB,cAAAA,aAAa,EAAE1B,QADK;AAEpB2B,cAAAA,eAAe,EAAET,UAFG;AAGpBU,cAAAA,aAAa,EAAER;AAHK,aAAZ,EAIL;AACLT,cAAAA,MAAM,EAAC,CACP,eADO,EAEP,iBAFO,EAGP,eAHO;AADF,aAJK,CAvE/B;;AAAA;AAuEakB,YAAAA,SAvEb;;AAmFS,gBAAGA,SAAH,EACD;AACIC,cAAAA,KADJ,GACUN,YAAY,CAACO,UADvB;AAEAlC,cAAAA,KAAK,IAAEiC,KAAK,GAACV,QAAb;AACC;;AAvFT;AAyFJ;AACCN,YAAAA,CAAC,GAAGA,CAAC,GAAC,CAAN;AA1FG;AAAA;;AAAA;AA6FJhB,YAAAA,KAAK,GAACH,OAAO,GAACqC,QAAQ,CAAC,4BAAcxC,IAAd,EAAmBC,KAAnB,EAAyBH,IAAzB,EAA8BC,KAA9B,CAAD,CAAtB,CA7FI,CA8FL;;AA9FK;AAAA,mBA+FmBvB,mBAAOiE,MAAP,CACtB;AAAE/B,cAAAA,SAAS,EAAEL,KAAb;AACEM,cAAAA,SAAS,EAAEL;AADb,aADsB,EAItB;AAAEnB,cAAAA,KAAK,EAAE;AAAEkC,gBAAAA,MAAM,EAAEb;AAAV;AAAT,aAJsB,CA/FnB;;AAAA;AA+FDkC,YAAAA,YA/FC;;AAsGL,gBAAGA,YAAH,EACG;AACA;AACDnE,cAAAA,GAAG,CAACK,IAAJ,CACA;AACAC,gBAAAA,OAAO,EAAC,kBADR;AAEC2B,gBAAAA,QAAQ,EAARA,QAFD;AAEUH,gBAAAA,KAAK,EAALA,KAFV;AAEgBC,gBAAAA,KAAK,EAALA;AAFhB,eADA;AAMC,aATH,MAWE;AACG;AACA/B,cAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACpBC,gBAAAA,OAAO,EAAC,4BADY;AAEpBE,gBAAAA,IAAI,EAAC;AAAC4D,kBAAAA,KAAK,EAALA;AAAD;AAFe,eAArB;AAKF;;AAxHE;AAAA;AAAA;;AAAA;AAAA;AAAA;AA+HLpE,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,gCADS;AAEjBE,cAAAA,IAAI;AAFa,aAArB;;AA/HK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAwIe6D,gC;;EAkEtB;;;;;;0BAlEO,kBAAgDtE,GAAhD,EAAqDC,GAArD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEcD,GAAG,CAACoB,IAFlB,EAEAI,IAFA,cAEAA,IAFA,EAEKC,KAFL,cAEKA,KAFL;AAGDQ,YAAAA,YAHC,GAGY,CAHZ;AAIDsC,YAAAA,MAJC,GAIM,EAJN;AAAA;AAAA;AAAA,mBAQiBrE,mBAAOC,OAAP,CAAe;AAC/BU,cAAAA,KAAK,EAAE;AACL+B,gBAAAA,UAAU,EAAEX;AADP,eADwB;AAI/B7B,cAAAA,UAAU,EAAE,CACV,QADU,EAEV,YAFU,EAGV,gBAHU,EAIV,WAJU,EAKV,WALU,EAMV,qBANU,EAOV,sBAPU,EAQV,mBARU,EASV,oBATU,EAUV,oBAVU,EAWV,qBAXU,EAYV,qBAZU,EAaV,YAbU;AAJmB,aAAf,CARjB;;AAAA;AAQCC,YAAAA,OARD;;AA6BH,gBAAGA,OAAH,EAAW;AACT;AACImE,cAAAA,eAFK,GAEW,EAFX;AAGTnE,cAAAA,OAAO,CAACoE,OAAR,CACE,UAACC,GAAD,EAAS;AACR,oBAAIC,GAAG,GAAED,GAAG,CAAClC,iBAAb;AACA,oBAAIoC,KAAI,GAACF,GAAG,CAACjC,kBAAb;;AACD,oBAAGyB,QAAQ,CAAC,4BAAcS,GAAd,EAAkBC,KAAlB,EAAuBpD,IAAvB,EAA4BC,KAA5B,CAAD,CAAR,IAA8C8C,MAAjD,EACC;AACCC,kBAAAA,eAAe,CAACK,IAAhB,CAAqBH,GAArB;AACA;AAEG,eATP;AAaIzE,cAAAA,GAAG,CAACK,IAAJ,CACA;AACEC,gBAAAA,OAAO,EAAC,yBADV;AAEEiE,gBAAAA,eAAe,EAAfA;AAFF,eADA;AAQL,aAxBD,MAwBK;AACDvE,cAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AAzDE;AAAA;;AAAA;AAAA;AAAA;AA4DHN,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,kBADS;AAEjBE,cAAAA,IAAI,EAAC;AAAC4D,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AA5DG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAmEeS,sB;;;AA8DtB;;;;;;;0BA9DO,kBAAsC9E,GAAtC,EAA2CC,GAA3C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEqBD,GAAG,CAACoB,IAFzB,EAEFc,QAFE,cAEFA,QAFE,EAEOJ,UAFP,cAEOA,UAFP;AAGHiD,YAAAA,eAHG,GAGa,CAHb;AAIHC,YAAAA,cAJG,GAIY,CAJZ;AAAA;AAAA;AAAA,mBAQyB9E,mBAAO+E,KAAP,CAAa;AAC3CpE,cAAAA,KAAK,EAAE;AACLkC,gBAAAA,MAAM,EAAEb,QADH;AAELU,gBAAAA,UAAU,EAAEmC;AAFP;AADoC,aAAb,CARzB;;AAAA;AAQDG,YAAAA,iBARC;;AAAA,kBAgBJA,iBAAiB,GAAC,CAhBd;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAmBoBhF,mBAAOiE,MAAP,CACvB;AACAjD,cAAAA,cAAc,EAAEY,UADhB;AAEAc,cAAAA,UAAU,EAACoC;AAFX,aADuB,EAKzB;AACEnE,cAAAA,KAAK,EAAE;AAAEkC,gBAAAA,MAAM,EAAEb;AAAV;AADT,aALyB,CAnBpB;;AAAA;AAmBCkC,YAAAA,YAnBD;;AA6BL,gBAAGA,YAAH,EACA;AACC;AACAnE,cAAAA,GAAG,CAACK,IAAJ,CACC;AACAC,gBAAAA,OAAO,EAAC,iBADR;AAEA2B,gBAAAA,QAAQ,EAARA,QAFA;AAESJ,gBAAAA,UAAU,EAAVA;AAFT,eADD;AAKA,aARD,MAUA;AACE7B,cAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGA;;AA3CG;AAAA;;AAAA;AA+CHN,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACrBC,cAAAA,OAAO,EAAC;AADa,aAArB;;AA/CG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAwDLN,YAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,kBADS;AAEjBE,cAAAA,IAAI,EAAC;AAAC4D,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AAxDK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgEC,SAASc,cAAT,CAAwBnF,GAAxB,EAA6BC,GAA7B,EACR;AAAA,kBACgCD,GAAG,CAACoB,IADpC;AAAA,MACOI,IADP,aACOA,IADP;AAAA,MACYC,KADZ,aACYA,KADZ;AAAA,MACkBC,IADlB,aACkBA,IADlB;AAAA,MACuBC,KADvB,aACuBA,KADvB;AAEE,MAAIE,OAAO,GAAC,EAAZ;AACA,MAAIuD,GAAG,GAAC,4BAAc1D,IAAd,EAAmBC,KAAnB,EAAyBH,IAAzB,EAA8BC,KAA9B,CAAR;AAEA,MAAKO,KAAK,GAAK,sCAAwB,CAAxB,EAA0B,EAA1B,EAA6BoD,GAAG,GAACvD,OAAjC,EAAyCuD,GAAzC,EAA6C,EAA7C,EAAgD,CAAhD,EAAkD,IAAlD,CAAf,CALF,CAOE;AACA;;AACAnF,EAAAA,GAAG,CAACK,IAAJ,CACE;AACCC,IAAAA,OAAO,EAAC,aADT;AAECyB,IAAAA,KAAK,EAALA;AAFD,GADF;AAOD",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers",
      "sourcesContent": [
        "import Pedido from '../models/Pedido'\r\nimport Producto from '../models/Producto'\r\nimport Item from '../models/Item'\r\nimport {getKilometros, getPrecioEnvioPorReglas, getPorcentajeEnvioPorReglas}  from '../service/Service'\r\n//import jwt from 'jsonwebtoken'\r\n\r\n\r\n// todos los pedidos sin ningun filtro.\r\nexport async function all(req, res) \r\n{\r\n  try {\r\n\r\n    let pedidos =   await Pedido.findAll({ attributes: ['ped_id', 'ped_userid', 'ped_deliveryid'] })\r\n  \r\n    if(pedidos)\r\n    {\r\n      res.json({\r\n          message:'todos los pedidos registrados',\r\n          pedidos\r\n      })\r\n\r\n    }\r\n\r\n \r\n} catch (error) {\r\n  res.status(500).json({\r\n      message:'no se pudo obtener los pedidos',\r\n      data:error\r\n  });\r\n}\r\n}\r\n\r\n\r\n//obtengo los pedidos de usuario solicita pedido\r\nexport async function getPedidosUsuario(req, res)\r\n{\r\n    \r\n    const {idUsuario} = req.params;\r\n \r\n    try {\r\n\r\n        let pedidos = await Pedido.findAll({\r\n            where: {\r\n              ped_userid:idUsuario\r\n            },\r\n            attributes: [\r\n              'ped_id',\r\n              'ped_userid',\r\n              'ped_deliveryid',\r\n              'ped_total',\r\n              'ped_envio',\r\n              'ped_direccioninicio',\r\n              'ped_direcciondestino',\r\n              'ped_latitudinicio',\r\n              'ped_longitudinicio',\r\n              'ped_latituddestino',\r\n              'ped_longituddestino',\r\n              'ped_longituddestino',  \r\n              'ped_estado'\r\n           ]\r\n        });\r\n\r\n        if(pedidos){\r\n    \r\n            res.json({\r\n              message:'pedidos del usuario',\r\n              pedidos});\r\n\r\n        }else{\r\n            res.json({\r\n                message:'No se encontro registros de pedidos.'      \r\n            })\r\n        }\r\n        \r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message:'algo no funciono 1',\r\n            data:idusuario\r\n        });\r\n    }\r\n}\r\n\r\n\r\n//obtengo los pedidos de usuario  delivery\r\nexport async function getPedidosDelivery(req, res)\r\n{\r\n    \r\n    const {idDelivery} = req.params;\r\n   \r\n    try {\r\n\r\n        let pedidos = await Pedido.findAll({\r\n            where: {\r\n              ped_deliveryid:idDelivery\r\n            },\r\n            attributes: [\r\n              'ped_id',\r\n              'ped_userid',\r\n              'ped_deliveryid',\r\n              'ped_total',\r\n              'ped_envio',\r\n              'ped_direccioninicio',\r\n              'ped_direcciondestino',\r\n              'ped_latitudinicio',\r\n              'ped_longitudinicio',\r\n              'ped_latituddestino',\r\n              'ped_longituddestino',\r\n              'ped_longituddestino',  \r\n              'ped_estado'\r\n           ]\r\n        });\r\n\r\n        if(pedidos){\r\n    \r\n          res.json({\r\n            message:'pedidos del delivery',\r\n            pedidos});\r\n               \r\n\r\n        }else{\r\n            res.json({\r\n                message:'No se encontro registros de pedidos.'      \r\n            })\r\n        }\r\n        \r\n    } catch (error) {\r\n        res.status(500).json({\r\n            message:'algo no funciono',\r\n            data:idDelivery\r\n        });\r\n    }\r\n}\r\n\r\n\r\n//registro el pedido pendiente\r\nexport async function registrarPedido(req, res)\r\n{  \r\nvar {iduser,diri,dirf,lati,longi,latf,longf,items} = req.body;\r\nvar pesoxkm=1\r\n  try{\r\n\r\n            var iddelivery=0;\r\n            var total=0;\r\n            var envio=0;\r\n            //estadopedido=1 pendiente       \r\n            var estadopedido=1;\r\n            //creo el pedido con total=0\r\n            var idpedido=0;\r\n\r\n            let nuevoPedido = await Pedido.create({\r\n            ped_userid: iduser,\r\n            ped_deliveryid: iddelivery,\r\n            ped_total: total,\r\n            ped_envio: envio,\r\n            ped_direccioninicio: diri,\r\n            ped_direcciondestino: dirf,\r\n            ped_latitudinicio: lati,\r\n            ped_longitudinicio: longi,\r\n            ped_latituddestino: latf,\r\n            ped_longituddestino: longf,\r\n            ped_estado:estadopedido\r\n          }\r\n            ,\r\n          {\r\n          fields:[\r\n            'ped_userid',\r\n            'ped_deliveryid',\r\n            'ped_total',\r\n            'ped_envio',\r\n            'ped_direccioninicio',\r\n            'ped_direcciondestino',\r\n            'ped_latitudinicio',\r\n            'ped_longitudinicio',\r\n            'ped_latituddestino',\r\n            'ped_longituddestino',\r\n            'ped_longituddestino',  \r\n            'ped_estado'\r\n            ]\r\n          }\r\n        )\r\n \r\n\r\n            if(nuevoPedido)\r\n            {\r\n            //obtengo el id pedido\r\n            idpedido =nuevoPedido.ped_id;\r\n            var i = 0;\r\n            const numItems= items.length;\r\n            //saco todos los items\r\n            while (i < numItems)\r\n            {\r\n              //saco el string del json\r\n              var stringJson=items[i];\r\n              //valores id y cantidad\r\n              const idProducto= stringJson.id\r\n              const cantidad  = stringJson.cantidad\r\n              //busco los datos del producto\r\n              const productFound = await Producto.findOne({\r\n                    where: {\r\n                            prod_id:idProducto\r\n                            },\r\n                    attributes: ['prod_value']\r\n                          });\r\n              //encontre el producto y creo el item\r\n              if(productFound)\r\n              {\r\n                let nuevoitem = await Item.create({\r\n                              item_pedidoid: idpedido,\r\n                              item_productoid: idProducto,\r\n                              item_cantidad: cantidad\r\n                              } ,{\r\n                            fields:[ \r\n                            'item_pedidoid',\r\n                            'item_productoid',\r\n                            'item_cantidad',\r\n                                  ]\r\n                                }\r\n                            );\r\n                if(nuevoitem)   \r\n               {  \r\n               var value=productFound.prod_value;\r\n               total+=value*cantidad;        \r\n               }             \r\n             }\r\n   //incremento \r\n    i = i+1;\r\n  }\r\n\r\n   envio=pesoxkm*parseInt(getKilometros(latf,longf,lati,longi))\r\n  //hago el update del total del pedido  \r\n  let pedidoUpdate= await Pedido.update(\r\n    { ped_total: total,\r\n      ped_envio: envio\r\n     },\r\n    { where: { ped_id: idpedido } }\r\n     )\r\n\r\n  if(pedidoUpdate)\r\n     {      \r\n     //devuelvo el id pedido y el total\r\n    res.json(\r\n    {\r\n    message:'pedido pendiente',\r\n     idpedido,total,envio\r\n     })\r\n    \r\n    }\r\n    else\r\n    {\r\n       //devuelvo el id pedido y el total\r\n       res.status(500).json({\r\n        message:'no se pudo hacer el update',\r\n        data:{error}\r\n      });\r\n        \r\n    }\r\n \r\n\r\n  }\r\n\r\n\r\n} catch (error) {\r\n  res.status(500).json({\r\n      message:'no se pudo registrar el pedido',\r\n      data:error\r\n  });\r\n}\r\n  \r\n}\r\n\r\n//obtengo los pedidos pendientes cercanos.\r\nexport async function getPedidosPendientesParaDelivery(req, res)\r\n{\r\n  var {lati,longi} = req.body;\r\n  var estadopedido=1\r\n  var maxkms=20\r\n\r\n  try {\r\n   /*hay que usar lati y longi para buscar los pedidos cercanos */\r\n    let pedidos = await Pedido.findAll({\r\n        where: {\r\n          ped_estado: estadopedido\r\n        },\r\n        attributes: [\r\n          'ped_id',\r\n          'ped_userid',\r\n          'ped_deliveryid',\r\n          'ped_total',\r\n          'ped_envio',\r\n          'ped_direccioninicio',\r\n          'ped_direcciondestino',\r\n          'ped_latitudinicio',\r\n          'ped_longitudinicio',\r\n          'ped_latituddestino',\r\n          'ped_longituddestino',\r\n          'ped_longituddestino',  \r\n          'ped_estado'\r\n       ]\r\n    });\r\n\r\n    if(pedidos){\r\n      //filtro los cercanos \r\n      var pedidoscercanos=[] ;\r\n      pedidos.forEach( \r\n        (ped) => { \r\n         var lat =ped.ped_latitudinicio;\r\n         var long=ped.ped_longitudinicio;\r\n        if(parseInt(getKilometros(lat,long,lati,longi))<=maxkms)\r\n         {\r\n          pedidoscercanos.push(ped);\r\n         }\r\n\r\n            }\r\n          );\r\n      \r\n\r\n          res.json(\r\n          {\r\n            message:'pedidos pendientes son:',\r\n            pedidoscercanos\r\n          })\r\n\r\n\r\n\r\n    }else{\r\n        res.status(500).json({\r\n            message:'No se encontro registros de pedidos.'      \r\n        })\r\n    }\r\n    \r\n} catch (error) {\r\n    res.status(500).json({\r\n        message:'algo no funciono',\r\n        data:{error}\r\n    });\r\n}\r\n}\r\n//asignacion de pedido a delivery\r\nexport async function asignarPedidoADelivery(req, res)\r\n{\r\nvar {idpedido,iddelivery} = req.body;  \r\nvar estadoPendiente=1;  \r\nvar estadoAsignado=2;\r\ntry\r\n{ \r\n  //me fijo si el pedido no fue asignado\r\n  var pedidosSinAsignar = await Pedido.count({\r\n  where: {\r\n    ped_id: idpedido, \r\n    ped_estado: estadoPendiente\r\n  }\r\n});\r\n\r\n\r\nif(pedidosSinAsignar>0)\r\n   {\r\n   //hago el update del pedido  \r\n    let pedidoUpdate=await Pedido.update(\r\n    {\r\n    ped_deliveryid: iddelivery,\r\n    ped_estado:estadoAsignado\r\n   },\r\n  { \r\n    where: { ped_id: idpedido } }\r\n   )\r\n\r\n\r\n  if(pedidoUpdate)\r\n  {\r\n   //devuelvo el id pedido y el delivery\r\n   res.json(\r\n    {\r\n    message:'pedido asignado',\r\n    idpedido,iddelivery\r\n     })\r\n  }\r\n  else\r\n  {\r\n    res.status(500).json({\r\n        message:'No se pudo asignar un pedido.'      \r\n    })\r\n   }\r\n}\r\nelse \r\n{\r\n    res.status(500).json({\r\n    message:'El pedido ya fue asignado.'      \r\n})\r\n\r\n}\r\n\r\n}\r\n\r\ncatch (error) {\r\n  res.status(500).json({\r\n      message:'algo no funciono',\r\n      data:{error}\r\n  });\r\n}\r\n}\r\n/* obtengo el precio del envio antes de dar el ok o no al registro \r\npedido*/ \r\nexport  function getPrecioEnvio(req, res)\r\n{\r\n  var {lati,longi,latf,longf} = req.body;\r\n  var pesoxkm=10;\r\n  var kms=getKilometros(latf,longf,lati,longi);\r\n\r\n  var  envio=    getPrecioEnvioPorReglas(1,19,kms*pesoxkm,kms,10,1,4343);\r\n \r\n  //const re=  getPorcentajeEnvioPorReglas(0, 21, 500 ,11,1, 333);\r\n  //console.log(re);\r\n  res.json(\r\n    {\r\n     message:'valor envio',\r\n     envio\r\n  }\r\n  );\r\n\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415538
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\models\\\\Pedido.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\Pedido.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\Pedido.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\Pedido.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
        "sourceFileName": "Pedido.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/** Defino modelo de los datos */\nvar Pedido = _database.sequelize.define('pedido', {\n  ped_id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  ped_userid: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  ped_deliveryid: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  ped_total: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  ped_envio: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  ped_direccioninicio: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  ped_direcciondestino: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  ped_latitudinicio: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  ped_longitudinicio: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  ped_latituddestino: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  ped_longituddestino: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  ped_descripcion: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  ped_estado: {\n    type: _sequelize[\"default\"].INTEGER\n  }\n});\n\nvar _default = Pedido;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlBlZGlkby5qcyJdLCJuYW1lcyI6WyJQZWRpZG8iLCJzZXF1ZWxpemUiLCJkZWZpbmUiLCJwZWRfaWQiLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJwZWRfdXNlcmlkIiwicGVkX2RlbGl2ZXJ5aWQiLCJwZWRfdG90YWwiLCJwZWRfZW52aW8iLCJwZWRfZGlyZWNjaW9uaW5pY2lvIiwiVEVYVCIsInBlZF9kaXJlY2Npb25kZXN0aW5vIiwicGVkX2xhdGl0dWRpbmljaW8iLCJET1VCTEUiLCJwZWRfbG9uZ2l0dWRpbmljaW8iLCJwZWRfbGF0aXR1ZGRlc3Rpbm8iLCJwZWRfbG9uZ2l0dWRkZXN0aW5vIiwicGVkX2Rlc2NyaXBjaW9uIiwicGVkX2VzdGFkbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7O0FBRUE7QUFFQSxJQUFNQSxNQUFNLEdBQUdDLG9CQUFVQyxNQUFWLENBQWlCLFFBQWpCLEVBQTBCO0FBRXJDQyxFQUFBQSxNQUFNLEVBQUM7QUFDSEMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEYjtBQUVIQyxJQUFBQSxVQUFVLEVBQUU7QUFGVCxHQUY4QjtBQU9yQ0MsRUFBQUEsVUFBVSxFQUFDO0FBQ1BKLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRFQsR0FQMEI7QUFVckNHLEVBQUFBLGNBQWMsRUFBQztBQUNYTCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURMLEdBVnNCO0FBYXJDSSxFQUFBQSxTQUFTLEVBQUM7QUFDTk4sSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEVixHQWIyQjtBQWdCckNLLEVBQUFBLFNBQVMsRUFBQztBQUNOUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURWLEdBaEIyQjtBQW1CckNNLEVBQUFBLG1CQUFtQixFQUFDO0FBQ2pCUixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVUTtBQURDLEdBbkJpQjtBQXNCckNDLEVBQUFBLG9CQUFvQixFQUFDO0FBQ2JWLElBQUFBLElBQUksRUFBRUMsc0JBQVVRO0FBREgsR0F0QmdCO0FBeUJyQ0UsRUFBQUEsaUJBQWlCLEVBQUM7QUFDZFgsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVVc7QUFERixHQXpCbUI7QUE0QnJDQyxFQUFBQSxrQkFBa0IsRUFBQztBQUNmYixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVVztBQURELEdBNUJrQjtBQStCckNFLEVBQUFBLGtCQUFrQixFQUFDO0FBQ2ZkLElBQUFBLElBQUksRUFBRUMsc0JBQVVXO0FBREQsR0EvQmtCO0FBa0NyQ0csRUFBQUEsbUJBQW1CLEVBQUM7QUFDaEJmLElBQUFBLElBQUksRUFBRUMsc0JBQVVXO0FBREEsR0FsQ2lCO0FBcUNyQ0ksRUFBQUEsZUFBZSxFQUFDO0FBQ1poQixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVUTtBQURKLEdBckNxQjtBQXdDckNRLEVBQUFBLFVBQVUsRUFBRTtBQUNSakIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEUjtBQXhDeUIsQ0FBMUIsQ0FBZjs7ZUE2Q2VOLE0iLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxHaW92YVxcRGVza3RvcFxcUmVwb1RhbGxlcjJcXHNlcnZlcjJcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNlcXVlbGl6ZSBmcm9tICdzZXF1ZWxpemUnO1xyXG5pbXBvcnQge3NlcXVlbGl6ZX0gZnJvbSAnLi4vZGF0YWJhc2UvZGF0YWJhc2UnO1xyXG5cclxuLyoqIERlZmlubyBtb2RlbG8gZGUgbG9zIGRhdG9zICovXHJcblxyXG5jb25zdCBQZWRpZG8gPSBzZXF1ZWxpemUuZGVmaW5lKCdwZWRpZG8nLHtcclxuXHJcbiAgICBwZWRfaWQ6e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxyXG4gICAgICAgIHByaW1hcnlLZXk6IHRydWVcclxuICAgIH0sXHJcblxyXG4gICAgcGVkX3VzZXJpZDp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH0sXHJcbiAgICBwZWRfZGVsaXZlcnlpZDp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH0sXHJcbiAgICBwZWRfdG90YWw6e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXHJcbiAgICB9LFxyXG4gICAgcGVkX2VudmlvOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuICAgIHBlZF9kaXJlY2Npb25pbmljaW86e1xyXG4gICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBwZWRfZGlyZWNjaW9uZGVzdGlubzp7XHJcbiAgICAgICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LCAgIFxyXG4gICAgcGVkX2xhdGl0dWRpbmljaW86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5ET1VCTEVcclxuICAgIH0sXHJcbiAgICBwZWRfbG9uZ2l0dWRpbmljaW86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5ET1VCTEVcclxuICAgIH0sXHJcbiAgICBwZWRfbGF0aXR1ZGRlc3Rpbm86e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5ET1VCTEVcclxuICAgIH0sXHJcbiAgICBwZWRfbG9uZ2l0dWRkZXN0aW5vOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuRE9VQkxFXHJcbiAgICB9LFxyXG4gICAgcGVkX2Rlc2NyaXBjaW9uOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxyXG4gICAgfSxcclxuICAgIHBlZF9lc3RhZG8gOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfVxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBlZGlkbzsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Pedido.js"
      ],
      "names": [
        "Pedido",
        "sequelize",
        "define",
        "ped_id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "ped_userid",
        "ped_deliveryid",
        "ped_total",
        "ped_envio",
        "ped_direccioninicio",
        "TEXT",
        "ped_direcciondestino",
        "ped_latitudinicio",
        "DOUBLE",
        "ped_longitudinicio",
        "ped_latituddestino",
        "ped_longituddestino",
        "ped_descripcion",
        "ped_estado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;AAEA,IAAMA,MAAM,GAAGC,oBAAUC,MAAV,CAAiB,QAAjB,EAA0B;AAErCC,EAAAA,MAAM,EAAC;AACHC,IAAAA,IAAI,EAAEC,sBAAUC,OADb;AAEHC,IAAAA,UAAU,EAAE;AAFT,GAF8B;AAOrCC,EAAAA,UAAU,EAAC;AACPJ,IAAAA,IAAI,EAAEC,sBAAUC;AADT,GAP0B;AAUrCG,EAAAA,cAAc,EAAC;AACXL,IAAAA,IAAI,EAAEC,sBAAUC;AADL,GAVsB;AAarCI,EAAAA,SAAS,EAAC;AACNN,IAAAA,IAAI,EAAEC,sBAAUC;AADV,GAb2B;AAgBrCK,EAAAA,SAAS,EAAC;AACNP,IAAAA,IAAI,EAAEC,sBAAUC;AADV,GAhB2B;AAmBrCM,EAAAA,mBAAmB,EAAC;AACjBR,IAAAA,IAAI,EAAEC,sBAAUQ;AADC,GAnBiB;AAsBrCC,EAAAA,oBAAoB,EAAC;AACbV,IAAAA,IAAI,EAAEC,sBAAUQ;AADH,GAtBgB;AAyBrCE,EAAAA,iBAAiB,EAAC;AACdX,IAAAA,IAAI,EAAEC,sBAAUW;AADF,GAzBmB;AA4BrCC,EAAAA,kBAAkB,EAAC;AACfb,IAAAA,IAAI,EAAEC,sBAAUW;AADD,GA5BkB;AA+BrCE,EAAAA,kBAAkB,EAAC;AACfd,IAAAA,IAAI,EAAEC,sBAAUW;AADD,GA/BkB;AAkCrCG,EAAAA,mBAAmB,EAAC;AAChBf,IAAAA,IAAI,EAAEC,sBAAUW;AADA,GAlCiB;AAqCrCI,EAAAA,eAAe,EAAC;AACZhB,IAAAA,IAAI,EAAEC,sBAAUQ;AADJ,GArCqB;AAwCrCQ,EAAAA,UAAU,EAAE;AACRjB,IAAAA,IAAI,EAAEC,sBAAUC;AADR;AAxCyB,CAA1B,CAAf;;eA6CeN,M",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../database/database';\r\n\r\n/** Defino modelo de los datos */\r\n\r\nconst Pedido = sequelize.define('pedido',{\r\n\r\n    ped_id:{\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n\r\n    ped_userid:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    ped_deliveryid:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    ped_total:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    ped_envio:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    ped_direccioninicio:{\r\n       type: Sequelize.TEXT\r\n    },\r\n    ped_direcciondestino:{\r\n            type: Sequelize.TEXT\r\n    },   \r\n    ped_latitudinicio:{\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    ped_longitudinicio:{\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    ped_latituddestino:{\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    ped_longituddestino:{\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    ped_descripcion:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    ped_estado :{\r\n        type: Sequelize.INTEGER\r\n    }\r\n});\r\n\r\nexport default Pedido;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415598
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\models\\\\Item.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\Item.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\Item.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\Item.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
        "sourceFileName": "Item.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* Defino modelo de los datos */\nvar Item = _database.sequelize.define('item', {\n  item_id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  item_pedidoid: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  item_productoid: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  item_cantidad: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  item_descripcion: {\n    type: _sequelize[\"default\"].TEXT\n  }\n});\n\nvar _default = Item;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkl0ZW0uanMiXSwibmFtZXMiOlsiSXRlbSIsInNlcXVlbGl6ZSIsImRlZmluZSIsIml0ZW1faWQiLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJpdGVtX3BlZGlkb2lkIiwiaXRlbV9wcm9kdWN0b2lkIiwiaXRlbV9jYW50aWRhZCIsIml0ZW1fZGVzY3JpcGNpb24iLCJURVhUIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFHQTtBQUNBLElBQU1BLElBQUksR0FBRUMsb0JBQVVDLE1BQVYsQ0FBaUIsTUFBakIsRUFBd0I7QUFFaENDLEVBQUFBLE9BQU8sRUFBQztBQUNKQyxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQyxPQURaO0FBRUpDLElBQUFBLFVBQVUsRUFBRTtBQUZSLEdBRndCO0FBT2hDQyxFQUFBQSxhQUFhLEVBQUM7QUFDVkosSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFETixHQVBrQjtBQVloQ0csRUFBQUEsZUFBZSxFQUFDO0FBQ1pMLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBREosR0FaZ0I7QUFnQmhDSSxFQUFBQSxhQUFhLEVBQUM7QUFDVk4sSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFETixHQWhCa0I7QUFtQmhDSyxFQUFBQSxnQkFBZ0IsRUFBQztBQUNiUCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVTztBQURIO0FBbkJlLENBQXhCLENBQVo7O2VBMEJlWixJIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcR2lvdmFcXERlc2t0b3BcXFJlcG9UYWxsZXIyXFxzZXJ2ZXIyXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuaW1wb3J0IHtzZXF1ZWxpemV9IGZyb20gJy4uL2RhdGFiYXNlL2RhdGFiYXNlJztcclxuXHJcblxyXG4vKiBEZWZpbm8gbW9kZWxvIGRlIGxvcyBkYXRvcyAqL1xyXG5jb25zdCBJdGVtPSBzZXF1ZWxpemUuZGVmaW5lKCdpdGVtJyx7XHJcblxyXG4gICAgaXRlbV9pZDp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXHJcbiAgICAgICAgcHJpbWFyeUtleTogdHJ1ZVxyXG4gICAgfSxcclxuICAgXHJcbiAgICBpdGVtX3BlZGlkb2lkOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG5cclxuICAgIH0sXHJcblxyXG4gICAgaXRlbV9wcm9kdWN0b2lkOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG5cclxuICAgIH0sXHJcbiAgICBpdGVtX2NhbnRpZGFkOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxyXG4gICAgfSxcclxuICAgIGl0ZW1fZGVzY3JpcGNpb246e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9XHJcblxyXG4gICAgXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgSXRlbTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Item.js"
      ],
      "names": [
        "Item",
        "sequelize",
        "define",
        "item_id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "item_pedidoid",
        "item_productoid",
        "item_cantidad",
        "item_descripcion",
        "TEXT"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAGA;AACA,IAAMA,IAAI,GAAEC,oBAAUC,MAAV,CAAiB,MAAjB,EAAwB;AAEhCC,EAAAA,OAAO,EAAC;AACJC,IAAAA,IAAI,EAAEC,sBAAUC,OADZ;AAEJC,IAAAA,UAAU,EAAE;AAFR,GAFwB;AAOhCC,EAAAA,aAAa,EAAC;AACVJ,IAAAA,IAAI,EAAEC,sBAAUC;AADN,GAPkB;AAYhCG,EAAAA,eAAe,EAAC;AACZL,IAAAA,IAAI,EAAEC,sBAAUC;AADJ,GAZgB;AAgBhCI,EAAAA,aAAa,EAAC;AACVN,IAAAA,IAAI,EAAEC,sBAAUC;AADN,GAhBkB;AAmBhCK,EAAAA,gBAAgB,EAAC;AACbP,IAAAA,IAAI,EAAEC,sBAAUO;AADH;AAnBe,CAAxB,CAAZ;;eA0BeZ,I",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../database/database';\r\n\r\n\r\n/* Defino modelo de los datos */\r\nconst Item= sequelize.define('item',{\r\n\r\n    item_id:{\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n   \r\n    item_pedidoid:{\r\n        type: Sequelize.INTEGER\r\n\r\n    },\r\n\r\n    item_productoid:{\r\n        type: Sequelize.INTEGER\r\n\r\n    },\r\n    item_cantidad:{\r\n        type: Sequelize.INTEGER\r\n    },\r\n    item_descripcion:{\r\n        type: Sequelize.TEXT\r\n    }\r\n\r\n    \r\n});\r\n\r\nexport default Item;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415588
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\service\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\service\\\\Service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\service",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\service\\Service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\service\\Service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\service\\Service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\service",
        "sourceFileName": "Service.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPrecioEnvioPorReglas = getPrecioEnvioPorReglas;\nexports.getPorcentajeEnvioPorReglas = getPorcentajeEnvioPorReglas;\nexports.getKilometros = getKilometros;\n\nvar _nools = _interopRequireDefault(require(\"nools\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar flowUser = _nools[\"default\"].compile(require.resolve('../res/user_reglas.nools'));\n\nvar UserDatos = flowUser.getDefined('UsuarioDatos');\n\nvar flowDelivery = _nools[\"default\"].compile(require.resolve('../res/delivery_reglas.nools'));\n\nvar DeliveryDatos = flowDelivery.getDefined('DeliveryDatos');\n\nfunction getPrecioEnvioPorReglas(ndia, hora, envio, kms, cantPedidos, nivel, points) {\n  var usersData = [new UserDatos({\n    envio: envio,\n    kms: kms,\n    cantidadPedidos: cantPedidos,\n    ndia: ndia,\n    hora: hora,\n    nivel: nivel,\n    puntos: points\n  })];\n  var session = flowUser.getSession.apply(flowUser, usersData);\n  var r = 0;\n  session.match();\n\n  for (var i = 0; i < usersData.length; i++) {\n    r += usersData[i].envio;\n  }\n\n  session.dispose();\n  return r;\n}\n\nfunction getPorcentajeEnvioPorReglas(ndia, hora, envio, cantidadEnviosDia, nivel, points) {\n  var deliveryData = [new DeliveryDatos({\n    envio: envio,\n    cantidadEnviosDia: cantidadEnviosDia,\n    ndia: ndia,\n    hora: hora,\n    nivel: nivel,\n    puntos: points\n  })];\n  var session = flowDelivery.getSession.apply(flowDelivery, deliveryData);\n  var r = 0;\n  session.match();\n\n  for (var i = 0; i < deliveryData.length; i++) {\n    r += deliveryData[i].resultado;\n  }\n\n  session.dispose();\n  return r;\n} //devuelve los kms entre dos posiciones\n\n\nfunction getKilometros(lat1, lon1, lat2, lon2) {\n  //local\n  function rad(x) {\n    return x * Math.PI / 180;\n  } //radio de la tierra en km\n\n\n  var R = 6.378137;\n  var dLat = rad(lat2 - lat1);\n  var dLong = rad(lon2 - lon1);\n  var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(rad(lat1)) * Math.cos(rad(lat2)) * Math.sin(dLong / 2) * Math.sin(dLong / 2);\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  var d = R * c; //retorna tres decimales\n\n  return d.toFixed(3);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlcnZpY2UuanMiXSwibmFtZXMiOlsiZmxvd1VzZXIiLCJub29scyIsImNvbXBpbGUiLCJyZXF1aXJlIiwicmVzb2x2ZSIsIlVzZXJEYXRvcyIsImdldERlZmluZWQiLCJmbG93RGVsaXZlcnkiLCJEZWxpdmVyeURhdG9zIiwiZ2V0UHJlY2lvRW52aW9Qb3JSZWdsYXMiLCJuZGlhIiwiaG9yYSIsImVudmlvIiwia21zIiwiY2FudFBlZGlkb3MiLCJuaXZlbCIsInBvaW50cyIsInVzZXJzRGF0YSIsImNhbnRpZGFkUGVkaWRvcyIsInB1bnRvcyIsInNlc3Npb24iLCJnZXRTZXNzaW9uIiwiYXBwbHkiLCJyIiwibWF0Y2giLCJpIiwibGVuZ3RoIiwiZGlzcG9zZSIsImdldFBvcmNlbnRhamVFbnZpb1BvclJlZ2xhcyIsImNhbnRpZGFkRW52aW9zRGlhIiwiZGVsaXZlcnlEYXRhIiwicmVzdWx0YWRvIiwiZ2V0S2lsb21ldHJvcyIsImxhdDEiLCJsb24xIiwibGF0MiIsImxvbjIiLCJyYWQiLCJ4IiwiTWF0aCIsIlBJIiwiUiIsImRMYXQiLCJkTG9uZyIsImEiLCJzaW4iLCJjb3MiLCJjIiwiYXRhbjIiLCJzcXJ0IiwiZCIsInRvRml4ZWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUNBOzs7O0FBQ0EsSUFBTUEsUUFBUSxHQUFHQyxrQkFBTUMsT0FBTixDQUFjQyxPQUFPLENBQUNDLE9BQVIsQ0FBZ0IsMEJBQWhCLENBQWQsQ0FBakI7O0FBQ0EsSUFBTUMsU0FBUyxHQUFHTCxRQUFRLENBQUNNLFVBQVQsQ0FBb0IsY0FBcEIsQ0FBbEI7O0FBRUEsSUFBTUMsWUFBWSxHQUFHTixrQkFBTUMsT0FBTixDQUFjQyxPQUFPLENBQUNDLE9BQVIsQ0FBZ0IsOEJBQWhCLENBQWQsQ0FBckI7O0FBQ0EsSUFBTUksYUFBYSxHQUFHRCxZQUFZLENBQUNELFVBQWIsQ0FBd0IsZUFBeEIsQ0FBdEI7O0FBRU8sU0FBU0csdUJBQVQsQ0FBaUNDLElBQWpDLEVBQXVDQyxJQUF2QyxFQUE2Q0MsS0FBN0MsRUFBb0RDLEdBQXBELEVBQXlEQyxXQUF6RCxFQUFxRUMsS0FBckUsRUFBNEVDLE1BQTVFLEVBQ1A7QUFDSSxNQUFJQyxTQUFTLEdBQUksQ0FBRSxJQUFLWixTQUFMLENBQWU7QUFBQ08sSUFBQUEsS0FBSyxFQUFFQSxLQUFSO0FBQWVDLElBQUFBLEdBQUcsRUFBRUEsR0FBcEI7QUFBeUJLLElBQUFBLGVBQWUsRUFBRUosV0FBMUM7QUFBdURKLElBQUFBLElBQUksRUFBQ0EsSUFBNUQ7QUFBbUVDLElBQUFBLElBQUksRUFBRUEsSUFBekU7QUFBK0VJLElBQUFBLEtBQUssRUFBQ0EsS0FBckY7QUFBNEZJLElBQUFBLE1BQU0sRUFBRUg7QUFBcEcsR0FBZixDQUFGLENBQWpCO0FBQ0EsTUFBSUksT0FBTyxHQUFHcEIsUUFBUSxDQUFDcUIsVUFBVCxDQUFvQkMsS0FBcEIsQ0FBMEJ0QixRQUExQixFQUFvQ2lCLFNBQXBDLENBQWQ7QUFFRSxNQUFJTSxDQUFDLEdBQUMsQ0FBTjtBQUVESCxFQUFBQSxPQUFPLENBQUNJLEtBQVI7O0FBRUMsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHUixTQUFTLENBQUNTLE1BQTlCLEVBQXNDRCxDQUFDLEVBQXZDLEVBQTJDO0FBQzFDRixJQUFBQSxDQUFDLElBQUVOLFNBQVMsQ0FBQ1EsQ0FBRCxDQUFULENBQWFiLEtBQWhCO0FBQ0E7O0FBQ0RRLEVBQUFBLE9BQU8sQ0FBQ08sT0FBUjtBQUVBLFNBQU9KLENBQVA7QUFDTDs7QUFHTSxTQUFTSywyQkFBVCxDQUFxQ2xCLElBQXJDLEVBQTJDQyxJQUEzQyxFQUFpREMsS0FBakQsRUFBd0RpQixpQkFBeEQsRUFBMEVkLEtBQTFFLEVBQWlGQyxNQUFqRixFQUNQO0FBQ0ksTUFBSWMsWUFBWSxHQUFJLENBQUUsSUFBS3RCLGFBQUwsQ0FBbUI7QUFBQ0ksSUFBQUEsS0FBSyxFQUFFQSxLQUFSO0FBQWVpQixJQUFBQSxpQkFBaUIsRUFBRUEsaUJBQWxDO0FBQXFEbkIsSUFBQUEsSUFBSSxFQUFDQSxJQUExRDtBQUFpRUMsSUFBQUEsSUFBSSxFQUFFQSxJQUF2RTtBQUE2RUksSUFBQUEsS0FBSyxFQUFDQSxLQUFuRjtBQUEwRkksSUFBQUEsTUFBTSxFQUFFSDtBQUFsRyxHQUFuQixDQUFGLENBQXBCO0FBQ0EsTUFBSUksT0FBTyxHQUFHYixZQUFZLENBQUNjLFVBQWIsQ0FBd0JDLEtBQXhCLENBQThCZixZQUE5QixFQUE0Q3VCLFlBQTVDLENBQWQ7QUFDQyxNQUFJUCxDQUFDLEdBQUMsQ0FBTjtBQUVBSCxFQUFBQSxPQUFPLENBQUNJLEtBQVI7O0FBRUMsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSyxZQUFZLENBQUNKLE1BQWpDLEVBQXlDRCxDQUFDLEVBQTFDLEVBQThDO0FBQzdDRixJQUFBQSxDQUFDLElBQUVPLFlBQVksQ0FBQ0wsQ0FBRCxDQUFaLENBQWdCTSxTQUFuQjtBQUNBOztBQUNEWCxFQUFBQSxPQUFPLENBQUNPLE9BQVI7QUFFQSxTQUFPSixDQUFQO0FBRUMsQyxDQVVQOzs7QUFDTyxTQUFTUyxhQUFULENBQXdCQyxJQUF4QixFQUErQkMsSUFBL0IsRUFBcUNDLElBQXJDLEVBQTJDQyxJQUEzQyxFQUNQO0FBQ0E7QUFDQSxXQUFTQyxHQUFULENBQWVDLENBQWYsRUFBa0I7QUFBQyxXQUFPQSxDQUFDLEdBQUNDLElBQUksQ0FBQ0MsRUFBUCxHQUFVLEdBQWpCO0FBQXNCLEdBRnpDLENBR0M7OztBQUNELE1BQUlDLENBQUMsR0FBRyxRQUFSO0FBQ0EsTUFBSUMsSUFBSSxHQUFHTCxHQUFHLENBQUVGLElBQUksR0FBR0YsSUFBVCxDQUFkO0FBQ0EsTUFBSVUsS0FBSyxHQUFHTixHQUFHLENBQUVELElBQUksR0FBR0YsSUFBVCxDQUFmO0FBRUEsTUFBSVUsQ0FBQyxHQUFHTCxJQUFJLENBQUNNLEdBQUwsQ0FBU0gsSUFBSSxHQUFDLENBQWQsSUFBbUJILElBQUksQ0FBQ00sR0FBTCxDQUFTSCxJQUFJLEdBQUMsQ0FBZCxDQUFuQixHQUFzQ0gsSUFBSSxDQUFDTyxHQUFMLENBQVNULEdBQUcsQ0FBQ0osSUFBRCxDQUFaLElBQXNCTSxJQUFJLENBQUNPLEdBQUwsQ0FBU1QsR0FBRyxDQUFDRixJQUFELENBQVosQ0FBdEIsR0FBNENJLElBQUksQ0FBQ00sR0FBTCxDQUFTRixLQUFLLEdBQUMsQ0FBZixDQUE1QyxHQUFnRUosSUFBSSxDQUFDTSxHQUFMLENBQVNGLEtBQUssR0FBQyxDQUFmLENBQTlHO0FBQ0EsTUFBSUksQ0FBQyxHQUFHLElBQUlSLElBQUksQ0FBQ1MsS0FBTCxDQUFXVCxJQUFJLENBQUNVLElBQUwsQ0FBVUwsQ0FBVixDQUFYLEVBQXlCTCxJQUFJLENBQUNVLElBQUwsQ0FBVSxJQUFFTCxDQUFaLENBQXpCLENBQVo7QUFDQSxNQUFJTSxDQUFDLEdBQUdULENBQUMsR0FBR00sQ0FBWixDQVZBLENBWUE7O0FBQ0EsU0FBT0csQ0FBQyxDQUFDQyxPQUFGLENBQVUsQ0FBVixDQUFQO0FBQ0MiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxHaW92YVxcRGVza3RvcFxcUmVwb1RhbGxlcjJcXHNlcnZlcjJcXHNyY1xcc2VydmljZSIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgbm9vbHMgIGZyb20gJ25vb2xzJztcclxuY29uc3QgZmxvd1VzZXIgPSBub29scy5jb21waWxlKHJlcXVpcmUucmVzb2x2ZSgnLi4vcmVzL3VzZXJfcmVnbGFzLm5vb2xzJykpO1xyXG5jb25zdCBVc2VyRGF0b3MgPSBmbG93VXNlci5nZXREZWZpbmVkKCdVc3VhcmlvRGF0b3MnKTtcclxuXHJcbmNvbnN0IGZsb3dEZWxpdmVyeSA9IG5vb2xzLmNvbXBpbGUocmVxdWlyZS5yZXNvbHZlKCcuLi9yZXMvZGVsaXZlcnlfcmVnbGFzLm5vb2xzJykpO1xyXG5jb25zdCBEZWxpdmVyeURhdG9zID0gZmxvd0RlbGl2ZXJ5LmdldERlZmluZWQoJ0RlbGl2ZXJ5RGF0b3MnKTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRQcmVjaW9FbnZpb1BvclJlZ2xhcyhuZGlhLCBob3JhLCBlbnZpbywga21zLCBjYW50UGVkaWRvcyxuaXZlbCwgcG9pbnRzKVxyXG57XHJcbiAgICB2YXIgdXNlcnNEYXRhICA9IFsgbmV3ICBVc2VyRGF0b3Moe2VudmlvOiBlbnZpbywga21zOiBrbXMsIGNhbnRpZGFkUGVkaWRvczogY2FudFBlZGlkb3MsIG5kaWE6bmRpYSAsIGhvcmE6IGhvcmEsIG5pdmVsOm5pdmVsLCBwdW50b3M6IHBvaW50c30pIF07XHJcbiAgICB2YXIgc2Vzc2lvbiA9IGZsb3dVc2VyLmdldFNlc3Npb24uYXBwbHkoZmxvd1VzZXIsIHVzZXJzRGF0YSk7XHJcbiAgIFxyXG4gICAgICB2YXIgcj0wO1xyXG4gICAgIFxyXG4gICAgIHNlc3Npb24ubWF0Y2goKTtcclxuICAgIFxyXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHVzZXJzRGF0YS5sZW5ndGg7IGkrKykgeyBcclxuICAgICAgIHIrPXVzZXJzRGF0YVtpXS5lbnZpbztcclxuICAgICAgfVxyXG4gICAgICBzZXNzaW9uLmRpc3Bvc2UoKTtcclxuICBcclxuICAgICAgcmV0dXJuIHI7XHJcbn1cclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0UG9yY2VudGFqZUVudmlvUG9yUmVnbGFzKG5kaWEsIGhvcmEsIGVudmlvLCBjYW50aWRhZEVudmlvc0RpYSxuaXZlbCwgcG9pbnRzKVxyXG57XHJcbiAgICB2YXIgZGVsaXZlcnlEYXRhICA9IFsgbmV3ICBEZWxpdmVyeURhdG9zKHtlbnZpbzogZW52aW8sIGNhbnRpZGFkRW52aW9zRGlhOiBjYW50aWRhZEVudmlvc0RpYSwgbmRpYTpuZGlhICwgaG9yYTogaG9yYSwgbml2ZWw6bml2ZWwsIHB1bnRvczogcG9pbnRzfSkgXTtcclxuICAgIHZhciBzZXNzaW9uID0gZmxvd0RlbGl2ZXJ5LmdldFNlc3Npb24uYXBwbHkoZmxvd0RlbGl2ZXJ5LCBkZWxpdmVyeURhdGEpO1xyXG4gICAgIHZhciByPTA7XHJcblxyXG4gICAgIHNlc3Npb24ubWF0Y2goKTtcclxuICAgIFxyXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRlbGl2ZXJ5RGF0YS5sZW5ndGg7IGkrKykgeyBcclxuICAgICAgIHIrPWRlbGl2ZXJ5RGF0YVtpXS5yZXN1bHRhZG87XHJcbiAgICAgIH1cclxuICAgICAgc2Vzc2lvbi5kaXNwb3NlKCk7XHJcbiAgXHJcbiAgICAgIHJldHVybiByO1xyXG4gIFxyXG4gICAgICB9XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vZGV2dWVsdmUgbG9zIGttcyBlbnRyZSBkb3MgcG9zaWNpb25lc1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0S2lsb21ldHJvcyAobGF0MSAsIGxvbjEsIGxhdDIsIGxvbjIpXHJcbntcclxuLy9sb2NhbFxyXG5mdW5jdGlvbiByYWQgICh4KSB7cmV0dXJuIHgqTWF0aC5QSS8xODA7fVxyXG4gLy9yYWRpbyBkZSBsYSB0aWVycmEgZW4ga21cclxudmFyIFIgPSA2LjM3ODEzNztcclxudmFyIGRMYXQgPSByYWQoIGxhdDIgLSBsYXQxICk7XHJcbnZhciBkTG9uZyA9IHJhZCggbG9uMiAtIGxvbjEgKTtcclxuXHJcbnZhciBhID0gTWF0aC5zaW4oZExhdC8yKSAqIE1hdGguc2luKGRMYXQvMikgKyBNYXRoLmNvcyhyYWQobGF0MSkpICogTWF0aC5jb3MocmFkKGxhdDIpKSAqIE1hdGguc2luKGRMb25nLzIpICogTWF0aC5zaW4oZExvbmcvMik7XHJcbnZhciBjID0gMiAqIE1hdGguYXRhbjIoTWF0aC5zcXJ0KGEpLCBNYXRoLnNxcnQoMS1hKSk7XHJcbnZhciBkID0gUiAqIGM7XHJcblxyXG4vL3JldG9ybmEgdHJlcyBkZWNpbWFsZXNcclxucmV0dXJuIGQudG9GaXhlZCgzKTtcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Service.js"
      ],
      "names": [
        "flowUser",
        "nools",
        "compile",
        "require",
        "resolve",
        "UserDatos",
        "getDefined",
        "flowDelivery",
        "DeliveryDatos",
        "getPrecioEnvioPorReglas",
        "ndia",
        "hora",
        "envio",
        "kms",
        "cantPedidos",
        "nivel",
        "points",
        "usersData",
        "cantidadPedidos",
        "puntos",
        "session",
        "getSession",
        "apply",
        "r",
        "match",
        "i",
        "length",
        "dispose",
        "getPorcentajeEnvioPorReglas",
        "cantidadEnviosDia",
        "deliveryData",
        "resultado",
        "getKilometros",
        "lat1",
        "lon1",
        "lat2",
        "lon2",
        "rad",
        "x",
        "Math",
        "PI",
        "R",
        "dLat",
        "dLong",
        "a",
        "sin",
        "cos",
        "c",
        "atan2",
        "sqrt",
        "d",
        "toFixed"
      ],
      "mappings": ";;;;;;;;;AACA;;;;AACA,IAAMA,QAAQ,GAAGC,kBAAMC,OAAN,CAAcC,OAAO,CAACC,OAAR,CAAgB,0BAAhB,CAAd,CAAjB;;AACA,IAAMC,SAAS,GAAGL,QAAQ,CAACM,UAAT,CAAoB,cAApB,CAAlB;;AAEA,IAAMC,YAAY,GAAGN,kBAAMC,OAAN,CAAcC,OAAO,CAACC,OAAR,CAAgB,8BAAhB,CAAd,CAArB;;AACA,IAAMI,aAAa,GAAGD,YAAY,CAACD,UAAb,CAAwB,eAAxB,CAAtB;;AAEO,SAASG,uBAAT,CAAiCC,IAAjC,EAAuCC,IAAvC,EAA6CC,KAA7C,EAAoDC,GAApD,EAAyDC,WAAzD,EAAqEC,KAArE,EAA4EC,MAA5E,EACP;AACI,MAAIC,SAAS,GAAI,CAAE,IAAKZ,SAAL,CAAe;AAACO,IAAAA,KAAK,EAAEA,KAAR;AAAeC,IAAAA,GAAG,EAAEA,GAApB;AAAyBK,IAAAA,eAAe,EAAEJ,WAA1C;AAAuDJ,IAAAA,IAAI,EAACA,IAA5D;AAAmEC,IAAAA,IAAI,EAAEA,IAAzE;AAA+EI,IAAAA,KAAK,EAACA,KAArF;AAA4FI,IAAAA,MAAM,EAAEH;AAApG,GAAf,CAAF,CAAjB;AACA,MAAII,OAAO,GAAGpB,QAAQ,CAACqB,UAAT,CAAoBC,KAApB,CAA0BtB,QAA1B,EAAoCiB,SAApC,CAAd;AAEE,MAAIM,CAAC,GAAC,CAAN;AAEDH,EAAAA,OAAO,CAACI,KAAR;;AAEC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,SAAS,CAACS,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AAC1CF,IAAAA,CAAC,IAAEN,SAAS,CAACQ,CAAD,CAAT,CAAab,KAAhB;AACA;;AACDQ,EAAAA,OAAO,CAACO,OAAR;AAEA,SAAOJ,CAAP;AACL;;AAGM,SAASK,2BAAT,CAAqClB,IAArC,EAA2CC,IAA3C,EAAiDC,KAAjD,EAAwDiB,iBAAxD,EAA0Ed,KAA1E,EAAiFC,MAAjF,EACP;AACI,MAAIc,YAAY,GAAI,CAAE,IAAKtB,aAAL,CAAmB;AAACI,IAAAA,KAAK,EAAEA,KAAR;AAAeiB,IAAAA,iBAAiB,EAAEA,iBAAlC;AAAqDnB,IAAAA,IAAI,EAACA,IAA1D;AAAiEC,IAAAA,IAAI,EAAEA,IAAvE;AAA6EI,IAAAA,KAAK,EAACA,KAAnF;AAA0FI,IAAAA,MAAM,EAAEH;AAAlG,GAAnB,CAAF,CAApB;AACA,MAAII,OAAO,GAAGb,YAAY,CAACc,UAAb,CAAwBC,KAAxB,CAA8Bf,YAA9B,EAA4CuB,YAA5C,CAAd;AACC,MAAIP,CAAC,GAAC,CAAN;AAEAH,EAAAA,OAAO,CAACI,KAAR;;AAEC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,YAAY,CAACJ,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC7CF,IAAAA,CAAC,IAAEO,YAAY,CAACL,CAAD,CAAZ,CAAgBM,SAAnB;AACA;;AACDX,EAAAA,OAAO,CAACO,OAAR;AAEA,SAAOJ,CAAP;AAEC,C,CAUP;;;AACO,SAASS,aAAT,CAAwBC,IAAxB,EAA+BC,IAA/B,EAAqCC,IAArC,EAA2CC,IAA3C,EACP;AACA;AACA,WAASC,GAAT,CAAeC,CAAf,EAAkB;AAAC,WAAOA,CAAC,GAACC,IAAI,CAACC,EAAP,GAAU,GAAjB;AAAsB,GAFzC,CAGC;;;AACD,MAAIC,CAAC,GAAG,QAAR;AACA,MAAIC,IAAI,GAAGL,GAAG,CAAEF,IAAI,GAAGF,IAAT,CAAd;AACA,MAAIU,KAAK,GAAGN,GAAG,CAAED,IAAI,GAAGF,IAAT,CAAf;AAEA,MAAIU,CAAC,GAAGL,IAAI,CAACM,GAAL,CAASH,IAAI,GAAC,CAAd,IAAmBH,IAAI,CAACM,GAAL,CAASH,IAAI,GAAC,CAAd,CAAnB,GAAsCH,IAAI,CAACO,GAAL,CAAST,GAAG,CAACJ,IAAD,CAAZ,IAAsBM,IAAI,CAACO,GAAL,CAAST,GAAG,CAACF,IAAD,CAAZ,CAAtB,GAA4CI,IAAI,CAACM,GAAL,CAASF,KAAK,GAAC,CAAf,CAA5C,GAAgEJ,IAAI,CAACM,GAAL,CAASF,KAAK,GAAC,CAAf,CAA9G;AACA,MAAII,CAAC,GAAG,IAAIR,IAAI,CAACS,KAAL,CAAWT,IAAI,CAACU,IAAL,CAAUL,CAAV,CAAX,EAAyBL,IAAI,CAACU,IAAL,CAAU,IAAEL,CAAZ,CAAzB,CAAZ;AACA,MAAIM,CAAC,GAAGT,CAAC,GAAGM,CAAZ,CAVA,CAYA;;AACA,SAAOG,CAAC,CAACC,OAAF,CAAU,CAAV,CAAP;AACC",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\service",
      "sourcesContent": [
        "\r\nimport nools  from 'nools';\r\nconst flowUser = nools.compile(require.resolve('../res/user_reglas.nools'));\r\nconst UserDatos = flowUser.getDefined('UsuarioDatos');\r\n\r\nconst flowDelivery = nools.compile(require.resolve('../res/delivery_reglas.nools'));\r\nconst DeliveryDatos = flowDelivery.getDefined('DeliveryDatos');\r\n\r\nexport function getPrecioEnvioPorReglas(ndia, hora, envio, kms, cantPedidos,nivel, points)\r\n{\r\n    var usersData  = [ new  UserDatos({envio: envio, kms: kms, cantidadPedidos: cantPedidos, ndia:ndia , hora: hora, nivel:nivel, puntos: points}) ];\r\n    var session = flowUser.getSession.apply(flowUser, usersData);\r\n   \r\n      var r=0;\r\n     \r\n     session.match();\r\n    \r\n      for (var i = 0; i < usersData.length; i++) { \r\n       r+=usersData[i].envio;\r\n      }\r\n      session.dispose();\r\n  \r\n      return r;\r\n}\r\n\r\n\r\nexport function getPorcentajeEnvioPorReglas(ndia, hora, envio, cantidadEnviosDia,nivel, points)\r\n{\r\n    var deliveryData  = [ new  DeliveryDatos({envio: envio, cantidadEnviosDia: cantidadEnviosDia, ndia:ndia , hora: hora, nivel:nivel, puntos: points}) ];\r\n    var session = flowDelivery.getSession.apply(flowDelivery, deliveryData);\r\n     var r=0;\r\n\r\n     session.match();\r\n    \r\n      for (var i = 0; i < deliveryData.length; i++) { \r\n       r+=deliveryData[i].resultado;\r\n      }\r\n      session.dispose();\r\n  \r\n      return r;\r\n  \r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//devuelve los kms entre dos posiciones\r\nexport function getKilometros (lat1 , lon1, lat2, lon2)\r\n{\r\n//local\r\nfunction rad  (x) {return x*Math.PI/180;}\r\n //radio de la tierra en km\r\nvar R = 6.378137;\r\nvar dLat = rad( lat2 - lat1 );\r\nvar dLong = rad( lon2 - lon1 );\r\n\r\nvar a = Math.sin(dLat/2) * Math.sin(dLat/2) + Math.cos(rad(lat1)) * Math.cos(rad(lat2)) * Math.sin(dLong/2) * Math.sin(dLong/2);\r\nvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\nvar d = R * c;\r\n\r\n//retorna tres decimales\r\nreturn d.toFixed(3);\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415618
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\rutas\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\rutas\\\\comercios.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas\\comercios.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas\\comercios.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas\\comercios.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas",
        "sourceFileName": "comercios.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _comercioController = require(\"../controllers/comercioController\");\n\nvar _userController = require(\"../controllers/userController\");\n\nvar router = (0, _express.Router)();\n/** Controladores */\n\n/** Rutas */\n\n/** Obtener todos los productos */\nrouter.get('/all', _userController.ensureToken, _userController.chequeoToken, _comercioController.getAll);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbWVyY2lvcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJnZXQiLCJlbnN1cmVUb2tlbiIsImNoZXF1ZW9Ub2tlbiIsImdldEFsbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQU1BOztBQUlBOztBQVJBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUVJOztBQVdKOztBQUNBO0FBQ0FBLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLE1BQVgsRUFBbUJDLDJCQUFuQixFQUErQkMsNEJBQS9CLEVBQTRDQywwQkFBNUM7ZUFHZUosTSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEdpb3ZhXFxEZXNrdG9wXFxSZXBvVGFsbGVyMlxcc2VydmVyMlxcc3JjXFxydXRhcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Um91dGVyfSBmcm9tICdleHByZXNzJ1xyXG5cclxuY29uc3Qgcm91dGVyID0gUm91dGVyKClcclxuXHJcbiAgICAvKiogQ29udHJvbGFkb3JlcyAqL1xyXG5cclxuaW1wb3J0IHsgIFxyXG4gICAgZ2V0QWxsIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvY29tZXJjaW9Db250cm9sbGVyJztcclxuXHJcblxyXG5pbXBvcnQgeyBcclxuICAgICBlbnN1cmVUb2tlbixjaGVxdWVvVG9rZW5cclxuICAgIH0gZnJvbSAnLi4vY29udHJvbGxlcnMvdXNlckNvbnRyb2xsZXInO1xyXG5cclxuXHJcbi8qKiBSdXRhcyAqL1xyXG4vKiogT2J0ZW5lciB0b2RvcyBsb3MgcHJvZHVjdG9zICovXHJcbnJvdXRlci5nZXQoJy9hbGwnLCBlbnN1cmVUb2tlbixjaGVxdWVvVG9rZW4sZ2V0QWxsICk7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgcm91dGVyIl19",
    "map": {
      "version": 3,
      "sources": [
        "comercios.js"
      ],
      "names": [
        "router",
        "get",
        "ensureToken",
        "chequeoToken",
        "getAll"
      ],
      "mappings": ";;;;;;;AAAA;;AAMA;;AAIA;;AARA,IAAMA,MAAM,GAAG,sBAAf;AAEI;;AAWJ;;AACA;AACAA,MAAM,CAACC,GAAP,CAAW,MAAX,EAAmBC,2BAAnB,EAA+BC,4BAA/B,EAA4CC,0BAA5C;eAGeJ,M",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\rutas",
      "sourcesContent": [
        "import {Router} from 'express'\r\n\r\nconst router = Router()\r\n\r\n    /** Controladores */\r\n\r\nimport {  \r\n    getAll } from '../controllers/comercioController';\r\n\r\n\r\nimport { \r\n     ensureToken,chequeoToken\r\n    } from '../controllers/userController';\r\n\r\n\r\n/** Rutas */\r\n/** Obtener todos los productos */\r\nrouter.get('/all', ensureToken,chequeoToken,getAll );\r\n\r\n\r\nexport default router"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415603
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\controllers\\\\comercioController.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers\\comercioController.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers\\comercioController.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers\\comercioController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers",
        "sourceFileName": "comercioController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAll = getAll;\n\nvar _Comercio = _interopRequireDefault(require(\"../models/Comercio\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/** Obtener todos los comercios */\nfunction getAll(_x, _x2) {\n  return _getAll.apply(this, arguments);\n}\n\nfunction _getAll() {\n  _getAll = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var comercios;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _Comercio[\"default\"].findAll();\n\n          case 3:\n            comercios = _context.sent;\n\n            if (comercios) {\n              res.json({\n                message: 'todos los comercios registrados',\n                comercios: comercios\n              }); //res.json(['John', 'Betty', 'Hal']);\n            } else {\n              res.status(500).json({\n                message: 'No se encontro registros de comercios.'\n              });\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: 'algo salio mal obteniendo los comercios',\n              data: {\n                error: _context.t0\n              }\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _getAll.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbWVyY2lvQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJnZXRBbGwiLCJyZXEiLCJyZXMiLCJDb21lcmNpbyIsImZpbmRBbGwiLCJjb21lcmNpb3MiLCJqc29uIiwibWVzc2FnZSIsInN0YXR1cyIsImRhdGEiLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7OztBQUdBO1NBQ3NCQSxNOzs7Ozs7OzBCQUFmLGlCQUFzQkMsR0FBdEIsRUFBMEJDLEdBQTFCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFPdUJDLHFCQUFTQyxPQUFULEVBUHZCOztBQUFBO0FBT0tDLFlBQUFBLFNBUEw7O0FBU0MsZ0JBQUdBLFNBQUgsRUFBYTtBQUVWSCxjQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBUztBQUVKQyxnQkFBQUEsT0FBTyxFQUFDLGlDQUZKO0FBR0pGLGdCQUFBQSxTQUFTLEVBQVRBO0FBSEksZUFBVCxFQUZVLENBU1Q7QUFDSCxhQVZELE1BV0k7QUFDQUgsY0FBQUEsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkYsSUFBaEIsQ0FBcUI7QUFDakJDLGdCQUFBQSxPQUFPLEVBQUM7QUFEUyxlQUFyQjtBQUdIOztBQXhCRjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQTZCR0wsWUFBQUEsR0FBRyxDQUFDTSxNQUFKLENBQVcsR0FBWCxFQUFnQkYsSUFBaEIsQ0FBcUI7QUFDakJDLGNBQUFBLE9BQU8sRUFBQyx5Q0FEUztBQUVqQkUsY0FBQUEsSUFBSSxFQUFDO0FBQUNDLGdCQUFBQSxLQUFLO0FBQU47QUFGWSxhQUFyQjs7QUE3Qkg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRyIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEdpb3ZhXFxEZXNrdG9wXFxSZXBvVGFsbGVyMlxcc2VydmVyMlxcc3JjXFxjb250cm9sbGVycyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb21lcmNpbyBmcm9tICcuLi9tb2RlbHMvQ29tZXJjaW8nO1xyXG5cclxuXHJcbi8qKiBPYnRlbmVyIHRvZG9zIGxvcyBjb21lcmNpb3MgKi9cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFsbChyZXEscmVzKXtcclxuXHJcbiAgICBcclxuICAgIHRyeSB7XHJcbiAgICAgICAgIFxyXG4gICAgICAgIFxyXG5cclxuICAgICAgICBsZXQgY29tZXJjaW9zID0gYXdhaXQgQ29tZXJjaW8uZmluZEFsbCgpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGlmKGNvbWVyY2lvcyl7XHJcblxyXG4gICAgICAgICAgIHJlcy5qc29uKHtcclxuXHJcbiAgICAgICAgICAgICAgICBtZXNzYWdlOid0b2RvcyBsb3MgY29tZXJjaW9zIHJlZ2lzdHJhZG9zJyxcclxuICAgICAgICAgICAgICAgIGNvbWVyY2lvc1xyXG5cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICAvL3Jlcy5qc29uKFsnSm9obicsICdCZXR0eScsICdIYWwnXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6J05vIHNlIGVuY29udHJvIHJlZ2lzdHJvcyBkZSBjb21lcmNpb3MuJyAgICAgIFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgIFxyXG4gICAgICAgXHJcbiAgXHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7XHJcbiAgICAgICAgICAgICAgbWVzc2FnZTonYWxnbyBzYWxpbyBtYWwgb2J0ZW5pZW5kbyBsb3MgY29tZXJjaW9zJyxcclxuICAgICAgICAgICAgICBkYXRhOntlcnJvcn1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICB9IFxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "comercioController.js"
      ],
      "names": [
        "getAll",
        "req",
        "res",
        "Comercio",
        "findAll",
        "comercios",
        "json",
        "message",
        "status",
        "data",
        "error"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;AAGA;SACsBA,M;;;;;;;0BAAf,iBAAsBC,GAAtB,EAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAOuBC,qBAASC,OAAT,EAPvB;;AAAA;AAOKC,YAAAA,SAPL;;AASC,gBAAGA,SAAH,EAAa;AAEVH,cAAAA,GAAG,CAACI,IAAJ,CAAS;AAEJC,gBAAAA,OAAO,EAAC,iCAFJ;AAGJF,gBAAAA,SAAS,EAATA;AAHI,eAAT,EAFU,CAST;AACH,aAVD,MAWI;AACAH,cAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,gBAAAA,OAAO,EAAC;AADS,eAArB;AAGH;;AAxBF;AAAA;;AAAA;AAAA;AAAA;AA6BGL,YAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB;AACjBC,cAAAA,OAAO,EAAC,yCADS;AAEjBE,cAAAA,IAAI,EAAC;AAACC,gBAAAA,KAAK;AAAN;AAFY,aAArB;;AA7BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\controllers",
      "sourcesContent": [
        "import Comercio from '../models/Comercio';\r\n\r\n\r\n/** Obtener todos los comercios */\r\nexport async function getAll(req,res){\r\n\r\n    \r\n    try {\r\n         \r\n        \r\n\r\n        let comercios = await Comercio.findAll();\r\n        \r\n        if(comercios){\r\n\r\n           res.json({\r\n\r\n                message:'todos los comercios registrados',\r\n                comercios\r\n\r\n            });\r\n\r\n            //res.json(['John', 'Betty', 'Hal']);\r\n        }\r\n        else{\r\n            res.status(500).json({\r\n                message:'No se encontro registros de comercios.'      \r\n            })\r\n        }\r\n       \r\n       \r\n  \r\n      } catch (error) {\r\n          res.status(500).json({\r\n              message:'algo salio mal obteniendo los comercios',\r\n              data:{error}\r\n          });\r\n      } \r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415537
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"filename\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\\\\src\\\\models\\\\Comercio.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Giova\\\\Desktop\\\\RepoTaller2\\\\server2\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\Comercio.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\Comercio.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models\\Comercio.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
        "sourceFileName": "Comercio.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* Defino modelo de los datos */\nvar Comercio = _database.sequelize.define('comercio', {\n  com_id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  com_direccion: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  com_descripcion: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  com_latitud: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  com_longitud: {\n    type: _sequelize[\"default\"].DOUBLE\n  },\n  com_estado: {\n    type: _sequelize[\"default\"].INTEGER\n  }\n});\n\nvar _default = Comercio;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNvbWVyY2lvLmpzIl0sIm5hbWVzIjpbIkNvbWVyY2lvIiwic2VxdWVsaXplIiwiZGVmaW5lIiwiY29tX2lkIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJwcmltYXJ5S2V5IiwiY29tX2RpcmVjY2lvbiIsIlRFWFQiLCJjb21fZGVzY3JpcGNpb24iLCJjb21fbGF0aXR1ZCIsIkRPVUJMRSIsImNvbV9sb25naXR1ZCIsImNvbV9lc3RhZG8iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7OztBQUVBO0FBQ0EsSUFBTUEsUUFBUSxHQUFFQyxvQkFBVUMsTUFBVixDQUFpQixVQUFqQixFQUE0QjtBQUN4Q0MsRUFBQUEsTUFBTSxFQUFDO0FBQ0hDLElBQUFBLElBQUksRUFBRUMsc0JBQVVDLE9BRGI7QUFFSEMsSUFBQUEsVUFBVSxFQUFFO0FBRlQsR0FEaUM7QUFLeENDLEVBQUFBLGFBQWEsRUFBQztBQUNWSixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQUROLEdBTDBCO0FBUXhDQyxFQUFBQSxlQUFlLEVBQUM7QUFDWk4sSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFESixHQVJ3QjtBQVl4Q0UsRUFBQUEsV0FBVyxFQUFFO0FBQ1RQLElBQUFBLElBQUksRUFBRUMsc0JBQVVPO0FBRFAsR0FaMkI7QUFnQnhDQyxFQUFBQSxZQUFZLEVBQUM7QUFDVFQsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVU87QUFEUCxHQWhCMkI7QUFvQnhDRSxFQUFBQSxVQUFVLEVBQUM7QUFDUFYsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUM7QUFEVDtBQXBCNkIsQ0FBNUIsQ0FBaEI7O2VBeUJlTixRIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcR2lvdmFcXERlc2t0b3BcXFJlcG9UYWxsZXIyXFxzZXJ2ZXIyXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcclxuaW1wb3J0IHtzZXF1ZWxpemV9IGZyb20gJy4uL2RhdGFiYXNlL2RhdGFiYXNlJztcclxuXHJcbi8qIERlZmlubyBtb2RlbG8gZGUgbG9zIGRhdG9zICovXHJcbmNvbnN0IENvbWVyY2lvPSBzZXF1ZWxpemUuZGVmaW5lKCdjb21lcmNpbycse1xyXG4gICAgY29tX2lkOntcclxuICAgICAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUixcclxuICAgICAgICBwcmltYXJ5S2V5OiB0cnVlXHJcbiAgICB9LFxyXG4gICAgY29tX2RpcmVjY2lvbjp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLlRFWFRcclxuICAgIH0sXHJcbiAgICBjb21fZGVzY3JpcGNpb246e1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXHJcbiAgICB9LFxyXG4gICAgXHJcbiAgICBjb21fbGF0aXR1ZDoge1xyXG4gICAgICAgIHR5cGU6IFNlcXVlbGl6ZS5ET1VCTEVcclxuICAgIH0sXHJcbiAgICBcclxuICAgIGNvbV9sb25naXR1ZDp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLkRPVUJMRVxyXG4gICAgfSxcclxuICAgIFxyXG4gICAgY29tX2VzdGFkbzp7XHJcbiAgICAgICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVJcclxuICAgIH1cclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb21lcmNpbzsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "Comercio.js"
      ],
      "names": [
        "Comercio",
        "sequelize",
        "define",
        "com_id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "com_direccion",
        "TEXT",
        "com_descripcion",
        "com_latitud",
        "DOUBLE",
        "com_longitud",
        "com_estado"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA;AACA,IAAMA,QAAQ,GAAEC,oBAAUC,MAAV,CAAiB,UAAjB,EAA4B;AACxCC,EAAAA,MAAM,EAAC;AACHC,IAAAA,IAAI,EAAEC,sBAAUC,OADb;AAEHC,IAAAA,UAAU,EAAE;AAFT,GADiC;AAKxCC,EAAAA,aAAa,EAAC;AACVJ,IAAAA,IAAI,EAAEC,sBAAUI;AADN,GAL0B;AAQxCC,EAAAA,eAAe,EAAC;AACZN,IAAAA,IAAI,EAAEC,sBAAUI;AADJ,GARwB;AAYxCE,EAAAA,WAAW,EAAE;AACTP,IAAAA,IAAI,EAAEC,sBAAUO;AADP,GAZ2B;AAgBxCC,EAAAA,YAAY,EAAC;AACTT,IAAAA,IAAI,EAAEC,sBAAUO;AADP,GAhB2B;AAoBxCE,EAAAA,UAAU,EAAC;AACPV,IAAAA,IAAI,EAAEC,sBAAUC;AADT;AApB6B,CAA5B,CAAhB;;eAyBeN,Q",
      "sourceRoot": "C:\\Users\\Giova\\Desktop\\RepoTaller2\\server2\\src\\models",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\r\nimport {sequelize} from '../database/database';\r\n\r\n/* Defino modelo de los datos */\r\nconst Comercio= sequelize.define('comercio',{\r\n    com_id:{\r\n        type: Sequelize.INTEGER,\r\n        primaryKey: true\r\n    },\r\n    com_direccion:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    com_descripcion:{\r\n        type: Sequelize.TEXT\r\n    },\r\n    \r\n    com_latitud: {\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    \r\n    com_longitud:{\r\n        type: Sequelize.DOUBLE\r\n    },\r\n    \r\n    com_estado:{\r\n        type: Sequelize.INTEGER\r\n    }\r\n});\r\n\r\nexport default Comercio;"
      ]
    },
    "sourceType": "script",
    "mtime": 1570712415587
  }
}